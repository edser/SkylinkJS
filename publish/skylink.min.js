/*! skylinkjs - v0.6.17 - 2017-02-05 */
!function(globals){function Skylink(instanceLabel){this.INSTANCE_LABEL="string"==typeof instanceLabel&&instanceLabel&&"_"!==instanceLabel?instanceLabel:"in_"+Date.now()+Math.floor(1e4*Math.random()),this._debugOptions={level:this.LOG_LEVEL.ERROR,instanceId:Date.now()+"_"+Math.floor(1e4*Math.random())+"_"+performance.now(),instanceLabel:this.INSTANCE_LABEL,trace:!1,storeLogs:!1,printInstanceLabel:!1,printTimeStamp:!1},this._enableDataChannel=!0,this._dataChannels={},this._dataTransfers={},this._dataStreams={},this._peerCandidatesQueue={},this._peerEndOfCandidatesCounter={},this._gatheredCandidates={},this._filterCandidatesType={host:!1,srflx:!1,relay:!1},this._enableIceTrickle=!0,this._enableSTUN=!0,this._enableTURN=!0,this._usePublicSTUN=!0,this._retryCounters={},this._peerConnections={},this._peerStats={},this._isUsingPlugin=!1,this._TURNTransport="any",this._peerInformations={},this._user=null,this._userData="",this._peerPriorityWeight=0,this._autoIntroduce=!0,this._isPrivileged=!1,this._peerList=null,this._selectedRoom=null,this._roomLocked=!1,this._inRoom=!1,this._EVENTS={},this._onceEvents={},this._timestamp={socketMessage:null,shareScreen:null,refreshConnection:null,getUserMedia:null,lastRestart:null},this._throttlingTimeouts={shareScreen:1e4,refreshConnection:5e3,getUserMedia:0},this._throttlingShouldThrowError=!1,this._socketSession={},this._socketMessageQueue=[],this._socketMessageTimeout=null,this._socketPorts={"http:":[80,3e3],"https:":[443,3443]},this._channelOpen=!1,this._signalingServer=null,this._signalingServerProtocol=window.location.protocol,this._signalingServerPort=null,this._socket=null,this._socketTimeout=2e4,this._socketUseXDR=!1,this._enableIceRestart="firefox"!==window.webrtcDetectedBrowser||window.webrtcDetectedVersion>=48,this._hasMCU=!1,this._forceSSL=!1,this._forceTURNSSL=!1,this._forceTURN=!1,this._path=null,this._roomServer="//api.temasys.io",this._appKey=null,this._defaultRoom=null,this._roomStart=null,this._roomDuration=null,this._roomCredentials=null,this._readyState=0,this._key=null,this._appKeyOwner=null,this._room=null,this._peerMessagesStamps={},this._audioFallback=!1,this._streams={userMedia:null,screenshare:null},this._streamsDefaultSettings={userMedia:{audio:{stereo:!1},video:{resolution:{width:640,height:480},frameRate:50}},screenshare:{video:!0}},this._streamsMutedSettings={audioMuted:!1,videoMuted:!1},this._streamsBandwidthSettings={googleX:{},bAS:{}},this._streamsStoppedCbs={},this._streamsSession={},this._selectedAudioCodec="auto",this._selectedVideoCodec="auto",this._disableVideoFecCodecs=!1,this._disableComfortNoiseCodec=!1,this._disableREMB=!1,this._sdpSettings={connection:{audio:!0,video:!0,data:!0},direction:{audio:{send:!0,receive:!0},video:{send:!0,receive:!0}}},this._publishOnly=!1,this._parentId=null,this._recordings={},this._currentRecordingId=!1,this._recordingStartInterval=null,this._mcuUseRenegoRestart=!1,this._turnServer=null,this._socketServer=null,this._currentCodecSupport=null,this._sdpSessions={}}var DatachannelFactory=function(connection,options){var channel={connection:null,states:{rejected:!1,closing:!1,isPlugin:AdapterJS&&AdapterJS.WebRTCPlugin&&AdapterJS.WebRTCPlugin.plugin&&AdapterJS.WebRTCPlugin.plugin.VERSION},userId:options.userId,peerId:options.peerId,instanceId:options.instanceId,label:options.label,prop:options.prop,type:"main"===options.prop?Skylink.prototype.DATA_CHANNEL_TYPE.MESSAGING:Skylink.prototype.DATA_CHANNEL_TYPE.DATA,custom:{},fr:new FileReader},eventManager={listeners:{},emit:function(evt,params){"state"===evt?(params.type=channel.type,params.label=channel.label,params.bufferedAmount=channel.connection.bufferedAmount||0,params.bufferedAmountLowThreshold=channel.connection.bufferedAmountLowThreshold||0,params.binaryType=channel.connection.binaryType||"arraybuffer",params.messageErrorType=params.messageErrorType||null,params.error=params.error||null,logFn("log",'State "'+params.state+'" ->',params)):"data"===evt&&logFn("debug","Data "+(params.type?'"'+params.type+'" protocol ->':"chunk"),params.type?params:"(Size: "+(params.size||params.length||params.byteLength)+")"),UtilsFactory.forEach(eventManager.listeners[evt]||[],function(fn){fn(params)})}},logFn=function(level,message,obj){Log[level](channel.instanceId,[channel.peerId,"Datachannel",channel.prop,message],obj)},onOpenEventFn=function(){var fn=function(){eventManager.emit("state",{state:Skylink.prototype.DATA_CHANNEL_STATE.OPEN})};channel.connection.readyState===Skylink.prototype.DATA_CHANNEL_STATE.OPEN?setTimeout(fn,1):(setTimeout(function(){eventManager.emit("state",{state:channel.connection.readyState})},1),channel.connection.onopen=function(){setTimeout(fn,1)})},onCloseEventFn=function(){var fn=function(){channel.states.closing||(channel.states.closing=!0,eventManager.emit("state",{state:Skylink.prototype.DATA_CHANNEL_STATE.CLOSING})),setTimeout(function(){eventManager.emit("state",{state:Skylink.prototype.DATA_CHANNEL_STATE.CLOSED}),channel.states.rejected||channel.type===Skylink.prototype.DATA_CHANNEL_TYPE.MESSAGING&&(logFn("debug",'Reviving "main" connection.'),setTimeout(openChannelFn,100))},1)};if("firefox"===window.webrtcDetectedBrowser){var triggered=!1,block=0;channel.connection.onclose=function(){triggered||(triggered=!0,fn())};var intervalChecker=setInterval(function(){channel.connection.readyState===Skylink.prototype.DATA_CHANNEL_STATE.CLOSED||triggered||5===block?(clearInterval(intervalChecker),triggered||(triggered=!0,fn())):channel.connection.readyState===Skylink.prototype.DATA_CHANNEL_STATE.CLOSING&&block++},1e3)}else channel.connection.onclose=fn},onMessageEventFn=function(){channel.connection.onmessage=function(evt){var data=evt.data||evt;if(data&&"string"==typeof data)try{var protocol=JSON.parse(data);eventManager.emit("data",protocol)}catch(error){if(data.indexOf("{")>-1&&data.indexOf("}")===data.length-1)return logFn("error","Dropping received data as due to incorrect JSON parsing ->",{data:data,size:data.length||data.size,error:error}),void eventManager.emit("state",{state:Skylink.prototype.DATA_CHANNEL_STATE.ERROR,error:error});eventManager.emit("data",data)}else if(data instanceof Blob)eventManager.emit("data",data);else{var dataToBlob=new Blob([data.constructor&&"Array"===data.constructor.name?new Int8Array(data):data]);eventManager.emit("data",dataToBlob)}}},onBufferedAmountLowEventFn=function(){channel.connection.onbufferedamountlow=function(){eventManager.emit("state",{state:Skylink.prototype.DATA_CHANNEL_STATE.BUFFERED_AMOUNT_LOW})}},openChannelFn=function(){if(!channel.states.rejected&&connection){if(connection.label||connection.signalingState===Skylink.prototype.PEER_CONNECTION_STATE.CLOSED)logFn("debug","Initialising connection."),channel.connection=connection,channel.label=connection.label;else try{logFn("debug","Opening connection."),channel.connection=connection.createDataChannel(channel.label,{reliable:!0,ordered:!0})}catch(error){return logFn("error","Failed opening connection ->",error),void eventManager.emit("state",{state:Skylink.prototype.DATA_CHANNEL_STATE.CREATE_ERROR,error:error})}channel.states.closing=!1,onOpenEventFn(),onCloseEventFn(),onMessageEventFn(),onBufferedAmountLowEventFn()}};return openChannelFn(),{on:function(evt,fn){eventManager.listeners[evt]=eventManager[evt]||[],eventManager.listeners[evt].push(fn)},send:function(data,sendAsRaw,fn){if(channel.connection){var messageErrorType=data&&"object"==typeof data&&!sendAsRaw&&"MESSAGE"===data.type?Skylink.prototype.DATA_CHANNEL_MESSAGE_ERROR.MESSAGE:Skylink.prototype.DATA_CHANNEL_MESSAGE_ERROR.TRANSFER;if(channel.connection.readyState!==Skylink.prototype.DATA_CHANNEL_STATE.OPEN)return logFn("warn","Dropping data as connection is not opened ->",{data:data,size:data.size||data.length||data.byteLength,error:error}),void eventManager.emit("state",{state:Skylink.prototype.DATA_CHANNEL_STATE.SEND_MESSAGE_ERROR,error:new Error('Failed sending message as Datachannel connection state is not opened. Current readyState is "'+channel.connection.readyState+'"'),messageType:messageErrorType});try{if(sendAsRaw&&data&&"object"==typeof data){var converted=data;data instanceof Blob&&(channel.states.isPlugin||"arraybuffer"===channel.connection.binaryType)?(channel.fr.onload=function(){converted=channel.states.isPlugin?new Int8Array(channel.fr.result):channel.fr.result,channel.connection.send(converted),logFn("debug","Sending converted Blob to Arraybuffer ->(Size: "+converted.byteLength+")"),fn()},channel.fr.readAsArrayBuffer(data)):data instanceof Blob||"blob"!==channel.connection.binaryType?(channel.connection.send(data),logFn("debug","Sending "+(data.size?"Blob":"Arraybuffer")+" ->(Size: "+(data.size||data.byteLength)+")"),fn()):(converted=new Blob(data),channel.connection.send(new Blob(data)),logFn("debug","Sending converted Arraybuffer to Blob ->(Size: "+converted.size+")"),fn())}else channel.connection.send(sendAsRaw?data:JSON.stringify(data)),logFn("debug","Sending "+(sendAsRaw?"String":'"'+data.type+'" protocol')+" ->",sendAsRaw?"(Size: "+(data.length||data.size)+")":data),fn()}catch(error){logFn("error","Failed sending data ->",{data:data,size:data.size||data.length||data.byteLength,error:error}),eventManager.emit("state",{state:Skylink.prototype.DATA_CHANNEL_STATE.SEND_MESSAGE_ERROR,error:error,messageType:messageErrorType})}}},close:function(){channel.connection&&channel.connection.readyState!==Skylink.prototype.DATA_CHANNEL_STATE.CLOSED&&(logFn("debug","Closing connection."),channel.states.closing||(channel.states.closing=!0,eventManager.emit("state",{state:Skylink.prototype.DATA_CHANNEL_STATE.CLOSING})),channel.connection.close())},getInfo:function(){return{readyState:channel.connection.readyState,label:channel.label,prop:channel.prop,type:channel.type,bufferedAmount:channel.connection.bufferedAmount||0,bufferedAmountLowThreshold:channel.connection.bufferedAmountLowThreshold||0,binaryType:channel.connection.binaryType||"arraybuffer",custom:channel.custom}},setCustom:function(prop,value){channel.custom[prop]=value}}},Log=function(){var logger={header:"SkylinkJS",instances:{},storedLogs:{}},eventManager={listeners:{},emit:function(evt,params){UtilsFactory.forEach(eventManager.listeners[evt]||[],function(fn){fn(params)})}},fn=function(instanceId,prop,message,obj){var output="",printOutput="",timestamp=new Date;if(Array.isArray(message)?(output+=message[0]?" ["+message[0]+"] -":" -",output+=message[1]?" <<"+message[1]+">>":"",output+=message[2]?"("+message[2]+")":"",output+=" "+message[3]):output+=" - "+message,logger.instances[instanceId]||(logger.instances[instanceId]={level:Skylink.prototype.LOG_LEVEL.ERROR,trace:!1,storeLogs:!1,printTimeStamp:!1,printInstanceLabel:!1}),printOutput=(logger.printTimeStamp?"["+timestamp.toISOString()+"] ":"")+logger.header+(logger.instances[instanceId].printInstanceLabel?" :: "+logger.instances[instanceId].instanceLabel:"")+output,output=logger.header+output,logger.instances[instanceId].storeLogs&&(storedLogs[logger.instances[instanceId].instanceLabel]=storedLogs[logger.instances[instanceId].instanceLabel]||[],storedLogs[logger.instances[instanceId].instanceLabel].push([timestamp,prop,output,obj||null,logger.instances[instanceId].instanceLabel])),logger.instances[instanceId].pushLog&&eventManager.emit("log",{timestamp:timestamp,level:prop,message:output,object:obj,instanceLabel:logger.instances[instanceId].instanceLabel}),logger.instances[instanceId].level>=Skylink.prototype.LOG_LEVEL[prop.toUpperCase()]){var useProp="undefined"==typeof console[prop]?"log":prop;useProp=logger.instances[instanceId].trace&&"undefined"!=typeof console.trace?"trace":useProp}};return{on:function(evt,fn){eventManager.listeners[evt]=eventManager[evt]||[],eventManager.listeners[evt].push(fn)},configure:function(instanceId,options){logger.instances[instanceId]=options},debug:function(instanceId,message,obj){fn(instanceId,"debug",message,obj)},log:function(instanceId,message,obj){fn(instanceId,"log",message,obj)},info:function(instanceId,message,obj){fn(instanceId,"info",message,obj)},warn:function(instanceId,message,obj){fn(instanceId,"warn",message,obj)},error:function(instanceId,message,obj){fn(instanceId,"error",message,obj)},loopLogs:function(instanceLabel,level){var output=[],prop=null;return"number"==typeof level&&UtilsFactory.forEach(Skylink.prototype.LOG_LEVEL,function(opt,cprop){opt===level&&(prop=cprop)}),UtilsFactory.forEach(logger.storedLogs,function(logs,clabel){instanceLabel&&"string"==typeof instanceLabel&&instanceLabel!==clabel||UtilsFactory.forEach(logs,function(log){prop&&(log[1]||"").toUpperCase()!==prop||output.push(log)})}),output},clearLogs:function(instanceLabel,level){var prop=null,fn=function(instanceLabel){if(Array.isArray(logger.storedLogs[instanceLabel]))for(var i=0;i<logger.storedLogs[instanceLabel].length;i++)prop&&(logger.storedLogs[instanceLabel][i][1]||"").toUpperCase()!==prop||(logger.storedLogs[instanceLabel].splice(i,1),i--)};"number"==typeof level&&UtilsFactory.forEach(Skylink.prototype.LOG_LEVEL,function(opt,cprop){opt===level&&(prop=cprop)}),instanceLabel&&"string"==typeof instanceLabel?fn(instanceLabel):UtilsFactory.forEach(logger.storedLogs,function(logs,clabel){fn(clabel)})}}}(),UtilsFactory={clone:function(obj){if(!obj||"object"!=typeof obj)return obj;if(Array.isArray(obj))return obj.concat([]);try{return JSON.parse(JSON.stringify(obj))}catch(e){var fn=function(item){if(Array.isArray(item))return item.concat([]);if(!item||"object"!=typeof item)return item;var copy={};return UtilsFactory.forEach(item,function(opt,prop){copy[prop]=fn(opt)}),copy};return fn(obj)}},forEach:function(obj,fn){if(Array.isArray(obj))if("function"==typeof obj.forEach)obj.forEach(fn);else for(var i=0;i<obj.length;i++)fn(obj[i],i);else if(obj&&"object"==typeof obj)for(var prop in obj)obj.hasOwnProperty(prop)&&fn(obj[prop],prop)}};Skylink.prototype._CHUNK_FILE_SIZE=49152,Skylink.prototype._MOZ_CHUNK_FILE_SIZE=12288,Skylink.prototype._BINARY_FILE_SIZE=65456,Skylink.prototype._MOZ_BINARY_FILE_SIZE=16384,Skylink.prototype._CHUNK_DATAURL_SIZE=1212,Skylink.prototype._DC_PROTOCOL_TYPE={WRQ:"WRQ",ACK:"ACK",ERROR:"ERROR",CANCEL:"CANCEL",MESSAGE:"MESSAGE"},Skylink.prototype._SIG_MESSAGE_TYPE={JOIN_ROOM:"joinRoom",IN_ROOM:"inRoom",ENTER:"enter",WELCOME:"welcome",RESTART:"restart",OFFER:"offer",ANSWER:"answer",CANDIDATE:"candidate",BYE:"bye",REDIRECT:"redirect",UPDATE_USER:"updateUserEvent",ROOM_LOCK:"roomLockEvent",MUTE_VIDEO:"muteVideoEvent",MUTE_AUDIO:"muteAudioEvent",PUBLIC_MESSAGE:"public",PRIVATE_MESSAGE:"private",STREAM:"stream",GROUP:"group",GET_PEERS:"getPeers",PEER_LIST:"peerList",INTRODUCE:"introduce",INTRODUCE_ERROR:"introduceError",APPROACH:"approach",START_RECORDING:"startRecordingRoom",STOP_RECORDING:"stopRecordingRoom",RECORDING:"recordingEvent",END_OF_CANDIDATES:"endOfCandidates"},Skylink.prototype._groupMessageList=[Skylink.prototype._SIG_MESSAGE_TYPE.STREAM,Skylink.prototype._SIG_MESSAGE_TYPE.UPDATE_USER,Skylink.prototype._SIG_MESSAGE_TYPE.MUTE_AUDIO,Skylink.prototype._SIG_MESSAGE_TYPE.MUTE_VIDEO,Skylink.prototype._SIG_MESSAGE_TYPE.PUBLIC_MESSAGE];var SkylinkLogs={getLogs:function(logLevel,instanceLabel){return logLevel&&"string"==typeof logLevel&&(instanceLabel=logLevel,logLevel=null),Log.loopLogs(instanceLabel,logLevel)},clearAllLogs:function(instanceLabel,logLevel){"number"==typeof instanceLabel&&(logLevel=instanceLabel,instanceLabel=null),Log.clearLogs(instanceLabel,logLevel)},printAllLogs:function(instanceLabel,logLevel){"number"==typeof instanceLabel&&(logLevel=instanceLabel,instanceLabel=null);var logs=Log.loopLogs(instanceLabel,logLevel);UtilsFactory.forEach(logs,function(log){})}};Skylink.prototype.AUDIO_CODEC={AUTO:"auto",ISAC:"ISAC",OPUS:"opus",G722:"G722"},Skylink.prototype.CANDIDATE_GENERATION_STATE={NEW:"new",GATHERING:"gathering",COMPLETED:"completed"},Skylink.prototype.CANDIDATE_PROCESSING_STATE={RECEIVED:"received",DROPPED:"dropped",BUFFERED:"buffered",PROCESSING:"processing",PROCESS_SUCCESS:"processSuccess",PROCESS_ERROR:"processError"},Skylink.prototype.DATA_CHANNEL_MESSAGE_ERROR={MESSAGE:"message",TRANSFER:"transfer"},Skylink.prototype.DATA_CHANNEL_STATE={CONNECTING:"connecting",OPEN:"open",CLOSING:"closing",CLOSED:"closed",ERROR:"error",CREATE_ERROR:"createError",BUFFERED_AMOUNT_LOW:"bufferedAmountLow",SEND_MESSAGE_ERROR:"sendMessageError"},Skylink.prototype.DATA_CHANNEL_TYPE={MESSAGING:"messaging",DATA:"data"},Skylink.prototype.DATA_STREAM_STATE={SENDING_STARTED:"sendStart",SENDING_STOPPED:"sendStop",RECEIVING_STARTED:"receiveStart",RECEIVING_STOPPED:"receiveStop",RECEIVED:"received",SENT:"sent",ERROR:"error",START_ERROR:"startError"},Skylink.prototype.DATA_TRANSFER_DATA_TYPE={BINARY_STRING:"binaryString",ARRAY_BUFFER:"arrayBuffer",BLOB:"blob",STRING:"string"},Skylink.prototype.DATA_TRANSFER_SESSION_TYPE={BLOB:"blob",DATA_URL:"dataURL"},Skylink.prototype.DATA_TRANSFER_STATE={UPLOAD_REQUEST:"request",UPLOAD_STARTED:"uploadStarted",DOWNLOAD_STARTED:"downloadStarted",REJECTED:"rejected",CANCEL:"cancel",ERROR:"error",UPLOADING:"uploading",DOWNLOADING:"downloading",UPLOAD_COMPLETED:"uploadCompleted",DOWNLOAD_COMPLETED:"downloadCompleted",USER_REJECTED:"userRejected",USER_UPLOAD_REQUEST:"userRequest",START_ERROR:"startError"},Skylink.prototype.DATA_TRANSFER_TYPE={UPLOAD:"upload",DOWNLOAD:"download"},Skylink.prototype.DT_PROTOCOL_VERSION="0.1.3",Skylink.prototype.GET_CONNECTION_STATUS_STATE={RETRIEVING:0,RETRIEVE_SUCCESS:1,RETRIEVE_ERROR:-1},Skylink.prototype.GET_PEERS_STATE={ENQUIRED:"enquired",RECEIVED:"received"},Skylink.prototype.HANDSHAKE_PROGRESS={ENTER:"enter",WELCOME:"welcome",OFFER:"offer",ANSWER:"answer",ERROR:"error"},Skylink.prototype.ICE_CONNECTION_STATE={STARTING:"starting",CHECKING:"checking",CONNECTED:"connected",COMPLETED:"completed",CLOSED:"closed",FAILED:"failed",TRICKLE_FAILED:"trickleFailed",DISCONNECTED:"disconnected"},Skylink.prototype.INTRODUCE_STATE={INTRODUCING:"introducing",ERROR:"error"},Skylink.prototype.LOG_LEVEL={DEBUG:4,LOG:3,INFO:2,WARN:1,ERROR:0,NONE:-1},Skylink.prototype.MEDIA_ACCESS_FALLBACK_STATE={FALLBACKING:0,FALLBACKED:1,ERROR:-1},Skylink.prototype.PEER_CONNECTION_STATE={STABLE:"stable",HAVE_LOCAL_OFFER:"have-local-offer",HAVE_REMOTE_OFFER:"have-remote-offer",CLOSED:"closed"},Skylink.prototype.READY_STATE_CHANGE={INIT:0,LOADING:1,COMPLETED:2,ERROR:-1},Skylink.prototype.READY_STATE_CHANGE_ERROR={API_INVALID:4001,API_DOMAIN_NOT_MATCH:4002,API_CORS_DOMAIN_NOT_MATCH:4003,API_CREDENTIALS_INVALID:4004,API_CREDENTIALS_NOT_MATCH:4005,API_INVALID_PARENT_KEY:4006,API_NO_MEETING_RECORD_FOUND:4010,API_OVER_SEAT_LIMIT:4020,API_RETRIEVAL_FAILED:4021,API_WRONG_ACCESS_DOMAIN:5005,XML_HTTP_REQUEST_ERROR:-1,NO_SOCKET_IO:1,NO_XMLHTTPREQUEST_SUPPORT:2,NO_WEBRTC_SUPPORT:3,NO_PATH:4,ADAPTER_NO_LOADED:7,PARSE_CODECS:8},Skylink.prototype.RECORDING_STATE={START:0,STOP:1,LINK:2,ERROR:-1},Skylink.prototype.REGIONAL_SERVER={APAC1:"",US1:""},Skylink.prototype.SERVER_PEER_TYPE={MCU:"mcu"},Skylink.prototype.SM_PROTOCOL_VERSION="0.1.2.3",Skylink.prototype.SOCKET_ERROR={CONNECTION_FAILED:0,RECONNECTION_FAILED:-1,CONNECTION_ABORTED:-2,RECONNECTION_ABORTED:-3,RECONNECTION_ATTEMPT:-4},Skylink.prototype.SOCKET_FALLBACK={NON_FALLBACK:"nonfallback",FALLBACK_PORT:"fallbackPortNonSSL",FALLBACK_SSL_PORT:"fallbackPortSSL",LONG_POLLING:"fallbackLongPollingNonSSL",LONG_POLLING_SSL:"fallbackLongPollingSSL"},Skylink.prototype.SYSTEM_ACTION={WARNING:"warning",REJECT:"reject"},Skylink.prototype.SYSTEM_ACTION_REASON={CREDENTIALS_EXPIRED:"oldTimeStamp",CREDENTIALS_ERROR:"credentialError",DUPLICATED_LOGIN:"duplicatedLogin",ROOM_NOT_STARTED:"notStart",EXPIRED:"expired",ROOM_LOCKED:"locked",FAST_MESSAGE:"fastmsg",ROOM_CLOSING:"toclose",ROOM_CLOSED:"roomclose",SERVER_ERROR:"serverError",KEY_ERROR:"keyFailed"},Skylink.prototype.TURN_TRANSPORT={UDP:"udp",TCP:"tcp",ANY:"any",NONE:"none",ALL:"all"},Skylink.prototype.VERSION="0.6.17",Skylink.prototype.VIDEO_CODEC={AUTO:"auto",VP8:"VP8",H264:"H264",VP9:"VP9"},Skylink.prototype.VIDEO_RESOLUTION={QQVGA:{width:160,height:120},HQVGA:{width:240,height:160},QVGA:{width:320,height:240},WQVGA:{width:384,height:240},HVGA:{width:480,height:320},VGA:{width:640,height:480},WVGA:{width:768,height:480},FWVGA:{width:854,height:480},SVGA:{width:800,height:600},DVGA:{width:960,height:640},WSVGA:{width:1024,height:576},HD:{width:1280,height:720},HDPLUS:{width:1600,height:900},FHD:{width:1920,height:1080},QHD:{width:2560,height:1440},WQXGAPLUS:{width:3200,height:1800},UHD:{width:3840,height:2160},UHDPLUS:{width:5120,height:2880},FUHD:{width:7680,height:4320},QUHD:{width:15360,height:8640}},Skylink.prototype.respondBlobRequest=Skylink.prototype.acceptDataTransfer=function(peerId,transferId,accept){var self=this;if("string"!=typeof transferId&&"string"!=typeof peerId)return void Log.error(self._debugOptions.instanceId,[peerId,"RTCDataChannel",transferId,"Aborting accept data transfer as data transfer ID or peer ID is not provided"]);if(!self._dataChannels[peerId])return void Log.error(self._debugOptions.instanceId,[peerId,"RTCDataChannel",transferId,"Aborting accept data transfer as Peer does not have any Datachannel connections"]);if(!self._dataTransfers[transferId])return void Log.error(self._debugOptions.instanceId,[peerId,"RTCDataChannel",transferId,"Aborting accept data transfer as invalid transfer ID is provided"]);var channelProp="main";if(self._dataChannels[peerId][transferId]&&(channelProp=transferId),accept){Log.debug(self._debugOptions.instanceId,[peerId,"RTCDataChannel",transferId,"Accepted data transfer and starting ..."]);var dataChannelStateCbFn=function(state,evtPeerId,error,cN,cT){self._trigger("dataTransferState",self.DATA_TRANSFER_STATE.ERROR,transferId,peerId,self._getTransferInfo(transferId,peerId,!0,!1,!1),{transferType:self.DATA_TRANSFER_TYPE.DOWNLOAD,message:new Error("Data transfer terminated as Peer Datachannel connection closed abruptly.")})};self.once("dataChannelState",dataChannelStateCbFn,function(state,evtPeerId,error,channelName,channelType){return self._dataTransfers[transferId]&&self._dataTransfers[transferId].sessions[peerId]?evtPeerId===peerId&&("main"===channelProp?channelType===self.DATA_CHANNEL_STATE.MESSAGING:channelName===transferId)&&[self.DATA_CHANNEL_STATE.CLOSING,self.DATA_CHANNEL_STATE.CLOSED,self.DATA_CHANNEL_STATE.ERROR].indexOf(state)>-1:void self.off("dataChannelState",dataChannelStateCbFn)}),self.once("dataTransferState",function(){dataChannelStateCbFn&&self.off("dataChannelState",dataChannelStateCbFn),delete self._dataTransfers[transferId],self._dataChannels[peerId]&&("main"===channelProp&&self._dataChannels[peerId].main&&self._dataChannels[peerId].main.setCustom("transferId",null),channelProp===transferId&&self._closeDataChannel(peerId,transferId))},function(state,evtTransferId,evtPeerId){return evtTransferId===transferId&&evtPeerId===peerId&&[self.DATA_TRANSFER_STATE.ERROR,self.DATA_TRANSFER_STATE.CANCEL,self.DATA_TRANSFER_STATE.DOWNLOAD_COMPLETED].indexOf(state)>-1}),self._sendMessageToDataChannel(peerId,{type:self._DC_PROTOCOL_TYPE.ACK,sender:self._user.sid,ackN:0},channelProp),self._trigger("dataTransferState",self.DATA_TRANSFER_STATE.DOWNLOAD_STARTED,transferId,peerId,self._getTransferInfo(transferId,peerId,!0,!1,!1),null)}else Log.warn(self._debugOptions.instanceId,[peerId,"RTCDataChannel",transferId,"Rejected data transfer and data transfer request has been aborted"]),self._sendMessageToDataChannel(peerId,{type:self._DC_PROTOCOL_TYPE.ACK,sender:self._user.sid,ackN:-1},channelProp),"main"===channelProp&&self._dataChannels[peerId].main&&self._dataChannels[peerId].main.setCustom("transferId",null),self._trigger("dataTransferState",self.DATA_TRANSFER_STATE.USER_REJECTED,transferId,peerId,self._getTransferInfo(transferId,peerId,!0,!1,!1),{message:new Error("Data transfer terminated as User has rejected data transfer request."),transferType:self.DATA_TRANSFER_TYPE.DOWNLOAD}),delete self._dataTransfers[transferId]},Skylink.prototype.cancelBlobTransfer=Skylink.prototype.cancelDataTransfer=function(peerId,transferId){var self=this;if(!transferId||"string"!=typeof transferId)return void Log.error(self._debugOptions.instanceId,[peerId,"RTCDataChannel",transferId,"Aborting cancel data transfer as data transfer ID is not provided"]);if(!peerId||"string"!=typeof peerId)return void Log.error(self._debugOptions.instanceId,[peerId,"RTCDataChannel",transferId,"Aborting cancel data transfer as peer ID is not provided"]);if(!self._dataTransfers[transferId])return void Log.error(self._debugOptions.instanceId,[peerId,"RTCDataChannel",transferId,"Aborting cancel data transfer as data transfer session does not exists."]);Log.debug(self._debugOptions.instanceId,[peerId,"RTCDataChannel",transferId,"Canceling data transfer ..."]);var emitEventFn=function(peers,transferInfoPeerId){for(var i=0;i<peers.length;i++)self._trigger("dataTransferState",self.DATA_TRANSFER_STATE.CANCEL,transferId,peers[i],self._getTransferInfo(transferId,transferInfoPeerId,!1,!1,!1),{transferType:self._dataTransfers[transferId].direction,message:new Error("User cancelled download transfer")})};if(self._hasMCU&&self._dataTransfers[transferId].direction===self.DATA_TRANSFER_TYPE.UPLOAD){if(!self._dataChannels.MCU)return void Log.error(self._debugOptions.instanceId,[peerId,"RTCDataChannel",transferId,"Aborting cancel data transfer as Peer does not have any Datachannel connections"]);Log.warn(self._debugOptions.instanceId,[peerId,"RTCDataChannel",transferId,"Aborting all data transfers to Peers"]),Object.keys(self._dataTransfers[transferId].peers.main).length>0&&self._sendMessageToDataChannel("MCU",{type:self._DC_PROTOCOL_TYPE.CANCEL,sender:self._user.sid,content:"Peer cancelled download transfer",name:self._dataTransfers[transferId].name,ackN:0},"main"),Object.keys(self._dataTransfers[transferId].peers[transferId]).length>0&&self._sendMessageToDataChannel("MCU",{type:self._DC_PROTOCOL_TYPE.CANCEL,sender:self._user.sid,content:"Peer cancelled download transfer",name:self._dataTransfers[transferId].name,ackN:0},transferId),emitEventFn(Object.keys(self._dataTransfers[transferId].peers.main).concat(Object.keys(self._dataTransfers[transferId].peers[transferId])))}else{var channelProp="main";if(!self._dataChannels[peerId])return void Log.error(self._debugOptions.instanceId,[peerId,"RTCDataChannel",transferId,"Aborting cancel data transfer as Peer does not have any Datachannel connections"]);self._dataChannels[peerId][transferId]&&(channelProp=transferId),self._sendMessageToDataChannel(peerId,{type:self._DC_PROTOCOL_TYPE.CANCEL,sender:self._user.sid,content:"Peer cancelled download transfer",name:self._dataTransfers[transferId].name,ackN:0},channelProp),emitEventFn([peerId],peerId)}},Skylink.prototype.disableAudio=function(){this.muteStream({audioMuted:!0,videoMuted:this._streamsMutedSettings.videoMuted})},Skylink.prototype.disableVideo=function(){this.muteStream({videoMuted:!0,audioMuted:this._streamsMutedSettings.audioMuted})},Skylink.prototype.enableAudio=function(){this.muteStream({audioMuted:!1,videoMuted:this._streamsMutedSettings.videoMuted})},Skylink.prototype.enableVideo=function(){this.muteStream({videoMuted:!1,audioMuted:this._streamsMutedSettings.audioMuted})},Skylink.prototype.generateUUID=function(){var d=(new Date).getTime(),uuid="xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(c){var r=(d+16*Math.random())%16|0;return d=Math.floor(d/16),("x"===c?r:r&&15).toString(16)});return uuid},Skylink.prototype.getConnectionStatus=function(targetPeerId,callback){var self=this,listOfPeers=Object.keys(self._peerConnections),listOfPeerStats={},listOfPeerErrors={};if(Array.isArray(targetPeerId)?listOfPeers=targetPeerId:"string"==typeof targetPeerId&&targetPeerId?listOfPeers=[targetPeerId]:"function"==typeof targetPeerId&&(callback=targetPeerId,targetPeerId=void 0),0===listOfPeers.length)return listOfPeerErrors.self=new Error("There is currently no peer connections to retrieve connection status"),Log.error(self._debugOptions.instanceId,[null,"RTCStatsReport",null,"Retrieving request failure ->"],listOfPeerErrors.self),void("function"==typeof callback&&callback({listOfPeers:listOfPeers,retrievalErrors:listOfPeerErrors,connectionStats:listOfPeerStats},null));"edge"===window.webrtcDetectedBrowser&&Log.warn(self._debugOptions.instanceId,"Edge browser does not have well support for stats.");for(var completedTaskCounter=[],checkCompletedFn=function(peerId){completedTaskCounter.indexOf(peerId)===-1&&completedTaskCounter.push(peerId),completedTaskCounter.length===listOfPeers.length&&"function"==typeof callback&&(Object.keys(listOfPeerErrors).length>0?callback({listOfPeers:listOfPeers,retrievalErrors:listOfPeerErrors,connectionStats:listOfPeerStats},null):callback(null,{listOfPeers:listOfPeers,connectionStats:listOfPeerStats}))},statsFn=function(peerId){var retrieveFn=function(firstRetrieval,nextCb){return function(err,result){return err?(Log.error(self._debugOptions.instanceId,[peerId,"RTCStatsReport",null,"Retrieval failure ->"],error),listOfPeerErrors[peerId]=error,self._trigger("getConnectionStatusStateChange",self.GET_CONNECTION_STATUS_STATE.RETRIEVE_ERROR,peerId,null,error),checkCompletedFn(peerId),void(firstRetrieval&&delete self._peerStats[peerId])):void(firstRetrieval?nextCb():(listOfPeerStats[peerId]=result,self._trigger("getConnectionStatusStateChange",self.GET_CONNECTION_STATUS_STATE.RETRIEVE_SUCCESS,peerId,listOfPeerStats[peerId],null),checkCompletedFn(peerId)))}};return self._peerStats[peerId]?void self._retrieveStats(peerId,retrieveFn()):(self._peerStats[peerId]={},Log.debug(self._debugOptions.instanceId,[peerId,"RTCStatsReport",null,"Retrieving first report to tabulate results"]),void self._retrieveStats(peerId,retrieveFn(!0,function(){self._retrieveStats(peerId,retrieveFn())})))},i=0;i<listOfPeers.length;i++){var peerId=listOfPeers[i];self._trigger("getConnectionStatusStateChange",self.GET_CONNECTION_STATUS_STATE.RETRIEVING,peerId,null,null),self._peerConnections.hasOwnProperty(peerId)&&self._peerConnections[peerId]?statsFn(peerId):(listOfPeerErrors[peerId]=new Error("The peer connection object does not exists"),Log.error(self._debugOptions.instanceId,[peerId,"RTCStatsReport",null,"Retrieval failure ->"],listOfPeerErrors[peerId]),self._trigger("getConnectionStatusStateChange",self.GET_CONNECTION_STATUS_STATE.RETRIEVE_ERROR,peerId,null,listOfPeerErrors[peerId]),checkCompletedFn(peerId))}},Skylink.prototype.getCurrentDataTransfers=function(){var listOfDataTransfers={};if(!this._user||!this._user.sid)return{};for(var prop in this._dataTransfers)this._dataTransfers.hasOwnProperty(prop)&&this._dataTransfers[prop]&&(listOfDataTransfers[prop]={transferInfo:this._getTransferInfo(prop,this._user.sid,!0,!0,!0),isSelf:this._dataTransfers[prop].senderPeerId===this._user.sid,peerId:this._dataTransfers[prop].senderPeerId||this._user.sid});return listOfDataTransfers},Skylink.prototype.getPeerInfo=function(peerId){var peerInfo=null;return"string"==typeof peerId&&"object"==typeof this._peerInformations[peerId]?(peerInfo=UtilsFactory.clone(this._peerInformations[peerId]),peerInfo.room=UtilsFactory.clone(this._selectedRoom),peerInfo.settings.bandwidth=peerInfo.settings.bandwidth||{},peerInfo.settings.googleXBandwidth=peerInfo.settings.googleXBandwidth||{},"boolean"==typeof peerInfo.settings.video||peerInfo.settings.video&&"object"==typeof peerInfo.settings.video||(peerInfo.settings.video=!1,peerInfo.mediaStatus.audioMuted=!0),"boolean"==typeof peerInfo.settings.audio||peerInfo.settings.audio&&"object"==typeof peerInfo.settings.audio||(peerInfo.settings.audio=!1,peerInfo.mediaStatus.audioMuted=!0),"boolean"!=typeof peerInfo.mediaStatus.audioMuted&&(peerInfo.mediaStatus.audioMuted=!0),"boolean"!=typeof peerInfo.mediaStatus.videoMuted&&(peerInfo.mediaStatus.videoMuted=!0),peerInfo.settings.maxBandwidth&&(peerInfo.settings.bandwidth=UtilsFactory.clone(peerInfo.settings.maxBandwidth),delete peerInfo.settings.maxBandwidth),peerInfo.settings.video&&"object"==typeof peerInfo.settings.video&&peerInfo.settings.video.customSettings&&"object"==typeof peerInfo.settings.video.customSettings&&(peerInfo.settings.video.customSettings.frameRate&&(peerInfo.settings.video.frameRate=UtilsFactory.clone(peerInfo.settings.video.customSettings.frameRate)),
peerInfo.settings.video.customSettings.facingMode&&(peerInfo.settings.video.facingMode=UtilsFactory.clone(peerInfo.settings.video.customSettings.facingMode)),peerInfo.settings.video.customSettings.width&&(peerInfo.settings.video.resolution=peerInfo.settings.video.resolution||{},peerInfo.settings.video.resolution.width=UtilsFactory.clone(peerInfo.settings.video.customSettings.width)),peerInfo.settings.video.customSettings.height&&(peerInfo.settings.video.resolution=peerInfo.settings.video.resolution||{},peerInfo.settings.video.resolution.height=UtilsFactory.clone(peerInfo.settings.video.customSettings.height)),peerInfo.settings.video.customSettings.facingMode&&(peerInfo.settings.video.facingMode=UtilsFactory.clone(peerInfo.settings.video.customSettings.facingMode))),peerInfo.settings.audio&&"object"==typeof peerInfo.settings.audio&&(peerInfo.settings.audio.stereo=peerInfo.settings.audio.stereo===!0),null!==peerInfo.userData&&"undefined"!=typeof peerInfo.userData||(peerInfo.userData=""),peerInfo.parentId=peerInfo.parentId||null,"MCU"===peerId?(peerInfo.config.receiveOnly=!0,peerInfo.config.publishOnly=!1):this._hasMCU&&(peerInfo.config.receiveOnly=!1,peerInfo.config.publishOnly=!0),("edge"!==window.webrtcDetectedBrowser&&"edge"===peerInfo.agent.name?["IE","safari"].indexOf(window.webrtcDetectedBrowser)>-1&&!this._currentCodecSupport.video.h264:"edge"===window.webrtcDetectedBrowser&&"edge"!==peerInfo.agent.name&&!this._currentCodecSupport.video.h264)&&(peerInfo.settings.video=!1,peerInfo.mediaStatus.videoMuted=!0)):(peerInfo={userData:UtilsFactory.clone(this._userData),settings:{audio:!1,video:!1},mediaStatus:UtilsFactory.clone(this._streamsMutedSettings),agent:{name:window.webrtcDetectedBrowser,version:window.webrtcDetectedVersion,os:window.navigator.platform,pluginVersion:AdapterJS.WebRTCPlugin.plugin?AdapterJS.WebRTCPlugin.plugin.VERSION:null,SMProtocolVersion:this.SMProtocolVersion,DTProtocolVersion:this.DTProtocolVersion},room:UtilsFactory.clone(this._selectedRoom),config:{enableDataChannel:this._enableDataChannel,enableIceTrickle:this._enableIceTrickle,enableIceRestart:this._enableIceRestart,priorityWeight:this._peerPriorityWeight,receiveOnly:!1,publishOnly:!!this._publishOnly}},null!==peerInfo.userData&&"undefined"!=typeof peerInfo.userData||(peerInfo.userData=""),this._streams.screenshare?peerInfo.settings=UtilsFactory.clone(this._streams.screenshare.settings):this._streams.userMedia&&(peerInfo.settings=UtilsFactory.clone(this._streams.userMedia.settings)),peerInfo.settings.bandwidth=UtilsFactory.clone(this._streamsBandwidthSettings.bAS),peerInfo.settings.googleXBandwidth=UtilsFactory.clone(this._streamsBandwidthSettings.googleX),peerInfo.parentId=this._parentId?this._parentId:null,peerInfo.config.receiveOnly=!peerInfo.settings.video&&!peerInfo.settings.audio),peerInfo.settings.audio||(peerInfo.mediaStatus.audioMuted=!0),peerInfo.settings.video||(peerInfo.mediaStatus.videoMuted=!0),peerInfo.settings.audio||peerInfo.settings.video||(peerInfo.config.receiveOnly=!0,peerInfo.config.publishOnly=!1),peerInfo},Skylink.prototype.getPeers=function(showAll,callback){var self=this;return self._isPrivileged?self._appKey?("function"==typeof showAll&&(callback=showAll,showAll=!1),self._sendChannelMessage({type:self._SIG_MESSAGE_TYPE.GET_PEERS,showAll:showAll||!1}),self._trigger("getPeersStateChange",self.GET_PEERS_STATE.ENQUIRED,self._user.sid,null),Log.log(self._debugOptions.instanceId,"Enquired server for peers within the realm"),void("function"==typeof callback&&self.once("getPeersStateChange",function(state,privilegedPeerId,peerList){callback(null,peerList)},function(state,privilegedPeerId,peerList){return state===self.GET_PEERS_STATE.RECEIVED}))):void Log.warn(self._debugOptions.instanceId,"App key is not defined. Please authenticate again."):void Log.warn(self._debugOptions.instanceId,"Please upgrade your key to privileged to use this function")},Skylink.prototype.getPeersInRoom=function(){for(var listOfPeersInfo={},listOfPeers=Object.keys(this._peerInformations),i=0;i<listOfPeers.length;i++)listOfPeersInfo[listOfPeers[i]]=UtilsFactory.clone(this.getPeerInfo(listOfPeers[i])),listOfPeersInfo[listOfPeers[i]].isSelf=!1;return this._user&&this._user.sid&&(listOfPeersInfo[this._user.sid]=UtilsFactory.clone(this.getPeerInfo()),listOfPeersInfo[this._user.sid].isSelf=!0),listOfPeersInfo},Skylink.prototype.getPeersStream=function(){for(var listOfPeersStreams={},listOfPeers=Object.keys(this._peerConnections),i=0;i<listOfPeers.length;i++){var stream=null;if(this._peerConnections[listOfPeers[i]]&&this._peerConnections[listOfPeers[i]].remoteDescription&&this._peerConnections[listOfPeers[i]].remoteDescription.sdp&&(this._sdpSettings.direction.audio.receive||this._sdpSettings.direction.video.receive))for(var streams=this._peerConnections[listOfPeers[i]].getRemoteStreams(),j=0;j<streams.length;j++)if(this._peerConnections[listOfPeers[i]].remoteDescription.sdp.indexOf("msid:"+(streams[j].id||streams[j].label))>0){stream=streams[j];break}listOfPeersStreams[listOfPeers[i]]={streamId:stream?stream.id||stream.label||null:null,stream:stream,isSelf:!1}}if(this._user&&this._user.sid){var selfStream=null;this._streams.screenshare&&this._streams.screenshare.stream?selfStream=this._streams.screenshare.stream:this._streams.userMedia&&this._streams.userMedia.stream&&(selfStream=this._streams.userMedia.stream),listOfPeersStreams[this._user.sid]={streamId:selfStream?selfStream.id||selfStream.label||null:null,stream:selfStream,isSelf:!0}}return listOfPeersStreams},Skylink.prototype.getRecordings=function(){return UtilsFactory.clone(this._recordings)},Skylink.prototype.getUserData=function(peerId){if(peerId&&this._peerInformations[peerId]){var userData=this._peerInformations[peerId].userData;return null!==userData&&"undefined"==typeof userData||(userData=""),userData}return this._userData},Skylink.prototype.getUserMedia=function(options,callback){var self=this;if("function"==typeof options)callback=options,options={audio:!0,video:!0};else if("object"!=typeof options||null===options){if("undefined"!=typeof options){var invalidOptionsError="Please provide a valid options";return Log.error(self._debugOptions.instanceId,invalidOptionsError,options),void("function"==typeof callback&&callback(new Error(invalidOptionsError),null))}options={audio:!0,video:!0}}else if(!options.audio&&!options.video){var noConstraintOptionsSelectedError="Please select audio or video";return Log.error(self._debugOptions.instanceId,noConstraintOptionsSelectedError,options),void("function"==typeof callback&&callback(new Error(noConstraintOptionsSelectedError),null))}self._throttle(function(runFn){if(runFn){if("function"==typeof callback){var mediaAccessSuccessFn=function(stream){self.off("mediaAccessError",mediaAccessErrorFn),callback(null,stream)},mediaAccessErrorFn=function(error){self.off("mediaAccessSuccess",mediaAccessSuccessFn),callback(error,null)};self.once("mediaAccessSuccess",mediaAccessSuccessFn,function(stream,isScreensharing){return!isScreensharing}),self.once("mediaAccessError",mediaAccessErrorFn,function(error,isScreensharing){return!isScreensharing})}var settings=self._parseStreamSettings(options);navigator.getUserMedia(settings.getUserMediaSettings,function(stream){settings.mutedSettings.shouldAudioMuted&&(self._streamsMutedSettings.audioMuted=!0),settings.mutedSettings.shouldVideoMuted&&(self._streamsMutedSettings.videoMuted=!0),self._onStreamAccessSuccess(stream,settings,!1,!1)},function(error){self._onStreamAccessError(error,settings,!1,!1)})}else if(self._throttlingShouldThrowError){var throttleLimitError="Unable to run as throttle interval has not reached ("+self._throttlingTimeouts.getUserMedia+"ms).";Log.error(self._debugOptions.instanceId,throttleLimitError),"function"==typeof callback&&callback(new Error(throttleLimitError),null)}},"getUserMedia",self._throttlingTimeouts.getUserMedia)},Skylink.prototype.init=function(options,callback){var self=this;if("function"==typeof options&&(callback=options,options=void 0),!options){var error="No API key provided";return Log.error(self._debugOptions.instanceId,error),void("function"==typeof callback&&callback(error,null))}var appKey,room,defaultRoom,startDateTime,duration,credentials,roomServer=self._roomServer,enableIceTrickle=!0,enableDataChannel=!0,enableSTUNServer=!0,enableTURNServer=!0,TURNTransport=self.TURN_TRANSPORT.ANY,audioFallback=!1,forceSSL=!1,socketTimeout=2e4,forceTURNSSL=!1,audioCodec=self.AUDIO_CODEC.AUTO,videoCodec=self.VIDEO_CODEC.AUTO,forceTURN=!1,usePublicSTUN=!0,disableVideoFecCodecs=!1,disableComfortNoiseCodec=!1,disableREMB=!1,filterCandidatesType={host:!1,srflx:!1,relay:!1},throttleIntervals={shareScreen:1e4,refreshConnection:5e3,getUserMedia:0},throttleShouldThrowError=!1,mcuUseRenegoRestart=!1,iceServer=null,socketServer=null;if(Log.log(self._debugOptions.instanceId,"Provided init options:",options),"string"==typeof options)appKey=options,defaultRoom=appKey,room=appKey;else{if(appKey=options.appKey||options.apiKey,roomServer="string"==typeof options.roomServer?options.roomServer:roomServer,roomServer=roomServer.lastIndexOf("/")===roomServer.length-1?roomServer.substring(0,roomServer.length-1):roomServer,defaultRoom="string"==typeof options.defaultRoom&&options.defaultRoom?options.defaultRoom:appKey,room=defaultRoom,enableIceTrickle="boolean"==typeof options.enableIceTrickle?options.enableIceTrickle:enableIceTrickle,enableDataChannel="boolean"==typeof options.enableDataChannel?options.enableDataChannel:enableDataChannel,enableSTUNServer="boolean"==typeof options.enableSTUNServer?options.enableSTUNServer:enableSTUNServer,enableTURNServer="boolean"==typeof options.enableTURNServer?options.enableTURNServer:enableTURNServer,forceSSL="boolean"==typeof options.forceSSL?options.forceSSL:forceSSL,socketTimeout="number"==typeof options.socketTimeout?options.socketTimeout:socketTimeout,socketTimeout=socketTimeout<5e3?5e3:socketTimeout,forceTURNSSL="boolean"==typeof options.forceTURNSSL?options.forceTURNSSL:forceTURNSSL,audioCodec="string"==typeof options.audioCodec?options.audioCodec:audioCodec,videoCodec="string"==typeof options.videoCodec?options.videoCodec:videoCodec,forceTURN="boolean"==typeof options.forceTURN?options.forceTURN:forceTURN,usePublicSTUN="boolean"==typeof options.usePublicSTUN?options.usePublicSTUN:usePublicSTUN,disableVideoFecCodecs="boolean"==typeof options.disableVideoFecCodecs?options.disableVideoFecCodecs:disableVideoFecCodecs,disableComfortNoiseCodec="boolean"==typeof options.disableComfortNoiseCodec?options.disableComfortNoiseCodec:disableComfortNoiseCodec,disableREMB="boolean"==typeof options.disableREMB?options.disableREMB:disableREMB,throttleShouldThrowError="boolean"==typeof options.throttleShouldThrowError?options.throttleShouldThrowError:throttleShouldThrowError,mcuUseRenegoRestart="boolean"==typeof options.mcuUseRenegoRestart?options.mcuUseRenegoRestart:mcuUseRenegoRestart,iceServer=options.iceServer&&"string"==typeof options.iceServer?options.iceServer:iceServer,socketServer=options.socketServer&&"string"==typeof options.socketServer?options.socketServer:socketServer,mcuUseRenegoRestart="boolean"==typeof options.mcuUseRenegoRestart?options.mcuUseRenegoRestart:mcuUseRenegoRestart,"object"==typeof options.filterCandidatesType&&options.filterCandidatesType&&(filterCandidatesType.host="boolean"==typeof options.filterCandidatesType.host?options.filterCandidatesType.host:filterCandidatesType.host,filterCandidatesType.srflx="boolean"==typeof options.filterCandidatesType.srflx?options.filterCandidatesType.srflx:filterCandidatesType.srflx,filterCandidatesType.relay="boolean"==typeof options.filterCandidatesType.relay?options.filterCandidatesType.relay:filterCandidatesType.relay),"object"==typeof options.throttleIntervals&&options.throttleIntervals&&(throttleIntervals.shareScreen="number"==typeof options.throttleIntervals.shareScreen?options.throttleIntervals.shareScreen:throttleIntervals.shareScreen,throttleIntervals.refreshConnection="number"==typeof options.throttleIntervals.refreshConnection?options.throttleIntervals.refreshConnection:throttleIntervals.refreshConnection,throttleIntervals.getUserMedia="number"==typeof options.throttleIntervals.getUserMedia?options.throttleIntervals.getUserMedia:throttleIntervals.getUserMedia),"string"==typeof options.TURNServerTransport)for(var type in self.TURN_TRANSPORT)if(self.TURN_TRANSPORT.hasOwnProperty(type)&&self.TURN_TRANSPORT[type]===options.TURNServerTransport){TURNTransport=options.TURNServerTransport;break}audioFallback=options.audioFallback||audioFallback,options.credentials&&"string"==typeof options.credentials.credentials&&"number"==typeof options.credentials.duration&&"string"==typeof options.credentials.startDateTime&&(startDateTime=options.credentials.startDateTime,duration=options.credentials.duration,credentials=options.credentials.credentials),forceTURN===!0&&(enableTURNServer=!0,enableSTUNServer=!1,filterCandidatesType.host=!0,filterCandidatesType.srflx=!0,filterCandidatesType.relay=!1)}if("edge"===window.webrtcDetectedBrowser&&(enableSTUNServer=!1,forceTURNSSL=!1,TURNTransport=self.TURN_TRANSPORT.UDP,audioCodec=self.AUDIO_CODEC.OPUS,videoCodec=self.VIDEO_CODEC.H264,enableDataChannel=!1),self._appKey=appKey,self._roomServer=roomServer,self._defaultRoom=defaultRoom,self._selectedRoom=room,self._path=roomServer+"/api/"+appKey+"/"+room,credentials&&startDateTime&&duration&&(self._roomStart=startDateTime,self._roomDuration=duration,self._roomCredentials=credentials,self._path+=credentials?"/"+startDateTime+"/"+duration+"?&cred="+credentials:""),self._path+=(credentials?"&":"?")+"rand="+(new Date).toISOString(),self._enableIceTrickle=enableIceTrickle,self._enableDataChannel=enableDataChannel,self._enableSTUN=enableSTUNServer,self._enableTURN=enableTURNServer,self._TURNTransport=TURNTransport,self._audioFallback=audioFallback,self._forceSSL=forceSSL,self._socketTimeout=socketTimeout,self._forceTURNSSL=forceTURNSSL,self._selectedAudioCodec=audioCodec,self._selectedVideoCodec=videoCodec,self._forceTURN=forceTURN,self._usePublicSTUN=usePublicSTUN,self._disableVideoFecCodecs=disableVideoFecCodecs,self._disableComfortNoiseCodec=disableComfortNoiseCodec,self._filterCandidatesType=filterCandidatesType,self._throttlingTimeouts=throttleIntervals,self._throttlingShouldThrowError=throttleShouldThrowError,self._disableREMB=disableREMB,self._mcuUseRenegoRestart=mcuUseRenegoRestart,self._turnServer=iceServer,self._socketServer=socketServer,Log.log(self._debugOptions.instanceId,"Init configuration:",{serverUrl:self._path,readyState:self._readyState,appKey:self._appKey,roomServer:self._roomServer,defaultRoom:self._defaultRoom,selectedRoom:self._selectedRoom,enableDataChannel:self._enableDataChannel,enableIceTrickle:self._enableIceTrickle,enableTURNServer:self._enableTURN,enableSTUNServer:self._enableSTUN,TURNTransport:self._TURNTransport,audioFallback:self._audioFallback,forceSSL:self._forceSSL,socketTimeout:self._socketTimeout,forceTURNSSL:self._forceTURNSSL,audioCodec:self._selectedAudioCodec,videoCodec:self._selectedVideoCodec,forceTURN:self._forceTURN,usePublicSTUN:self._usePublicSTUN,disableVideoFecCodecs:self._disableVideoFecCodecs,disableComfortNoiseCodec:self._disableComfortNoiseCodec,disableREMB:self._disableREMB,filterCandidatesType:self._filterCandidatesType,throttleIntervals:self._throttlingTimeouts,throttleShouldThrowError:self._throttlingShouldThrowError,mcuUseRenegoRestart:self._mcuUseRenegoRestart,iceServer:self._turnServer,socketServer:self._socketServer}),self._readyState=0,self._trigger("readyStateChange",self.READY_STATE_CHANGE.INIT,null,self._selectedRoom),"function"==typeof callback){var hasTriggered=!1,readyStateChangeFn=function(readyState,error){hasTriggered||(readyState===self.READY_STATE_CHANGE.COMPLETED?(Log.log(self._debugOptions.instanceId,[null,"Socket",null,"Firing callback. Ready state change has met provided state ->"],readyState),hasTriggered=!0,self.off("readyStateChange",readyStateChangeFn),callback(null,{serverUrl:self._path,readyState:self._readyState,appKey:self._appKey,roomServer:self._roomServer,defaultRoom:self._defaultRoom,selectedRoom:self._selectedRoom,enableDataChannel:self._enableDataChannel,enableIceTrickle:self._enableIceTrickle,enableTURNServer:self._enableTURN,enableSTUNServer:self._enableSTUN,TURNTransport:self._TURNTransport,audioFallback:self._audioFallback,forceSSL:self._forceSSL,socketTimeout:self._socketTimeout,forceTURNSSL:self._forceTURNSSL,audioCodec:self._selectedAudioCodec,videoCodec:self._selectedVideoCodec,forceTURN:self._forceTURN,usePublicSTUN:self._usePublicSTUN,disableVideoFecCodecs:self._disableVideoFecCodecs,disableComfortNoiseCodec:self._disableComfortNoiseCodec,disableREMB:self._disableREMB,filterCandidatesType:self._filterCandidatesType,throttleIntervals:self._throttlingTimeouts,throttleShouldThrowError:self._throttlingShouldThrowError,mcuUseRenegoRestart:self._mcuUseRenegoRestart,iceServer:self._turnServer,socketServer:self._socketServer})):readyState===self.READY_STATE_CHANGE.ERROR&&(Log.log(self._debugOptions.instanceId,[null,"Socket",null,"Firing callback. Ready state change has met provided state ->"],readyState),Log.debug(self._debugOptions.instanceId,[null,"Socket",null,"Ready state met failure"],error),hasTriggered=!0,self.off("readyStateChange",readyStateChangeFn),callback({error:new Error(error),errorCode:error.errorCode,status:error.status},null)))};self.on("readyStateChange",readyStateChangeFn)}self._loadInfo()},Skylink.prototype.introducePeer=function(sendingPeerId,receivingPeerId){var self=this;return self._isPrivileged?(self._sendChannelMessage({type:self._SIG_MESSAGE_TYPE.INTRODUCE,sendingPeerId:sendingPeerId,receivingPeerId:receivingPeerId}),self._trigger("introduceStateChange",self.INTRODUCE_STATE.INTRODUCING,self._user.sid,sendingPeerId,receivingPeerId,null),void Log.log(self._debugOptions.instanceId,"Introducing",sendingPeerId,"to",receivingPeerId)):(Log.warn(self._debugOptions.instanceId,"Please upgrade your key to privileged to use this function"),void self._trigger("introduceStateChange",self.INTRODUCE_STATE.ERROR,self._user.sid,sendingPeerId,receivingPeerId,"notPrivileged"))},Skylink.prototype.joinRoom=function(room,options,callback){var self=this,selectedRoom=self._defaultRoom,previousRoom=self._selectedRoom,mediaOptions={};room&&"string"==typeof room?selectedRoom=room:room&&"object"==typeof room?mediaOptions=room:"function"==typeof room&&(callback=room),options&&"object"==typeof options?mediaOptions=options:"function"==typeof options&&(callback=options);var resolveAsErrorFn=function(error,tryRoom,readyState){Log.error(self._debugOptions.instanceId,error),"function"==typeof callback&&callback({room:tryRoom,errorCode:readyState||null,error:"string"==typeof error?new Error(error):error})},joinRoomFn=function(){self._initSelectedRoom(selectedRoom,function(initError,initSuccess){return initError?void resolveAsErrorFn(initError.error,self._selectedRoom,self._readyState):void self._waitForOpenChannel(mediaOptions,function(error,success){return error?void resolveAsErrorFn(error,self._selectedRoom,self._readyState):(self.once("peerJoined",function(peerId,peerInfo,isSelf){"function"==typeof callback&&(Log.info(self._debugOptions.instanceId,[null,"Room",selectedRoom,"Connected to Room ->"],peerInfo),callback(null,{room:self._selectedRoom,peerId:peerId,peerInfo:peerInfo}))},function(peerId,peerInfo,isSelf){return peerInfo.room===selectedRoom&&isSelf}),void self._sendChannelMessage({type:self._SIG_MESSAGE_TYPE.JOIN_ROOM,uid:self._user.uid,cid:self._key,rid:self._room.id,userCred:self._user.token,timeStamp:self._user.timeStamp,apiOwner:self._appKeyOwner,roomCred:self._room.token,start:self._room.startDateTime,len:self._room.duration,isPrivileged:self._isPrivileged===!0,autoIntroduce:self._autoIntroduce!==!1,key:self._appKey}))})})};if(null===room||["number","boolean"].indexOf(typeof room)>-1)return void resolveAsErrorFn("Invalid room name is provided",room);if(null===options||["number","boolean"].indexOf(typeof options)>-1)return void resolveAsErrorFn("Invalid mediaOptions is provided",selectedRoom);if(self._inRoom){var stopStream=mediaOptions.audio===!1&&mediaOptions.video===!1;self.leaveRoom(stopStream,function(lRError,lRSuccess){Log.debug(self._debugOptions.instanceId,[null,"Room",previousRoom,"Leave Room callback result ->"],[lRError,lRSuccess]),joinRoomFn()})}else joinRoomFn()},Skylink.prototype.leaveRoom=function(stopMediaOptions,callback){var self=this,stopUserMedia=!0,stopScreenshare=!0,previousRoom=self._selectedRoom,previousUserPeerId=self._user?self._user.sid:null,peersThatLeft=[],isNotInRoom=!self._inRoom;"boolean"==typeof stopMediaOptions?stopMediaOptions===!1&&(stopUserMedia=!1,stopScreenshare=!1):stopMediaOptions&&"object"==typeof stopMediaOptions?(stopUserMedia=stopMediaOptions.userMedia!==!1,stopScreenshare=stopMediaOptions.screenshare!==!1):"function"==typeof stopMediaOptions&&(callback=stopMediaOptions);for(var infoPeerId in self._peerInformations)self._peerInformations.hasOwnProperty(infoPeerId)&&self._peerInformations[infoPeerId]&&(peersThatLeft.push(infoPeerId),self._removePeer(infoPeerId));for(var connPeerId in self._peerConnections)self._peerConnections.hasOwnProperty(connPeerId)&&self._peerConnections[connPeerId]&&peersThatLeft.indexOf(connPeerId)===-1&&(peersThatLeft.push(connPeerId),self._removePeer(connPeerId));if(self._inRoom=!1,self._closeChannel(),isNotInRoom){var notInRoomError="Unable to leave room as user is not in any room";return Log.error(self._debugOptions.instanceId,[null,"Room",previousRoom,notInRoomError]),void("function"==typeof callback&&callback(new Error(notInRoomError),null))}self._stopStreams({userMedia:stopUserMedia,screenshare:stopScreenshare}),self._wait(function(){Log.log(self._debugOptions.instanceId,[null,"Room",previousRoom,"User left the room"]),self._trigger("peerLeft",previousUserPeerId,self.getPeerInfo(),!0),"function"==typeof callback&&callback(null,{peerId:previousUserPeerId,previousRoom:previousRoom})},function(){return!self._channelOpen})},Skylink.prototype.lockRoom=function(){this._user&&this._user.sid&&(Log.log(this._debugOptions.instanceId,"Update to isRoomLocked status ->",!0),this._sendChannelMessage({type:this._SIG_MESSAGE_TYPE.ROOM_LOCK,mid:this._user.sid,rid:this._room.id,lock:!0}),this._roomLocked=!0,this._trigger("roomLock",!0,this._user.sid,this.getPeerInfo(),!0))},Skylink.prototype.muteStream=function(options){var self=this;if("object"!=typeof options)return void Log.error(self._debugOptions.instanceId,"Provided settings is not an object");if(!(self._streams.userMedia&&self._streams.userMedia.stream||self._streams.screenshare&&self._streams.screenshare.stream))return void Log.warn(self._debugOptions.instanceId,"No streams are available to mute / unmute!");var audioMuted="boolean"!=typeof options.audioMuted||options.audioMuted,videoMuted="boolean"!=typeof options.videoMuted||options.videoMuted,hasToggledAudio=!1,hasToggledVideo=!1;if(self._streamsMutedSettings.audioMuted!==audioMuted&&(self._streamsMutedSettings.audioMuted=audioMuted,hasToggledAudio=!0),self._streamsMutedSettings.videoMuted!==videoMuted&&(self._streamsMutedSettings.videoMuted=videoMuted,hasToggledVideo=!0),hasToggledVideo||hasToggledAudio){var streamTracksAvailability=self._muteStreams();hasToggledVideo&&self._inRoom&&self._sendChannelMessage({type:self._SIG_MESSAGE_TYPE.MUTE_VIDEO,mid:self._user.sid,rid:self._room.id,muted:self._streamsMutedSettings.videoMuted,stamp:(new Date).getTime()}),hasToggledAudio&&self._inRoom&&setTimeout(function(){self._sendChannelMessage({type:self._SIG_MESSAGE_TYPE.MUTE_AUDIO,mid:self._user.sid,rid:self._room.id,muted:self._streamsMutedSettings.audioMuted,stamp:(new Date).getTime()})},hasToggledVideo?1050:0),(streamTracksAvailability.hasVideo&&hasToggledVideo||streamTracksAvailability.hasAudio&&hasToggledAudio)&&(self._trigger("localMediaMuted",{audioMuted:!streamTracksAvailability.hasAudio||self._streamsMutedSettings.audioMuted,videoMuted:!streamTracksAvailability.hasVideo||self._streamsMutedSettings.videoMuted}),self._inRoom&&(self._trigger("streamMuted",self._user.sid,self.getPeerInfo(),!0,self._streams.screenshare&&self._streams.screenshare.stream),self._trigger("peerUpdated",self._user.sid,self.getPeerInfo(),!0)))}},Skylink.prototype.off=function(eventName,callback){if(eventName&&"string"==typeof eventName){if(void 0===callback)return this._EVENTS[eventName]=[],this._onceEvents[eventName]=[],void Log.log(this._debugOptions.instanceId,[null,"Event",eventName,"All events are unsubscribed"]);for(var arr=this._EVENTS[eventName],once=this._onceEvents[eventName],i=0;i<arr.length;i++)if(arr[i]===callback){Log.log(this._debugOptions.instanceId,[null,"Event",eventName,"Event is unsubscribed"]),arr.splice(i,1);break}if(void 0!==once)for(var j=0;j<once.length;j++)if(once[j][0]===callback){Log.log(this._debugOptions.instanceId,[null,"Event",eventName,"One-time Event is unsubscribed"]),once.splice(j,1);break}}else this._EVENTS={},this._onceEvents={}},Skylink.prototype.on=function(eventName,callback){"function"==typeof callback?(this._EVENTS[eventName]=this._EVENTS[eventName]||[],this._EVENTS[eventName].push(callback),Log.log(this._debugOptions.instanceId,[null,"Event",eventName,"Event is subscribed"])):Log.error(this._debugOptions.instanceId,[null,"Event",eventName,"Provided parameter is not a function"])},Skylink.prototype.once=function(eventName,callback,condition,fireAlways){"boolean"==typeof condition&&(fireAlways=condition,condition=null),fireAlways="undefined"!=typeof fireAlways&&fireAlways,condition="function"!=typeof condition?function(){return!0}:condition,"function"==typeof callback?(this._onceEvents[eventName]=this._onceEvents[eventName]||[],this._onceEvents[eventName].push([callback,condition,fireAlways]),Log.log(this._debugOptions.instanceId,[null,"Event",eventName,"Event is subscribed on condition"])):Log.error(this._debugOptions.instanceId,[null,"Event",eventName,"Provided callback is not a function"])},Skylink.prototype.refreshConnection=function(targetPeerId,iceRestart,callback){var self=this,listOfPeers=Object.keys(self._peerConnections),doIceRestart=!1;Array.isArray(targetPeerId)?listOfPeers=targetPeerId:"string"==typeof targetPeerId?listOfPeers=[targetPeerId]:"boolean"==typeof targetPeerId?doIceRestart=targetPeerId:"function"==typeof targetPeerId&&(callback=targetPeerId),"boolean"==typeof iceRestart?doIceRestart=iceRestart:"function"==typeof iceRestart&&(callback=iceRestart);var emitErrorForPeersFn=function(error){if(Log.error(self._debugOptions.instanceId,error),"function"==typeof callback){var listOfPeerErrors={};if(0===listOfPeers.length)listOfPeerErrors.self=new Error(error);else for(var i=0;i<listOfPeers.length;i++)listOfPeerErrors[listOfPeers[i]]=new Error(error);callback({refreshErrors:listOfPeerRestartErrors,listOfPeers:listOfPeers},null)}};return 0!==listOfPeers.length||self._hasMCU&&!self._mcuUseRenegoRestart?"edge"===window.webrtcDetectedBrowser?void emitErrorForPeersFn("Edge browser currently does not support renegotiation."):void self._throttle(function(runFn){return runFn||!self._hasMCU||self._mcuUseRenegoRestart?void self._refreshPeerConnection(listOfPeers,doIceRestart,callback):void(self._throttlingShouldThrowError&&emitErrorForPeersFn("Unable to run as throttle interval has not reached ("+self._throttlingTimeouts.refreshConnection+"ms)."))},"refreshConnection",self._throttlingTimeouts.refreshConnection):void emitErrorForPeersFn("There is currently no peer connections to restart")},Skylink.prototype.sendBlobData=function(data,timeout,targetPeerId,sendChunksAsBinary,callback){this._startDataTransfer(data,timeout,targetPeerId,sendChunksAsBinary,callback,"blob")},Skylink.prototype.sendMessage=function(message,targetPeerId){var listOfPeers=Object.keys(this._peerInformations),isPrivate=!1;if(Array.isArray(targetPeerId)?(listOfPeers=targetPeerId,isPrivate=!0):targetPeerId&&"string"==typeof targetPeerId&&(listOfPeers=[targetPeerId],isPrivate=!0),!this._inRoom||!this._socket||!this._user)return void Log.error(this._debugOptions.instanceId,"Unable to send message as User is not in Room. ->",message);for(var i=0;i<listOfPeers.length;i++){var peerId=listOfPeers[i];this._peerInformations[peerId]?"MCU"===peerId?(listOfPeers.splice(i,1),i--):isPrivate&&(Log.debug(this._debugOptions.instanceId,[peerId,"Socket",null,"Sending private message to Peer"]),this._sendChannelMessage({cid:this._key,data:message,mid:this._user.sid,rid:this._room.id,target:peerId,type:this._SIG_MESSAGE_TYPE.PRIVATE_MESSAGE})):(Log.error(this._debugOptions.instanceId,[peerId,"Socket",null,"Dropping of sending message to Peer as Peer session does not exists"]),listOfPeers.splice(i,1),i--)}0===listOfPeers.length&&Log.warn(this._debugOptions.instanceId,"Currently there are no Peers to send message to (unless the message is queued and there are Peer connected by then)."),isPrivate?this._trigger("incomingMessage",{content:message,isPrivate:isPrivate,targetPeerId:targetPeerId||null,listOfPeers:listOfPeers,isDataChannel:!1,senderPeerId:this._user.sid},this._user.sid,this.getPeerInfo(),!0):(Log.debug(this._debugOptions.instanceId,[null,"Socket",null,"Broadcasting message to Peers"]),this._sendChannelMessage({cid:this._key,data:message,mid:this._user.sid,rid:this._room.id,type:this._SIG_MESSAGE_TYPE.PUBLIC_MESSAGE}))},Skylink.prototype.sendP2PMessage=function(message,targetPeerId){var listOfPeers=Object.keys(this._dataChannels),isPrivate=!1;if(Array.isArray(targetPeerId)?(listOfPeers=targetPeerId,isPrivate=!0):targetPeerId&&"string"==typeof targetPeerId&&(listOfPeers=[targetPeerId],isPrivate=!0),!this._inRoom||!this._user||!this._user.sid)return void Log.error(this._debugOptions.instanceId,"Unable to send message as User is not in Room. ->",message);if(!this._enableDataChannel)return void Log.error(this._debugOptions.instanceId,"Unable to send message as User does not have Datachannel enabled. ->",message);for(var i=0;i<listOfPeers.length;i++){var peerId=listOfPeers[i];this._dataChannels[peerId]?"MCU"===peerId?(listOfPeers.splice(i,1),i--):this._hasMCU||(Log.debug(this._debugOptions.instanceId,[peerId,"RTCDataChannel",null,"Sending "+(isPrivate?"private":"")+" P2P message to Peer"]),this._sendMessageToDataChannel(peerId,{type:this._DC_PROTOCOL_TYPE.MESSAGE,isPrivate:isPrivate,sender:this._user.sid,target:peerId,data:message},"main")):(Log.error(this._debugOptions.instanceId,[peerId,"RTCDataChannel",null,"Dropping of sending message to Peer as Datachannel connection does not exists"]),listOfPeers.splice(i,1),i--)}0===listOfPeers.length&&Log.warn(this._debugOptions.instanceId,"Currently there are no Peers to send P2P message to (unless the message is queued and there are Peer connected by then)."),this._hasMCU&&(Log.debug(this._debugOptions.instanceId,["MCU","RTCDataChannel",null,"Broadcasting "+(isPrivate?"private":"")+" P2P message to Peers"]),this._sendMessageToDataChannel("MCU",{type:this._DC_PROTOCOL_TYPE.MESSAGE,isPrivate:isPrivate,sender:this._user.sid,target:listOfPeers,data:message},"main")),this._trigger("incomingMessage",{content:message,isPrivate:isPrivate,targetPeerId:targetPeerId||null,listOfPeers:listOfPeers,isDataChannel:!0,senderPeerId:this._user.sid},this._user.sid,this.getPeerInfo(),!0)},Skylink.prototype.sendStream=function(options,callback){var self=this,restartFn=function(stream){if(self._inRoom)self._streams.screenshare||(self._trigger("incomingStream",self._user.sid,stream,!0,self.getPeerInfo(),!1,stream.id||stream.label),self._trigger("peerUpdated",self._user.sid,self.getPeerInfo(),!0)),Object.keys(self._peerConnections).length>0||self._hasMCU?self._refreshPeerConnection(Object.keys(self._peerConnections),!1,function(err,success){return err?(Log.error(self._debugOptions.instanceId,"Failed refreshing connections for sendStream() ->",err),void("function"==typeof callback&&callback(new Error("Failed refreshing connections."),null))):void("function"==typeof callback&&callback(null,stream));
}):"function"==typeof callback&&callback(null,stream);else{var notInRoomAgainError="Unable to send stream as user is not in the Room.";Log.error(self._debugOptions.instanceId,notInRoomAgainError,stream),"function"==typeof callback&&callback(new Error(notInRoomAgainError),null)}};if("object"!=typeof options||null===options){var invalidOptionsError="Provided stream settings is invalid";return Log.error(self._debugOptions.instanceId,invalidOptionsError,options),void("function"==typeof callback&&callback(new Error(invalidOptionsError),null))}if(!self._inRoom){var notInRoomError="Unable to send stream as user is not in the Room.";return Log.error(self._debugOptions.instanceId,notInRoomError,options),void("function"==typeof callback&&callback(new Error(notInRoomError),null))}if("edge"===window.webrtcDetectedBrowser){var edgeNotSupportError="Edge browser currently does not support renegotiation.";return Log.error(self._debugOptions.instanceId,edgeNotSupportError,options),void("function"==typeof callback&&callback(new Error(edgeNotSupportError),null))}if("function"==typeof options.getAudioTracks||"function"==typeof options.getVideoTracks){var checkActiveTracksFn=function(tracks){for(var t=0;t<tracks.length;t++)if(!(tracks[t].ended||"string"==typeof tracks[t].readyState&&"live"!==tracks[t].readyState))return!0;return!1};if(!checkActiveTracksFn(options.getAudioTracks())&&!checkActiveTracksFn(options.getVideoTracks())){var invalidStreamError="Provided stream object does not have audio or video tracks.";return Log.error(self._debugOptions.instanceId,invalidStreamError,options),void("function"==typeof callback&&callback(new Error(invalidStreamError),null))}self._onStreamAccessSuccess(options,{settings:{audio:!0,video:!0},getUserMediaSettings:{audio:!0,video:!0}},!1,!1),restartFn(options)}else self.getUserMedia(options,function(err,stream){return err?void("function"==typeof callback&&callback(err,null)):void restartFn(stream)})},Skylink.prototype.sendURLData=function(data,timeout,targetPeerId,callback){this._startDataTransfer(data,timeout,targetPeerId,callback,null,"data")},Skylink.prototype.setDebugMode=function(options){var self=this;options&&"object"==typeof options?(self._debugOptions.trace=options.trace===!0,self._debugOptions.storeLogs=options.storeLogs===!0,self._debugOptions.printInstanceLabel=options.printInstanceLabel===!0,self._debugOptions.printTimeStamp=options.printTimeStamp===!0):options===!0?(self._debugOptions.trace=!0,self._debugOptions.storeLogs=!0,self._debugOptions.printInstanceLabel=!0,self._debugOptions.printTimeStamp=!0):(self._debugOptions.trace=!1,self._debugOptions.storeLogs=!1,self._debugOptions.printInstanceLabel=!1,self._debugOptions.printTimeStamp=!1),Log.configure(self._debugOptions.instanceId,self._debugOptions),Log.log(self._debugOptions.instanceId,"setDebugMode(): Set debug options ->",UtilsFactory.clone(self._debugOptions))},Skylink.prototype.setLogLevel=function(logLevel){var self=this,hasSet=!1;"number"==typeof logLevel&&UtilsFactory.forEach(self.LOG_LEVEL,function(opt,prop){opt===logLevel&&(self._debugOptions.level=logLevel,Log.configure(self._debugOptions.instanceId,self._debugOptions),Log.log(self._debugOptions.instanceId,'setLogLevel(): Log level of "'+prop+'" set.'),hasSet=!0)}),hasSet||Log.error(self._debugOptions.instanceId,"setLogLevel(): Log level does not exist. Level is not set.")},Skylink.prototype.setUserData=function(userData){var self=this,updatedUserData="";"undefined"!=typeof userData&&null!==userData&&(updatedUserData=userData),self._userData=updatedUserData,self._inRoom?(Log.log(self._debugOptions.instanceId,"Updated userData -> ",updatedUserData),self._sendChannelMessage({type:self._SIG_MESSAGE_TYPE.UPDATE_USER,mid:self._user.sid,rid:self._room.id,userData:updatedUserData,stamp:(new Date).getTime()}),self._trigger("peerUpdated",self._user.sid,self.getPeerInfo(),!0)):Log.warn(self._debugOptions.instanceId,"User is not in the room. Broadcast of updated information will be dropped")},Skylink.prototype.shareScreen=function(enableAudio,callback){var self=this,enableAudioSettings={stereo:!0};"function"==typeof enableAudio?(callback=enableAudio,enableAudio=!0):enableAudio&&"object"==typeof enableAudio&&(enableAudioSettings.usedtx="boolean"==typeof enableAudio.usedtx?enableAudio.usedtx:null,enableAudioSettings.useinbandfec="boolean"==typeof enableAudio.useinbandfec?enableAudio.useinbandfec:null,enableAudioSettings.stereo=enableAudio.stereo===!0,enableAudioSettings.echoCancellation=enableAudio.echoCancellation===!0),self._throttle(function(runFn){if(runFn){var settings={settings:{audio:!!(enableAudio===!0||enableAudio&&"object"==typeof enableAudio)&&enableAudioSettings,video:{screenshare:!0,exactConstraints:!1}},getUserMediaSettings:{video:{mediaSource:"window"}}},mediaAccessSuccessFn=function(stream){self.off("mediaAccessError",mediaAccessErrorFn),self._inRoom?(self._trigger("incomingStream",self._user.sid,stream,!0,self.getPeerInfo(),!0,stream.id||stream.label),self._trigger("peerUpdated",self._user.sid,self.getPeerInfo(),!0),Object.keys(self._peerConnections).length>0||self._hasMCU?self._refreshPeerConnection(Object.keys(self._peerConnections),!1,function(err,success){return err?(Log.error("Failed refreshing connections for shareScreen() ->",err),void("function"==typeof callback&&callback(new Error("Failed refreshing connections."),null))):void("function"==typeof callback&&callback(null,stream))}):"function"==typeof callback&&callback(null,stream)):"function"==typeof callback&&callback(null,stream)},mediaAccessErrorFn=function(error){self.off("mediaAccessSuccess",mediaAccessSuccessFn),"function"==typeof callback&&callback(error,null)};self.once("mediaAccessSuccess",mediaAccessSuccessFn,function(stream,isScreensharing){return isScreensharing}),self.once("mediaAccessError",mediaAccessErrorFn,function(error,isScreensharing){return isScreensharing});try{enableAudio&&"firefox"===window.webrtcDetectedBrowser&&(settings.getUserMediaSettings.audio=!0),navigator.getUserMedia(settings.getUserMediaSettings,function(stream){return"firefox"!==window.webrtcDetectedBrowser&&enableAudio?void navigator.getUserMedia({audio:!0},function(audioStream){try{audioStream.addTrack(stream.getVideoTracks()[0]),self.once("mediaAccessSuccess",function(){self._streams.screenshare.streamClone=stream},function(stream,isScreensharing){return isScreensharing}),self._onStreamAccessSuccess(audioStream,settings,!0,!1)}catch(error){Log.error(self._debugOptions.instanceId,"Failed retrieving audio stream for screensharing stream",error),self._onStreamAccessSuccess(stream,settings,!0,!1)}},function(error){Log.error(self._debugOptions.instanceId,"Failed retrieving audio stream for screensharing stream",error),self._onStreamAccessSuccess(stream,settings,!0,!1)}):void self._onStreamAccessSuccess(stream,settings,!0,!1)},function(error){self._onStreamAccessError(error,settings,!0,!1)})}catch(error){self._onStreamAccessError(error,settings,!0,!1)}}else if(self._throttlingShouldThrowError){var throttleLimitError="Unable to run as throttle interval has not reached ("+self._throttlingTimeouts.shareScreen+"ms).";Log.error(self._debugOptions.instanceId,throttleLimitError),"function"==typeof callback&&callback(new Error(throttleLimitError),null)}},"shareScreen",self._throttlingTimeouts.shareScreen)},Skylink.prototype.startRecording=function(callback){var self=this;if(!self._hasMCU){var noMCUError="Unable to start recording as MCU is not connected";return Log.error(self._debugOptions.instanceId,noMCUError),void("function"==typeof callback&&callback(new Error(noMCUError),null))}if(self._currentRecordingId){var hasRecordingSessionError="Unable to start recording as there is an existing recording in-progress";return Log.error(self._debugOptions.instanceId,hasRecordingSessionError),void("function"==typeof callback&&callback(new Error(hasRecordingSessionError),null))}"function"==typeof callback&&self.once("recordingState",function(state,recordingId){callback(null,recordingId)},function(state){return state===self.RECORDING_STATE.START}),self._sendChannelMessage({type:self._SIG_MESSAGE_TYPE.START_RECORDING,rid:self._room.id,target:"MCU"}),Log.debug(self._debugOptions.instanceId,["MCU","Recording",null,"Starting recording"])},Skylink.prototype.startStreamingData=function(isStringStream,targetPeerId){var self=this,listOfPeers=Object.keys(self._dataChannels),isPrivate=!1,sessionChunkType="binary";Array.isArray(targetPeerId)?(listOfPeers=targetPeerId,isPrivate=!0):targetPeerId&&"string"==typeof targetPeerId&&(listOfPeers=[targetPeerId],isPrivate=!0),Array.isArray(isStringStream)?(listOfPeers=isStringStream,targetPeerId=isStringStream,isPrivate=!0):isStringStream&&"string"==typeof isStringStream?(listOfPeers=[isStringStream],targetPeerId=isStringStream,isPrivate=!0):isStringStream&&"boolean"==typeof isStringStream&&(sessionChunkType="string");var sessionInfo={chunk:null,chunkSize:0,chunkType:"string"===sessionChunkType?self.DATA_TRANSFER_DATA_TYPE.STRING:self.DATA_TRANSFER_DATA_TYPE.BLOB,isPrivate:isPrivate,isStringStream:"string"===sessionChunkType,senderPeerId:self._user&&self._user.sid?self._user.sid:null};listOfPeers.indexOf("MCU")>-1&&listOfPeers.splice(listOfPeers.indexOf("MCU"),1);var emitErrorBeforeStreamingFn=function(error){if(Log.error(self._debugOptions.instanceId,error),listOfPeers.length>0)for(var i=0;i<listOfPeers.length;i++)self._trigger("dataStreamState",self.DATA_STREAM_STATE.START_ERROR,null,listOfPeers[i],sessionInfo,new Error(error));else self._trigger("dataStreamState",self.DATA_STREAM_STATE.START_ERROR,null,null,sessionInfo,new Error(error))};if(!this._inRoom||!this._user||!this._user.sid)return emitErrorBeforeStreamingFn("Unable to start data streaming as User is not in Room.");if(!this._enableDataChannel)return emitErrorBeforeStreamingFn("Unable to start data streaming as User does not have Datachannel enabled.");if(0===listOfPeers.length)return emitErrorBeforeStreamingFn("Unable to start data streaming as there are no Peers to start session with.");for(var transferId="stream_"+(self._user&&self._user.sid?self._user.sid:"-")+"_"+(new Date).getTime(),peersInterop=[],peersNonInterop=[],sessions={},listenToPeerFn=function(peerId,channelProp){var hasStarted=!1;sessions[peerId]=channelProp,self.once("dataStreamState",function(){},function(state,evtTransferId,evtPeerId,evtSessionInfo){if(evtTransferId===transferId&&evtPeerId===peerId){var updatedSessionInfo=(evtSessionInfo.chunk,UtilsFactory.clone(evtSessionInfo));return delete updatedSessionInfo.chunk,state===self.DATA_STREAM_STATE.SENDING_STARTED?void(hasStarted=!0):hasStarted&&[self.DATA_STREAM_STATE.ERROR,self.DATA_STREAM_STATE.SENDING_STOPPED].indexOf(state)>-1?(channelProp===transferId&&self._closeDataChannel(peerId,transferId),self._dataStreams[transferId]&&self._dataStreams[transferId].sessions[peerId]&&(delete self._dataStreams[transferId].sessions[peerId],0===Object.keys(self._dataStreams[transferId].sessions).length&&delete self._dataStreams[transferId]),!0):void 0}})},i=0;i<listOfPeers.length;i++){var peerId=listOfPeers[i],error=null,dtProtocolVersion=((self._peerInformations[peerId]||{}).agent||{}).DTProtocolVersion||"",channelProp=self._isLowerThanVersion(dtProtocolVersion,"0.1.2")?"main":transferId;if(self._dataChannels[peerId]&&self._dataChannels[peerId].main)if(!self._hasMCU||self._dataChannels.MCU&&self._dataChannels.MCU.main)if(self._isLowerThanVersion(dtProtocolVersion,"0.1.3"))error='Peer DTProtocolVersion does not support data streaming. (received: "'+dtProtocolVersion+'", expected: "0.1.3")';else if("main"===channelProp){var dataTransferId=self._hasMCU?self._dataChannels.MCU.main.transferId:self._dataChannels[peerId].main.transferId;self._dataChannels[peerId].main.getInfo().custom.streamId?error="Peer Datachannel currently has an active data transfer session.":self._hasMCU&&self._dataChannels.MCU.main.getInfo().custom.streamId?error="MCU Peer Datachannel currently has an active data transfer session.":self._dataTransfers[dataTransferId]&&self._dataTransfers[dataTransferId].sessionChunkType===sessionChunkType?error=(self._hasMCU?"MCU ":"")+"Peer Datachannel currently has an active "+sessionChunkType+" data transfer.":peersInterop.push(peerId)}else peersNonInterop.push(peerId);else error="MCU Datachannel connection does not exists";else error="Datachannel connection does not exists";error?(self._trigger("dataStreamState",self.DATA_STREAM_STATE.START_ERROR,transferId,peerId,sessionInfo,new Error(error)),listOfPeers.splice(i,1),i--):listenToPeerFn(peerId,channelProp)}if(0===listOfPeers.length)return void Log.warn(self._debugOptions.instanceId,"There are no Peers to start data session with.");self._dataStreams[transferId]={sessions:sessions,chunkType:"string"===sessionChunkType?self.DATA_TRANSFER_DATA_TYPE.STRING:self.DATA_TRANSFER_DATA_TYPE.BLOB,sessionChunkType:sessionChunkType,isPrivate:isPrivate,isStringStream:"string"===sessionChunkType,senderPeerId:self._user&&self._user.sid?self._user.sid:null,isUpload:!0};var startDataSessionFn=function(peerId,channelProp,targetPeers){if(self.once("dataChannelState",function(){},function(state,evtPeerId,channelName,channelType,error){if(!self._dataStreams[transferId])return!0;if(evtPeerId===peerId&&("main"===channelProp?channelType===self.DATA_CHANNEL_TYPE.MESSAGING:channelName===transferId&&channelType===self.DATA_CHANNEL_TYPE.DATA)&&[self.DATA_CHANNEL_STATE.ERROR,self.DATA_CHANNEL_STATE.CLOSED].indexOf(state)>-1){var updatedError=new Error(error&&error.message?error.message:'Failed data transfer as datachannel state is "'+state+'".');if("MCU"===peerId)for(var mp=0;mp<targetPeers.length;mp++)self._trigger("dataStreamState",self.DATA_STREAM_STATE.ERROR,transferId,targetPeers[mp],sessionInfo,updatedError);else self._trigger("dataStreamState",self.DATA_STREAM_STATE.ERROR,transferId,peerId,sessionInfo,updatedError);return!0}}),!self._dataChannels[peerId][channelProp]||self._dataChannels[peerId][channelProp].getInfo().readyState!==self.DATA_CHANNEL_STATE.OPEN){var notOpenError=new Error("Failed starting data streaming session as channel is not opened.");if("MCU"===peerId)for(i=0;i<targetPeers.length;i++)self._trigger("dataStreamState",self.DATA_STREAM_STATE.START_ERROR,transferId,targetPeers[i],sessionInfo,notOpenError);else self._trigger("dataStreamState",self.DATA_STREAM_STATE.START_ERROR,transferId,peerId,sessionInfo,notOpenError)}self._sendMessageToDataChannel(peerId,{type:self._DC_PROTOCOL_TYPE.WRQ,transferId:transferId,name:transferId,size:0,originalSize:0,dataType:"fastBinaryStart",mimeType:null,chunkType:sessionChunkType,chunkSize:0,timeout:0,isPrivate:isPrivate,sender:self._user.sid,agent:window.webrtcDetectedBrowser,version:window.webrtcDetectedVersion,target:"MCU"===peerId?targetPeers:peerId},channelProp,function(error){}),self._dataChannels[peerId][channelProp].setCustom("streamId",transferId);var updatedSessionInfo=UtilsFactory.clone(sessionInfo);if(delete updatedSessionInfo.chunk,"MCU"===peerId)for(var tp=0;tp<targetPeers.length;tp++)self._trigger("dataStreamState",self.DATA_STREAM_STATE.SENDING_STARTED,transferId,targetPeers[tp],sessionInfo,null),self._trigger("incomingDataStreamStarted",transferId,targetPeers[tp],updatedSessionInfo,!0);else self._trigger("dataStreamState",self.DATA_STREAM_STATE.SENDING_STARTED,transferId,peerId,sessionInfo,null),self._trigger("incomingDataStreamStarted",transferId,peerId,updatedSessionInfo,!0)},waitForChannelOpenFn=function(peerId,targetPeers){self.once("dataChannelState",function(state,evtPeerId,error){if(state!==self.DATA_CHANNEL_STATE.CREATE_ERROR)startDataSessionFn(peerId,transferId,targetPeers);else if("MCU"===peerId)for(var mp=0;mp<targetPeers.length;mp++)self._trigger("dataStreamState",self.DATA_STREAM_STATE.START_ERROR,transferId,targetPeers[mp],sessionInfo,error);else self._trigger("dataStreamState",self.DATA_STREAM_STATE.START_ERROR,transferId,peerId,sessionInfo,error)},function(state,evtPeerId,error,channelName,channelType){if(evtPeerId===peerId&&channelName===transferId&&channelType===self.DATA_CHANNEL_TYPE.DATA)return[self.DATA_CHANNEL_STATE.CREATE_ERROR,self.DATA_CHANNEL_STATE.OPEN].indexOf(state)>-1}),self._createDataChannel(peerId,transferId)};if(peersNonInterop.length>0)if(self._hasMCU)waitForChannelOpenFn("MCU",peersNonInterop);else for(var pni=0;pni<peersNonInterop.length;pni++)waitForChannelOpenFn(peersNonInterop[pni],null);if(peersInterop.length>0)if(self._hasMCU)startDataSessionFn("MCU","main",peersInterop);else for(var pi=0;pi<peersInterop.length;pi++)startDataSessionFn(peersInterop[pi],"main",null)},Skylink.prototype.stopRecording=function(callback,callbackSuccessWhenLink){var self=this;if(!self._hasMCU){var noMCUError="Unable to stop recording as MCU is not connected";return Log.error(self._debugOptions.instanceId,noMCUError),void("function"==typeof callback&&callback(new Error(noMCUError),null))}if(!self._currentRecordingId){var noRecordingSessionError="Unable to stop recording as there is no recording in-progress";return Log.error(self._debugOptions.instanceId,noRecordingSessionError),void("function"==typeof callback&&callback(new Error(noRecordingSessionError),null))}if(self._recordingStartInterval){var recordingSecsRequiredError="Unable to stop recording as 4 seconds has not been recorded yet";return Log.error(self._debugOptions.instanceId,recordingSecsRequiredError),void("function"==typeof callback&&callback(new Error(recordingSecsRequiredError),null))}if("function"==typeof callback){var expectedRecordingId=self._currentRecordingId;self.once("recordingState",function(state,recordingId,link,error){return callbackSuccessWhenLink?error?void callback(error,null):void callback(null,{link:link,recordingId:recordingId}):void callback(null,recordingId)},function(state,recordingId){if(expectedRecordingId===recordingId)return callbackSuccessWhenLink?[self.RECORDING_STATE.LINK,self.RECORDING_STATE.ERROR].indexOf(state)>-1:state===self.RECORDING_STATE.STOP})}self._sendChannelMessage({type:self._SIG_MESSAGE_TYPE.STOP_RECORDING,rid:self._room.id,target:"MCU"}),Log.debug(self._debugOptions.instanceId,["MCU","Recording",null,"Stopping recording"])},Skylink.prototype.stopScreen=function(){this._streams.screenshare&&(this._stopStreams({screenshare:!0}),this._inRoom&&(this._streams.userMedia&&this._streams.userMedia.stream&&(this._trigger("incomingStream",this._user.sid,this._streams.userMedia.stream,!0,this.getPeerInfo(),!1,this._streams.userMedia.stream.id||this._streams.userMedia.stream.label),this._trigger("peerUpdated",this._user.sid,this.getPeerInfo(),!0)),this._refreshPeerConnection(Object.keys(this._peerConnections),!1)))},Skylink.prototype.stopStream=function(){this._streams.userMedia&&this._stopStreams({userMedia:!0})},Skylink.prototype.stopStreamingData=function(transferId){var self=this;if(!transferId||"string"!=typeof transferId)return void Log.error(self._debugOptions.instanceId,"Failed streaming data chunk as stream session ID is not provided.");if(!(self._inRoom&&self._user&&self._user.sid))return void Log.error(self._debugOptions.instanceId,"Failed streaming data chunk as User is not in the Room.");if(!self._dataStreams[transferId])return void Log.error(self._debugOptions.instanceId,"Failed stopping data streaming session as it does not exists.");if(!self._dataStreams[transferId].isUpload)return void Log.error(self._debugOptions.instanceId,"Failed stopping data streaming session as it is not sending.");var sessionInfo={chunk:null,chunkSize:0,chunkType:"string"===self._dataStreams[transferId].sessionChunkType?self.DATA_TRANSFER_DATA_TYPE.STRING:self.DATA_TRANSFER_DATA_TYPE.BLOB,isPrivate:self._dataStreams[transferId].sessionChunkType.isPrivate,isStringStream:"string"===self._dataStreams[transferId].sessionChunkType,senderPeerId:self._user&&self._user.sid?self._user.sid:null},peersInterop=[],peersNonInterop=[],sendDataFn=function(peerId,channelProp,targetPeers){self._sendMessageToDataChannel(peerId,{type:self._DC_PROTOCOL_TYPE.WRQ,transferId:transferId,name:transferId,size:0,originalSize:0,dataType:"fastBinaryStop",mimeType:null,chunkType:self._dataStreams[transferId].sessionChunkType,chunkSize:0,timeout:0,isPrivate:self._dataStreams[transferId].isPrivate,sender:self._user.sid,agent:window.webrtcDetectedBrowser,version:window.webrtcDetectedVersion,target:targetPeers?targetPeers:peerId},channelProp);var updatedSessionInfo=UtilsFactory.clone(sessionInfo);if(delete updatedSessionInfo.chunk,targetPeers)for(var i=0;i<targetPeers.length;i++)self._trigger("dataStreamState",self.DATA_STREAM_STATE.SENDING_STOPPED,transferId,targetPeers[i],sessionInfo,null),self._trigger("incomingDataStreamStopped",transferId,targetPeers[i],updatedSessionInfo,!0);else self._trigger("dataStreamState",self.DATA_STREAM_STATE.SENDING_STOPPED,transferId,peerId,sessionInfo,null),self._trigger("incomingDataStreamStopped",transferId,peerId,updatedSessionInfo,!0)};for(var peerId in self._dataStreams[transferId].sessions)if(self._dataStreams[transferId].sessions.hasOwnProperty(peerId)&&self._dataStreams[transferId].sessions[peerId]){var channelProp=self._dataStreams[transferId].sessions[peerId];if(!self._dataChannels[self._hasMCU?"MCU":peerId]||!self._dataChannels[self._hasMCU?"MCU":peerId][channelProp]||self._dataChannels[self._hasMCU?"MCU":peerId][channelProp].getInfo().readyState!==self.DATA_CHANNEL_STATE.OPEN||self._dataChannels[self._hasMCU?"MCU":peerId][channelProp].getInfo().custom.streamId!==transferId)return Log.error(self._debugOptions.instanceId,[peerId,"RTCDataChannel",transferId,"Failed stopping data streaming session as channel is closed."]),void self._trigger("dataStreamState",self.DATA_STREAM_STATE.ERROR,transferId,peerId,sessionInfo,new Error("Failed stopping data streaming session as Datachannel connection is not open or is active."));self._hasMCU?"main"===self._dataStreams[transferId].sessions[peerId]?peersInterop.push(peerId):peersNonInterop.push(peerId):sendDataFn(peerId,channelProp)}self._hasMCU&&(peersInterop.length>0&&sendDataFn(peerId,"main",peersInterop),peersNonInterop.length>0&&sendDataFn(peerId,transferId,peersNonInterop))},Skylink.prototype.streamData=function(transferId,dataChunk){var self=this;if(!transferId||"string"!=typeof transferId)return void Log.error(self._debugOptions.instanceId,"Failed streaming data chunk as stream session ID is not provided.");if(!dataChunk||"object"!=typeof dataChunk||!(dataChunk instanceof Blob||dataChunk instanceof ArrayBuffer))return void Log.error(self._debugOptions.instanceId,"Failed streaming data chunk as it is not provided.");if(!(self._inRoom&&self._user&&self._user.sid))return void Log.error(self._debugOptions.instanceId,"Failed streaming data chunk as User is not in the Room.");if(!self._dataStreams[transferId])return void Log.error(self._debugOptions.instanceId,"Failed streaming data chunk as session does not exists.");if(!self._dataStreams[transferId].isUpload)return void Log.error(self._debugOptions.instanceId,"Failed streaming data chunk as session is not sending.");if("string"===self._dataStreams[transferId].sessionChunkType?"string"!=typeof dataChunk:"object"!=typeof dataChunk)return void Log.error(self._debugOptions.instanceId,"Failed streaming data chunk as data chunk does not match expected data type.");var updatedDataChunk=dataChunk instanceof ArrayBuffer?new Blob(dataChunk):dataChunk;if("string"===self._dataStreams[transferId].sessionChunkType?updatedDataChunk.length>self._CHUNK_DATAURL_SIZE:updatedDataChunk.length>self._BINARY_FILE_SIZE)return void Log.error(self._debugOptions.instanceId,"Failed streaming data chunk as data chunk exceeds maximum chunk limit.");var sessionInfo={chunk:updatedDataChunk,chunkSize:updatedDataChunk.size||updatedDataChunk.length||updatedDataChunk.byteLength,chunkType:"string"===self._dataStreams[transferId].sessionChunkType?self.DATA_TRANSFER_DATA_TYPE.STRING:self.DATA_TRANSFER_DATA_TYPE.BLOB,isPrivate:self._dataStreams[transferId].sessionChunkType.isPrivate,isStringStream:"string"===self._dataStreams[transferId].sessionChunkType,senderPeerId:self._user&&self._user.sid?self._user.sid:null},peersInterop=[],peersNonInterop=[],sendDataFn=function(peerId,channelProp,targetPeers){var updatedSessionInfo=UtilsFactory.clone(sessionInfo);if(delete updatedSessionInfo.chunk,dataChunk instanceof Blob)self._blobToArrayBuffer(dataChunk,function(buffer){if(self._sendMessageToDataChannel(peerId,buffer,channelProp,!0),targetPeers)for(var i=0;i<targetPeers.length;i++)self._trigger("dataStreamState",self.DATA_STREAM_STATE.SENT,transferId,targetPeers[i],sessionInfo,null),self._trigger("incomingDataStream",dataChunk,transferId,targetPeers[i],updatedSessionInfo,!0);else self._trigger("dataStreamState",self.DATA_STREAM_STATE.SENT,transferId,peerId,sessionInfo,null),self._trigger("incomingDataStream",dataChunk,transferId,peerId,updatedSessionInfo,!0)});else if(self._sendMessageToDataChannel(peerId,dataChunk,channelProp,!0),targetPeers)for(var i=0;i<targetPeers.length;i++)self._trigger("dataStreamState",self.DATA_STREAM_STATE.SENT,transferId,targetPeers[i],sessionInfo,null),self._trigger("incomingDataStream",updatedDataChunk,transferId,targetPeers[i],updatedSessionInfo,!0);else self._trigger("dataStreamState",self.DATA_STREAM_STATE.SENT,transferId,peerId,sessionInfo,null),self._trigger("incomingDataStream",updatedDataChunk,transferId,peerId,updatedSessionInfo,!0)};for(var peerId in self._dataStreams[transferId].sessions)if(self._dataStreams[transferId].sessions.hasOwnProperty(peerId)&&self._dataStreams[transferId].sessions[peerId]){var channelProp=self._dataStreams[transferId].sessions[peerId];if(!self._dataChannels[self._hasMCU?"MCU":peerId]||!self._dataChannels[self._hasMCU?"MCU":peerId][channelProp]||self._dataChannels[self._hasMCU?"MCU":peerId][channelProp].getInfo().readyState!==self.DATA_CHANNEL_STATE.OPEN||self._dataChannels[self._hasMCU?"MCU":peerId][channelProp].getInfo().custom.streamId!==transferId)return Log.error(self._debugOptions.instanceId,[peerId,"RTCDataChannel",transferId,"Failed streaming data as it has not started or is ready."]),void self._trigger("dataStreamState",self.DATA_STREAM_STATE.ERROR,transferId,peerId,sessionInfo,new Error("Streaming as it has not started or Datachannel connection is not open."));self._hasMCU?"main"===channelProp?peersInterop.push(peerId):peersNonInterop.push(peerId):sendDataFn(peerId,channelProp)}self._hasMCU&&(peersInterop.length>0&&sendDataFn(peerId,"main",peersInterop),peersNonInterop.length>0&&sendDataFn(peerId,transferId,peersNonInterop))},Skylink.prototype.unlockRoom=function(){this._user&&this._user.sid&&(Log.log(this._debugOptions.instanceId,"Update to isRoomLocked status ->",!1),this._sendChannelMessage({type:this._SIG_MESSAGE_TYPE.ROOM_LOCK,mid:this._user.sid,rid:this._room.id,lock:!1}),this._roomLocked=!1,this._trigger("roomLock",!1,this._user.sid,this.getPeerInfo(),!0))},Skylink.prototype._createDataChannel=function(peerId,dataChannel,createAsMessagingChannel){var self=this,channelName=(self._user&&self._user.sid?self._user.sid:"-")+"_"+peerId,channelProp=!self._dataChannels[peerId].main||createAsMessagingChannel?"main":channelName;return self._user?self._peerConnections[peerId]&&self._peerConnections[peerId].signalingState!==self.PEER_CONNECTION_STATE.CLOSED?(dataChannel&&"object"==typeof dataChannel?(channelName=dataChannel.label,channelProp="main"===channelProp?"main":channelName):"string"==typeof dataChannel&&(channelName=dataChannel,dataChannel=null,channelProp="main"===channelProp?"main":channelName),dataChannel||(dataChannel=self._peerConnections[peerId]),self._dataChannels[peerId][channelProp]=DatachannelFactory(dataChannel,{options:self._user.sid,peerId:peerId,label:channelName,prop:channelProp,instanceId:self._debugOptions.instanceId}),self._dataChannels[peerId][channelProp].on("state",function(params){self._trigger("dataChannelState",params.state,peerId,params.error,params.label,params.type,params.messageErrorType)}),void self._dataChannels[peerId][channelProp].on("data",function(data){var info=self._dataChannels[peerId][channelProp].getInfo();self._processDataChannelData(data,peerId,info.label,info.type,"string"==typeof data||data.type&&!(data instanceof Blob)?"string":"binary")})):void Log.error([peerId,"RTCDataChannel",channelProp,"Aborting of creating or initializing Datachannel as Peer connection does not exists"],null,self._debugOptions):void Log.error([peerId,"RTCDataChannel",channelProp,"Aborting of creating or initializing Datachannel as User does not have Room session"],null,self._debugOptions)},Skylink.prototype._sendMessageToDataChannel=function(peerId,data,channelProp,doNotConvert,callback){var self=this;return channelProp&&channelProp!==peerId||(channelProp="main"),"object"==typeof data&&data||data&&"string"==typeof data?self._peerConnections[peerId]&&self._peerConnections[peerId].signalingState!==self.PEER_CONNECTION_STATE.CLOSED?self._dataChannels[peerId]&&self._dataChannels[peerId][channelProp]?void self._dataChannels[peerId][channelProp].send(data,!!doNotConvert,"function"==typeof callback?callback:function(){}):void Log.error(self._debugOptions.instanceId,[peerId,"RTCDataChannel",channelProp,"Dropping for sending message as Datachannel connection does not exists ->"],data):void Log.error(self._debugOptions.instanceId,[peerId,"RTCDataChannel",channelProp,"Dropping for sending message as Peer connection does not exists or is closed ->"],data):void Log.error(self._debugOptions.instanceId,[peerId,"RTCDataChannel",channelProp,"Dropping invalid data ->"],data)},Skylink.prototype._closeDataChannel=function(peerId,channelProp){var self=this;if(!self._dataChannels[peerId])return void Log.error(self._debugOptions.instanceId,[peerId,"RTCDataChannel",channelProp||null,"Aborting closing Datachannels as Peer connection does not have Datachannel sessions"]);if(channelProp){if(!self._dataChannels[peerId][channelProp])return void Log.error(self._debugOptions.instanceId,[peerId,"RTCDataChannel",channelProp,"Aborting closing Datachannel as it does not exists"]);self._dataChannels[peerId][channelProp].close()}else for(var channelNameProp in self._dataChannels)self._dataChannels[peerId].hasOwnProperty(channelNameProp)&&self._dataChannels[peerId][channelNameProp]&&self._dataChannels[peerId][channelNameProp].close()},Skylink.prototype._base64ToBlob=function(dataURL){for(var byteString=atob(dataURL),ab=new ArrayBuffer(byteString.length),ia=new Uint8Array(ab),j=0;j<byteString.length;j++)ia[j]=byteString.charCodeAt(j);return new Blob([ab])},Skylink.prototype._blobToBase64=function(data,callback){var fileReader=new FileReader;fileReader.onload=function(){var base64BinaryString=fileReader.result.split(",")[1];callback(base64BinaryString)},fileReader.readAsDataURL(data)},Skylink.prototype._blobToArrayBuffer=function(data,callback){var self=this,fileReader=new FileReader;fileReader.onload=function(){callback(self._isUsingPlugin?new Int8Array(fileReader.result):fileReader.result)},fileReader.readAsArrayBuffer(data)},Skylink.prototype._chunkBlobData=function(blob,chunkSize){var chunksArray=[],startCount=0,endCount=0,blobByteSize=blob.size;if(blobByteSize>chunkSize){for(;blobByteSize-1>endCount;)endCount=startCount+chunkSize,chunksArray.push(blob.slice(startCount,endCount)),startCount+=chunkSize;blobByteSize-(startCount+1)>0&&chunksArray.push(blob.slice(startCount,blobByteSize-1))}else chunksArray.push(blob);return chunksArray},Skylink.prototype._chunkDataURL=function(dataURL,chunkSize){var outputStr=dataURL,dataURLArray=[],startCount=0,endCount=0,dataByteSize=dataURL.size||dataURL.length;if(dataByteSize>chunkSize){for(;dataByteSize-1>endCount;)endCount=startCount+chunkSize,dataURLArray.push(outputStr.slice(startCount,endCount)),startCount+=chunkSize;dataByteSize-(startCount+1)>0&&chunksArray.push(outputStr.slice(startCount,dataByteSize-1))}else dataURLArray.push(outputStr);return dataURLArray},Skylink.prototype._startDataTransfer=function(data,timeout,targetPeerId,sendChunksAsBinary,callback,sessionType){
var self=this,transferId=(self._user?self._user.sid:"")+"_"+(new Date).getTime(),transferErrors={},transferCompleted=[],chunks=[],listOfPeers=Object.keys(self._peerConnections),sessionChunkType="string",transferInfo={name:null,size:null,chunkSize:null,chunkType:null,dataType:null,mimeType:null,direction:self.DATA_TRANSFER_TYPE.UPLOAD,timeout:60,isPrivate:!1,percentage:0};"number"==typeof timeout?transferInfo.timeout=timeout:Array.isArray(timeout)?listOfPeers=timeout:timeout&&"string"==typeof timeout?listOfPeers=[timeout]:timeout&&"boolean"==typeof timeout?sessionChunkType="binary":"function"==typeof timeout&&(callback=timeout),Array.isArray(targetPeerId)?listOfPeers=targetPeerId:targetPeerId&&"string"==typeof targetPeerId?listOfPeers=[targetPeerId]:targetPeerId&&"boolean"==typeof targetPeerId?sessionChunkType="binary":"function"==typeof targetPeerId&&(callback=targetPeerId),sendChunksAsBinary&&"boolean"==typeof sendChunksAsBinary?sessionChunkType="binary":"function"==typeof sendChunksAsBinary&&(callback=sendChunksAsBinary),listOfPeers.indexOf("MCU")>-1&&listOfPeers.splice(listOfPeers.indexOf("MCU"),1);var emitErrorBeforeDataTransferFn=function(error){if(Log.error(self._debugOptions.instanceId,error),"function"==typeof callback){var transferErrors={};if(0===listOfPeers.length)transferErrors.self=new Error(error),self._trigger("dataTransferState",self.DATA_TRANSFER_STATE.START_ERROR,null,null,transferInfo,{transferType:self.DATA_TRANSFER_TYPE.DOWNLOAD,message:new Error(error)});else for(var i=0;i<listOfPeers.length;i++)transferErrors[listOfPeers[i]]=new Error(error),self._trigger("dataTransferState",self.DATA_TRANSFER_STATE.START_ERROR,null,listOfPeers[i],transferInfo,{transferType:self.DATA_TRANSFER_TYPE.DOWNLOAD,message:new Error(error)});callback({transferId:null,transferInfo:transferInfo,listOfPeers:listOfPeers,transferErrors:transferErrors},null)}};if("blob"===sessionType){self._hasMCU&&"binary"===sessionChunkType&&(Log.error(self._debugOptions.instanceId,"Binary data chunks transfer is not yet supported with MCU environment. Fallbacking to binary string data chunks transfer."),sessionChunkType="string");var chunkSize="string"===sessionChunkType?"firefox"===window.webrtcDetectedBrowser?self._MOZ_CHUNK_FILE_SIZE:self._CHUNK_FILE_SIZE:"firefox"===window.webrtcDetectedBrowser?self._MOZ_BINARY_FILE_SIZE:self._BINARY_FILE_SIZE;if(transferInfo.dataType=self.DATA_TRANSFER_SESSION_TYPE.BLOB,transferInfo.chunkSize="string"===sessionChunkType?4*Math.ceil(chunkSize/3):chunkSize,transferInfo.chunkType="binary"===sessionChunkType?"firefox"===window.webrtcDetectedBrowser?self.DATA_TRANSFER_DATA_TYPE.BLOB:self.DATA_TRANSFER_DATA_TYPE.ARRAY_BUFFER:self.DATA_TRANSFER_DATA_TYPE.BINARY_STRING,!(data&&"object"==typeof data&&data instanceof Blob))return void emitErrorBeforeDataTransferFn("Provided data is not a Blob data");if(transferInfo.name=data.name||transferId,transferInfo.mimeType=data.type||null,data.size<1)return void emitErrorBeforeDataTransferFn("Provided data is not a valid Blob data.");transferInfo.originalSize=data.size,transferInfo.size="string"===sessionChunkType?4*Math.ceil(data.size/3):data.size,chunks=self._chunkBlobData(data,chunkSize)}else{if(transferInfo.dataType=self.DATA_TRANSFER_SESSION_TYPE.DATA_URL,transferInfo.chunkSize=self._CHUNK_DATAURL_SIZE,transferInfo.chunkType=self.DATA_TRANSFER_DATA_TYPE.STRING,!data||"string"!=typeof data)return void emitErrorBeforeDataTransferFn("Provided data is not a dataURL");transferInfo.originalSize=transferInfo.size=data.length||data.size,chunks=self._chunkDataURL(data,transferInfo.chunkSize)}if(!self._user||!self._user.sid)return void emitErrorBeforeDataTransferFn("Unable to send any "+sessionType.replace("data","dataURL")+" data. User is not in Room.");if(!self._enableDataChannel)return void emitErrorBeforeDataTransferFn("Unable to send any "+sessionType.replace("data","dataURL")+" data. Datachannel is disabled");if(0===listOfPeers.length)return void emitErrorBeforeDataTransferFn("Unable to send any "+sessionType.replace("data","dataURL")+" data. There are no Peers to start data transfer with");if(self._dataTransfers[transferId]=UtilsFactory.clone(transferInfo),self._dataTransfers[transferId].peers={},self._dataTransfers[transferId].peers.main={},self._dataTransfers[transferId].peers[transferId]={},self._dataTransfers[transferId].sessions={},self._dataTransfers[transferId].chunks=chunks,self._dataTransfers[transferId].enforceBSPeers=[],self._dataTransfers[transferId].enforcedBSInfo={},self._dataTransfers[transferId].sessionType=sessionType,self._dataTransfers[transferId].sessionChunkType=sessionChunkType,self._dataTransfers[transferId].senderPeerId=self._user.sid,"blob"===sessionType&&"binary"===sessionChunkType){for(var p=0;p<listOfPeers.length;p++){var protocolVer=((self._peerInformations[listOfPeers[p]]||{}).agent||{}).DTProtocolVersion||"0.1.0";self._isLowerThanVersion(protocolVer,"0.1.3")&&self._dataTransfers[transferId].enforceBSPeers.push(listOfPeers[p])}if(self._dataTransfers[transferId].enforceBSPeers.length>0){var bsChunkSize="firefox"===window.webrtcDetectedBrowser?self._MOZ_CHUNK_FILE_SIZE:self._CHUNK_FILE_SIZE,bsChunks=self._chunkBlobData(new Blob(chunks),bsChunkSize);self._dataTransfers[transferId].enforceBSInfo={chunkSize:4*Math.ceil(bsChunkSize/3),chunkType:self.DATA_TRANSFER_DATA_TYPE.BINARY_STRING,size:4*Math.ceil(transferInfo.originalSize/3),chunks:bsChunks}}}for(var completeFn=function(peerId,error){transferCompleted.indexOf(peerId)>-1||(Log.debug(self._debugOptions.instanceId,[peerId,"RTCDataChannel",transferId,"Data transfer result. Is errors present? ->"],error),transferCompleted.push(peerId),error&&(transferErrors[peerId]=new Error(error)),listOfPeers.length===transferCompleted.length&&(Log.log(self._debugOptions.instanceId,[null,"RTCDataChannel",transferId,"Data transfer request completed"]),"function"==typeof callback&&(Object.keys(transferErrors).length>0?callback({transferId:transferId,transferInfo:self._getTransferInfo(transferId,peerId,!1,!0,!1),transferErrors:transferErrors,listOfPeers:listOfPeers},null):callback(null,{transferId:transferId,transferInfo:self._getTransferInfo(transferId,peerId,!1,!0,!1),listOfPeers:listOfPeers}))))},i=0;i<listOfPeers.length;i++){var MCUInteropStatus=self._startDataTransferToPeer(transferId,listOfPeers[i],completeFn,null,null);"boolean"==typeof MCUInteropStatus&&(MCUInteropStatus===!0?self._dataTransfers[transferId].peers.main[listOfPeers[i]]=!0:self._dataTransfers[transferId].peers[transferId][listOfPeers[i]]=!0)}self._hasMCU&&(Object.keys(self._dataTransfers[transferId].peers.main).length>0&&self._startDataTransferToPeer(transferId,"MCU",completeFn,"main",Object.keys(self._dataTransfers[transferId].peers.main)),Object.keys(self._dataTransfers[transferId].peers[transferId]).length>0&&self._startDataTransferToPeer(transferId,"MCU",completeFn,transferId,Object.keys(self._dataTransfers[transferId].peers[transferId])))},Skylink.prototype._startDataTransferToPeer=function(transferId,peerId,callback,channelProp,targetPeers){var self=this,peerConnectionStateCbFn=null,dataChannelStateCbFn=null,emitEventFn=function(cb){for(var peers=targetPeers||[peerId],i=0;i<peers.length;i++)cb(peers[i])},returnErrorBeforeTransferFn=function(error){var updatedError="MCU"===peerId?error.replace(/Peer/g,"MCU Peer"):error;emitEventFn(function(evtPeerId){self._trigger("dataTransferState",self.DATA_TRANSFER_STATE.ERROR,transferId,evtPeerId,self._getTransferInfo(transferId,peerId,!0,!0,!1),{message:new Error(updatedError),transferType:self.DATA_TRANSFER_TYPE.UPLOAD})})},sendWRQFn=function(){var size=self._dataTransfers[transferId].size,chunkSize=self._dataTransfers[transferId].chunkSize,chunkType=self._dataTransfers[transferId].sessionChunkType;self._dataTransfers[transferId].enforceBSPeers.indexOf(peerId)>-1&&(Log.error(self._debugOptions.instanceId,[peerId,"RTCDataChannel",transferId,"Binary data chunks transfer is not yet supported with Peer connecting from Android, iOS and C++ SDK. Fallbacking to binary string data chunks transfer."]),size=self._dataTransfers[transferId].enforceBSInfo.size,chunkSize=self._dataTransfers[transferId].enforceBSInfo.chunkSize,chunkType="string"),self._sendMessageToDataChannel(peerId,{type:self._DC_PROTOCOL_TYPE.WRQ,transferId:transferId,name:self._dataTransfers[transferId].name,size:size,originalSize:self._dataTransfers[transferId].originalSize,dataType:self._dataTransfers[transferId].sessionType,mimeType:self._dataTransfers[transferId].mimeType,chunkType:chunkType,chunkSize:chunkSize,timeout:self._dataTransfers[transferId].timeout,isPrivate:self._dataTransfers[transferId].isPrivate,sender:self._user.sid,agent:window.webrtcDetectedBrowser,version:window.webrtcDetectedVersion,target:targetPeers?targetPeers:peerId},channelProp),emitEventFn(function(evtPeerId){self._trigger("incomingDataRequest",transferId,evtPeerId,self._getTransferInfo(transferId,peerId,!1,!1,!1),!0),self._trigger("dataTransferState",self.DATA_TRANSFER_STATE.USER_UPLOAD_REQUEST,transferId,evtPeerId,self._getTransferInfo(transferId,peerId,!0,!1,!1),null)})};if("MCU"!==peerId){var dataTransferStateCbFn=function(state,evtTransferId,evtPeerId,transferInfo,error){if(peerConnectionStateCbFn&&self.off("peerConnectionState",peerConnectionStateCbFn),dataChannelStateCbFn&&self.off("dataChannelState",dataChannelStateCbFn),channelProp&&delete self._dataTransfers[transferId].peers[channelProp][peerId],state===self.DATA_TRANSFER_STATE.UPLOAD_COMPLETED?callback(peerId,null):callback(peerId,error.message.message||error.message.toString()),self._hasMCU&&self._dataTransfers[transferId].direction===self.DATA_TRANSFER_TYPE.UPLOAD){if(0!==Object.keys(self._dataTransfers[transferId].peers.main).length||0!==Object.keys(self._dataTransfers[transferId].peers[transferId]).length)return;delete self._dataTransfers[transferId]}else delete self._dataTransfers[transferId].sessions[peerId],0===Object.keys(self._dataTransfers[transferId].sessions).length&&delete self._dataTransfers[transferId]};self.once("dataTransferState",dataTransferStateCbFn,function(state,evtTransferId,evtPeerId){return self._dataTransfers[transferId]&&(self._hasMCU?self._dataTransfers[transferId].peers.main[peerId]||self._dataTransfers[transferId].peers[transferId][peerId]:self._dataTransfers[transferId].sessions[peerId])?evtTransferId===transferId&&evtPeerId===peerId&&[self.DATA_TRANSFER_STATE.UPLOAD_COMPLETED,self.DATA_TRANSFER_STATE.ERROR,self.DATA_TRANSFER_STATE.CANCEL,self.DATA_TRANSFER_STATE.REJECTED].indexOf(state)>-1:(dataTransferStateCbFn&&self.off("dataTransferState",dataTransferStateCbFn),peerConnectionStateCbFn&&self.off("peerConnectionState",peerConnectionStateCbFn),void(dataChannelStateCbFn&&self.off("dataChannelState",dataChannelStateCbFn)))})}if(!self._peerConnections[peerId])return void returnErrorBeforeTransferFn("Unable to start data transfer as Peer connection does not exists.");if(!self._peerInformations[peerId])return void returnErrorBeforeTransferFn("Unable to start data transfer as Peer connection does not exists.");if(self._peerConnections[peerId].signalingState!==self.PEER_CONNECTION_STATE.STABLE)return void returnErrorBeforeTransferFn("Unable to start data transfer as Peer connection is not stable.");if(!self._dataTransfers[transferId])return void returnErrorBeforeTransferFn("Unable to start data transfer as data transfer session is not in order.");if(!self._dataChannels[peerId]||!self._dataChannels[peerId].main)return void returnErrorBeforeTransferFn("Unable to start data transfer as Peer Datachannel connection does not exists.");var streamId=self._dataChannels[peerId].main.streamId;if(streamId&&"main"===channelProp&&self._dataStreams[streamId]&&("string"===self._dataStreams[streamId].sessionChunkType&&("string"===self._dataTransfers[transferId].sessionChunkType||self._dataTransfers[transferId].enforceBSPeers.indexOf(peerId)>-1)||"binary"===self._dataStreams[streamId].sessionChunkType&&"binary"===self._dataStreams[streamId].sessionChunkType&&self._dataTransfers[transferId].enforceBSPeers.indexOf(peerId)===-1))return void returnErrorBeforeTransferFn("Unable to start data transfer as Peer Datachannel currently has an active "+self._dataStreams[streamId].sessionChunkType+" data streaming session.");var protocolVer=(self._peerInformations[peerId].agent||{}).DTProtocolVersion||"0.1.0",requireInterop=self._isLowerThanVersion(protocolVer,"0.1.2");return self._isLowerThanVersion(protocolVer,"0.1.2")&&"data"===self._dataTransfers[transferId].sessionType&&"string"===self._dataTransfers[transferId].sessionChunkType?void returnErrorBeforeTransferFn("Unable to start data transfer as Peer do not support DATA_URL type of data transfers"):"MCU"!==peerId&&self._hasMCU?(channelProp=requireInterop?"main":transferId,peerConnectionStateCbFn=function(){returnErrorBeforeTransferFn("Data transfer terminated as Peer connection is not stable.")},self.once("peerConnectionState",peerConnectionStateCbFn,function(state,evtPeerId){return self._dataTransfers[transferId]?state!==self.PEER_CONNECTION_STATE.STABLE&&evtPeerId===peerId:void self.off("peerConnectionState",peerConnectionStateCbFn)}),requireInterop):(requireInterop||"main"===channelProp)&&self._dataChannels[peerId].main.getInfo().custom.transferId?void returnErrorBeforeTransferFn("Unable to start data transfer as Peer Datachannel has a data transfer in-progress."):(self._dataTransfers[transferId].sessions[peerId]={timer:null,ackN:0},dataChannelStateCbFn=function(state,evtPeerId,error){self._dataTransfers[transferId].sessions[peerId].ackN>=self._dataTransfers[transferId].chunks.length-1||returnErrorBeforeTransferFn(error?error.message||error.toString():"Data transfer terminated as Peer Datachannel connection closed abruptly.")},self.once("dataChannelState",dataChannelStateCbFn,function(state,evtPeerId,error,channelName,channelType){return self._dataTransfers[transferId]&&self._dataTransfers[transferId].sessions[peerId]?evtPeerId!==peerId||channelType===self.DATA_CHANNEL_TYPE.DATA&&channelName!==transferId?void 0:state===self.DATA_CHANNEL_STATE.OPEN&&channelType===self.DATA_CHANNEL_TYPE.DATA&&channelName===transferId?(self._dataChannels[peerId][channelProp].setCustom("transferId",transferId),sendWRQFn(),!1):[self.DATA_CHANNEL_STATE.CREATE_ERROR,self.DATA_CHANNEL_STATE.ERROR,self.DATA_CHANNEL_STATE.CLOSING,self.DATA_CHANNEL_STATE.CLOSED].indexOf(state)>-1:void self.off("dataChannelState",dataChannelStateCbFn)}),void(requireInterop&&"MCU"!==peerId||"main"===channelProp?(self._dataChannels[peerId].main.setCustom("transferId",transferId),sendWRQFn()):(channelProp=transferId,self._createDataChannel(peerId,transferId))))},Skylink.prototype._getTransferInfo=function(transferId,peerId,returnDataProp,hidePercentage,returnDataAtStart){if(!this._dataTransfers[transferId])return{};var transferInfo={name:this._dataTransfers[transferId].name,size:this._dataTransfers[transferId].size,dataType:this._dataTransfers[transferId].dataType||this.DATA_TRANSFER_SESSION_TYPE.BLOB,mimeType:this._dataTransfers[transferId].mimeType||null,chunkSize:this._dataTransfers[transferId].chunkSize,chunkType:this._dataTransfers[transferId].chunkType,timeout:this._dataTransfers[transferId].timeout,isPrivate:this._dataTransfers[transferId].isPrivate,direction:this._dataTransfers[transferId].direction};if(this._dataTransfers[transferId].originalSize?transferInfo.size=this._dataTransfers[transferId].originalSize:this._dataTransfers[transferId].chunkType===this.DATA_TRANSFER_DATA_TYPE.BINARY_STRING&&(transferInfo.size=Math.ceil(3*transferInfo.size/4)),!hidePercentage){if(transferInfo.percentage=0,!this._dataTransfers[transferId].sessions[peerId])return returnDataProp&&(transferInfo.data=null),transferInfo;if(this._dataTransfers[transferId].direction===this.DATA_TRANSFER_TYPE.DOWNLOAD)this._dataTransfers[transferId].sessions[peerId].receivedSize===this._dataTransfers[transferId].sessions[peerId].size?transferInfo.percentage=100:transferInfo.percentage=parseFloat((this._dataTransfers[transferId].sessions[peerId].receivedSize/this._dataTransfers[transferId].size*100).toFixed(2),10);else{var chunksLength=this._dataTransfers[transferId].enforceBSPeers.indexOf(peerId)>-1?this._dataTransfers[transferId].enforceBSInfo.chunks.length:this._dataTransfers[transferId].chunks.length;this._dataTransfers[transferId].sessions[peerId].ackN===chunksLength?transferInfo.percentage=100:transferInfo.percentage=parseFloat((this._dataTransfers[transferId].sessions[peerId].ackN/chunksLength*100).toFixed(2),10)}returnDataProp&&("number"!=typeof returnDataAtStart?100===transferInfo.percentage?transferInfo.data=this._getTransferData(transferId):transferInfo.data=null:(transferInfo.percentage=returnDataAtStart,0===returnDataAtStart&&(transferInfo.data=this._getTransferData(transferId))))}return transferInfo},Skylink.prototype._getTransferData=function(transferId){if(!this._dataTransfers[transferId])return null;if(this._dataTransfers[transferId].dataType===this.DATA_TRANSFER_SESSION_TYPE.BLOB){var mimeType={name:this._dataTransfers[transferId].name};return this._dataTransfers[transferId].mimeType&&(mimeType.type=this._dataTransfers[transferId].mimeType),new Blob(this._dataTransfers[transferId].chunks,mimeType)}return this._dataTransfers[transferId].chunks.join("")},Skylink.prototype._handleDataTransferTimeoutForPeer=function(transferId,peerId,setPeerTO){var self=this;return self._dataTransfers[transferId]&&self._dataTransfers[transferId].sessions[peerId]?(Log.debug(self._debugOptions.instanceId,[peerId,"RTCDataChannel",transferId,"Clearing data transfer timer for Peer."]),self._dataTransfers[transferId].sessions[peerId].timer&&clearTimeout(self._dataTransfers[transferId].sessions[peerId].timer),self._dataTransfers[transferId].sessions[peerId].timer=null,void(setPeerTO&&(Log.debug(self._debugOptions.instanceId,[peerId,"RTCDataChannel",transferId,"Setting data transfer timer for Peer."]),self._dataTransfers[transferId].sessions[peerId].timer=setTimeout(function(){if(!self._dataTransfers[transferId]||!self._dataTransfers[transferId].sessions[peerId])return void Log.debug(self._debugOptions.instanceId,[peerId,"RTCDataChannel",transferId,"Data transfer already ended for Peer. Ignoring expired timeout."]);if(!self._user||!self._user.sid)return void Log.debug(self._debugOptions.instanceId,[peerId,"RTCDataChannel",transferId,"User is not in Room. Ignoring expired timeout."]);if(!self._dataChannels[peerId])return void Log.debug(self._debugOptions.instanceId,[peerId,"RTCDataChannel",transferId,"Datachannel connection does not exists. Ignoring expired timeout."]);Log.error(self._debugOptions.instanceId,[peerId,"RTCDataChannel",transferId,"Data transfer response has timed out."]);var emitEventFn=function(cb){if("MCU"===peerId){for(var broadcastedPeers=[self._dataTransfers[transferId].peers.main,self._dataTransfers[transferId].peers[transferId]],i=0;i<broadcastedPeers.length;i++)if(broadcastedPeers[i])for(var bcPeerId in broadcastedPeers[i])broadcastedPeers[i].hasOwnProperty(bcPeerId)&&broadcastedPeers[i][bcPeerId]&&cb(bcPeerId)}else cb(peerId)},errorMsg="Connection Timeout. Longer than "+self._dataTransfers[transferId].timeout+" seconds. Connection is abolished.";self._sendMessageToDataChannel(peerId,{type:self._DC_PROTOCOL_TYPE.ERROR,content:errorMsg,isUploadError:self._dataTransfers[transferId].direction===self.DATA_TRANSFER_TYPE.UPLOAD,sender:self._user.sid,name:self._dataTransfers[transferId].name},self._dataChannels[peerId][transferId]?transferId:"main"),emitEventFn(function(evtPeerId){self._trigger("dataTransferState",self.DATA_TRANSFER_STATE.ERROR,transferId,peerId,self._getTransferInfo(transferId,peerId,!0,!1,!1),{transferType:self.DATA_TRANSFER_TYPE.DOWNLOAD,message:new Error(errorMsg)})})},1e3*self._dataTransfers[transferId].timeout)))):void Log.debug(self._debugOptions.instanceId,[peerId,"RTCDataChannel",transferId,"Data transfer does not exists for Peer. Ignoring timeout."])},Skylink.prototype._processDataChannelData=function(data,peerId,channelName,channelType,binaryType){var self=this,channelProp=channelType===self.DATA_CHANNEL_TYPE.MESSAGING?"main":channelName,transferId=self._dataChannels[peerId][channelProp].getInfo().custom.transferId||null,streamId=self._dataChannels[peerId][channelProp].streamId||null,isStreamChunk=!1;if(streamId&&self._dataStreams[streamId]&&(isStreamChunk="string"===self._dataStreams[streamId].sessionChunkType?"string"===binaryType:"binary"===binaryType),!self._peerConnections[peerId])return void Log.error(self._debugOptions.instanceId,[peerId,"RTCDataChannel",channelProp,"Dropping data received from Peer as connection is not present ->"],data);if(!self._dataChannels[peerId]||!self._dataChannels[peerId][channelProp])return void Log.error(self._debugOptions.instanceId,[peerId,"RTCDataChannel",channelProp,"Dropping data received from Peer as Datachannel connection is not present ->"],data);if(data.type&&"string"===binaryType){if(Log.debug(self._debugOptions.instanceId,[peerId,"RTCDataChannel",channelProp,'Received protocol "'+data.type+'" message ->'],data),isStreamChunk=!1,[self._DC_PROTOCOL_TYPE.ACK,self._DC_PROTOCOL_TYPE.ERROR,self._DC_PROTOCOL_TYPE.CANCEL].indexOf(data.type)>-1&&!(transferId&&self._dataTransfers[transferId]&&self._dataTransfers[transferId].sessions[peerId]))return void Log.error(self._debugOptions.instanceId,[peerId,"RTCDataChannel",channelProp,"Discarded protocol message as data transfer session is not present ->"],data);switch(data.type){case self._DC_PROTOCOL_TYPE.WRQ:if(transferId&&self._dataTransfers[transferId]&&self._dataTransfers[transferId].sessions[peerId])return Log.error(self._debugOptions.instanceId,[peerId,"RTCDataChannel",channelProp,"Rejecting bidirectional data transfer request as it is currently not supported in the SDK ->"],data),void self._sendMessageToDataChannel(peerId,{type:self._DC_PROTOCOL_TYPE.ACK,ackN:-1,sender:self._user.sid},channelProp);self._WRQProtocolHandler(peerId,data,channelProp);break;case self._DC_PROTOCOL_TYPE.ACK:self._ACKProtocolHandler(peerId,data,channelProp);break;case self._DC_PROTOCOL_TYPE.ERROR:self._ERRORProtocolHandler(peerId,data,channelProp);break;case self._DC_PROTOCOL_TYPE.CANCEL:self._CANCELProtocolHandler(peerId,data,channelProp);break;case self._DC_PROTOCOL_TYPE.MESSAGE:self._MESSAGEProtocolHandler(peerId,data,channelProp);break;default:Log.error(self._debugOptions.instanceId,[peerId,"RTCDataChannel",channelProp,'Discarded unknown "'+data.type+'" message ->'],data)}}else{if(!(isStreamChunk||transferId&&self._dataTransfers[transferId]&&self._dataTransfers[transferId].sessions[peerId]))return void Log.error(self._debugOptions.instanceId,[peerId,"RTCDataChannel",channelProp,"Discarded data chunk without session ->"],data);if(!isStreamChunk&&self._dataTransfers[transferId].dataType!==self.DATA_TRANSFER_SESSION_TYPE.DATA_URL)if("string"===binaryType){var dataNS=data.replace(/\s|\r|\n/g,"");Log.debug(self._debugOptions.instanceId,[peerId,"RTCDataChannel",channelProp,"Received binary string data chunk @"+self._dataTransfers[transferId].sessions[peerId].ackN+" with size ->"],dataNS.length||dataNS.size),self._DATAProtocolHandler(peerId,self._base64ToBlob(dataNS),self.DATA_TRANSFER_DATA_TYPE.BINARY_STRING,dataNS.length||dataNS.size,channelProp)}else Log.debug(self._debugOptions.instanceId,[peerId,"RTCDataChannel",channelProp,"Received Blob data chunk "+(isStreamChunk?"":"@"+self._dataTransfers[transferId].sessions[peerId].ackN)+" with size ->"],data.size),self._DATAProtocolHandler(peerId,data,binaryType,data.size,channelProp);else Log.debug(self._debugOptions.instanceId,[peerId,"RTCDataChannel",channelProp,"Received string data chunk "+(isStreamChunk?"":"@"+self._dataTransfers[transferId].sessions[peerId].ackN)+" with size ->"],data.length||data.size),self._DATAProtocolHandler(peerId,data,self.DATA_TRANSFER_DATA_TYPE.STRING,data.length||data.size,channelProp)}},Skylink.prototype._WRQProtocolHandler=function(peerId,data,channelProp){var self=this,transferId="main"===channelProp?data.transferId||null:channelProp,senderPeerId=data.sender||peerId;if(["fastBinaryStart","fastBinaryStop"].indexOf(data.dataType)>-1)if("fastBinaryStart"===data.dataType){transferId||(transferId="stream_"+peerId+"_"+(new Date).getTime()),self._dataStreams[transferId]={chunkSize:0,chunkType:"string"===data.chunkType?self.DATA_TRANSFER_DATA_TYPE.STRING:self.DATA_TRANSFER_DATA_TYPE.BLOB,sessionChunkType:data.chunkType,isPrivate:!!data.isPrivate,isStringStream:"string"===data.chunkType,senderPeerId:senderPeerId,isUpload:!1},self._dataChannels[peerId][channelProp].setCustom("streamId",transferId);self.once("dataChannelState",function(){},function(state,evtPeerId,channelName,channelType,error){if(!self._dataStreams[transferId])return!0;if(evtPeerId===peerId&&("main"===channelProp?channelType===self.DATA_CHANNEL_TYPE.MESSAGING:channelName===transferId&&channelType===self.DATA_CHANNEL_TYPE.DATA)&&[self.DATA_CHANNEL_STATE.ERROR,self.DATA_CHANNEL_STATE.CLOSED].indexOf(state)>-1){var updatedError=new Error(error&&error.message?error.message:'Failed data transfer as datachannel state is "'+state+'".');return self._trigger("dataStreamState",self.DATA_STREAM_STATE.ERROR,transferId,senderPeerId,{chunk:null,chunkSize:0,chunkType:self._dataStreams[transferId].chunkType,isPrivate:self._dataStreams[transferId].isPrivate,isStringStream:"string"===self._dataStreams[transferId].sessionChunkType,senderPeerId:senderPeerId},updatedError),!0}}),self._trigger("dataStreamState",self.DATA_STREAM_STATE.RECEIVING_STARTED,transferId,senderPeerId,{chunk:null,chunkSize:0,chunkType:self._dataStreams[transferId].chunkType,isPrivate:self._dataStreams[transferId].isPrivate,isStringStream:"string"===self._dataStreams[transferId].sessionChunkType,senderPeerId:senderPeerId},null),self._trigger("incomingDataStreamStarted",transferId,senderPeerId,{chunkSize:0,chunkType:self._dataStreams[transferId].chunkType,isPrivate:self._dataStreams[transferId].isPrivate,isStringStream:"string"===self._dataStreams[transferId].sessionChunkType,senderPeerId:senderPeerId},!1)}else transferId=self._dataChannels[peerId][channelProp].streamId,self._dataStreams[transferId]&&!self._dataStreams[transferId].isUpload&&(self._trigger("dataStreamState",self.DATA_STREAM_STATE.RECEIVING_STOPPED,transferId,senderPeerId,{chunk:null,chunkSize:0,chunkType:self._dataStreams[transferId].chunkType,isPrivate:self._dataStreams[transferId].isPrivate,isStringStream:"string"===self._dataStreams[transferId].sessionChunkType,senderPeerId:senderPeerId},null),self._trigger("incomingDataStreamStopped",transferId,senderPeerId,{chunkSize:0,chunkType:self._dataStreams[transferId].chunkType,isPrivate:self._dataStreams[transferId].isPrivate,isStringStream:"string"===self._dataStreams[transferId].sessionChunkType,senderPeerId:senderPeerId},!1),self._dataChannels[peerId][channelProp].setCustom("streamId",null),"main"!==channelProp&&self._closeDataChannel(peerId,channelProp),delete self._dataStreams[transferId]);else transferId||(transferId="transfer_"+peerId+"_"+(new Date).getTime()),self._dataTransfers[transferId]={name:data.name||transferId,size:data.size||0,chunkSize:data.chunkSize,originalSize:data.originalSize||0,timeout:data.timeout||60,isPrivate:!!data.isPrivate,senderPeerId:data.sender||peerId,dataType:self.DATA_TRANSFER_SESSION_TYPE.BLOB,mimeType:data.mimeType||null,chunkType:self.DATA_TRANSFER_DATA_TYPE.BINARY_STRING,direction:self.DATA_TRANSFER_TYPE.DOWNLOAD,chunks:[],sessions:{},sessionType:data.dataType||"blob",sessionChunkType:data.chunkType||"string"},"data"===self._dataTransfers[transferId].sessionType&&"string"===self._dataTransfers[transferId].sessionChunkType?(self._dataTransfers[transferId].dataType=self.DATA_TRANSFER_SESSION_TYPE.DATA_URL,self._dataTransfers[transferId].chunkType=self.DATA_TRANSFER_DATA_TYPE.STRING):"blob"===self._dataTransfers[transferId].sessionType&&"binary"===self._dataTransfers[transferId].sessionChunkType&&(self._dataTransfers[transferId].chunkType=self.DATA_TRANSFER_DATA_TYPE.ARRAY_BUFFER),self._dataChannels[peerId][channelProp].setCustom("transferId",transferId),self._dataTransfers[transferId].sessions[peerId]={timer:null,ackN:0,receivedSize:0},self._trigger("incomingDataRequest",transferId,senderPeerId,self._getTransferInfo(transferId,peerId,!1,!1,!1),!1),self._trigger("dataTransferState",self.DATA_TRANSFER_STATE.UPLOAD_REQUEST,transferId,senderPeerId,self._getTransferInfo(transferId,peerId,!0,!1,!1),null)},Skylink.prototype._ACKProtocolHandler=function(peerId,data,channelProp){var self=this,transferId=channelProp,senderPeerId=data.sender||peerId;"main"===channelProp&&(transferId=self._dataChannels[peerId].main.getInfo().custom.transferId),self._handleDataTransferTimeoutForPeer(transferId,peerId,!1);var emitEventFn=function(cb){if("MCU"===peerId){if(!self._dataTransfers[transferId].peers[channelProp])return void Log.error(self._debugOptions.instanceId,[peerId,"RTCDataChannel",channelProp,"Dropping triggering of ACK event as Peers list does not exists"]);for(var evtPeerId in self._dataTransfers[transferId].peers[channelProp])self._dataTransfers[transferId].peers[channelProp].hasOwnProperty(evtPeerId)&&self._dataTransfers[transferId].peers[channelProp][evtPeerId]&&cb(evtPeerId)}else cb(senderPeerId)};if(data.ackN>-1){if(0===data.ackN)emitEventFn(function(evtPeerId){self._trigger("dataTransferState",self.DATA_TRANSFER_STATE.UPLOAD_STARTED,transferId,evtPeerId,self._getTransferInfo(transferId,peerId,!0,!1,0),null)});else if(self._dataTransfers[transferId].enforceBSPeers.indexOf(peerId)>-1?data.ackN===self._dataTransfers[transferId].enforceBSInfo.chunks.length:data.ackN===self._dataTransfers[transferId].chunks.length)return self._dataTransfers[transferId].sessions[peerId].ackN=data.ackN,emitEventFn(function(evtPeerId){self._trigger("incomingData",self._getTransferData(transferId),transferId,evtPeerId,self._getTransferInfo(transferId,peerId,!1,!1,!1),!0),self._trigger("dataTransferState",self.DATA_TRANSFER_STATE.UPLOAD_COMPLETED,transferId,evtPeerId,self._getTransferInfo(transferId,peerId,!0,!1,100),null)}),void(self._dataChannels[peerId][channelProp]&&(self._dataChannels[peerId][channelProp].setCustom("transferId",null),"main"!==channelProp&&self._closeDataChannel(peerId,channelProp)));var uploadFn=function(chunk){self._sendMessageToDataChannel(peerId,chunk,channelProp,!0,function(error){data.ackN<self._dataTransfers[transferId].chunks.length&&emitEventFn(function(evtPeerId){self._trigger("dataTransferState",self.DATA_TRANSFER_STATE.UPLOADING,transferId,evtPeerId,self._getTransferInfo(transferId,peerId,!0,!1,!1),null)}),self._handleDataTransferTimeoutForPeer(transferId,peerId,!0)})};self._dataTransfers[transferId].sessions[peerId].ackN=data.ackN,self._dataTransfers[transferId].enforceBSPeers.indexOf(peerId)>-1?self._blobToBase64(self._dataTransfers[transferId].enforceBSInfo.chunks[data.ackN],uploadFn):self._dataTransfers[transferId].chunkType===self.DATA_TRANSFER_DATA_TYPE.BINARY_STRING?self._blobToBase64(self._dataTransfers[transferId].chunks[data.ackN],uploadFn):uploadFn(self._dataTransfers[transferId].chunks[data.ackN])}else self._trigger("dataTransferState",self.DATA_TRANSFER_STATE.REJECTED,transferId,senderPeerId,self._getTransferInfo(transferId,peerId,!0,!1,!1),{message:new Error("Data transfer terminated as Peer has rejected data transfer request"),transferType:self.DATA_TRANSFER_TYPE.UPLOAD})},Skylink.prototype._MESSAGEProtocolHandler=function(peerId,data,channelProp){var senderPeerId=data.sender||peerId;Log.log(self._debugOptions.instanceId,[senderPeerId,"RTCDataChannel",channelProp,"Received P2P message from peer:"],data),this._trigger("incomingMessage",{content:data.data,isPrivate:data.isPrivate,isDataChannel:!0,targetPeerId:this._user.sid,senderPeerId:senderPeerId},senderPeerId,this.getPeerInfo(senderPeerId),!1)},Skylink.prototype._ERRORProtocolHandler=function(peerId,data,channelProp){var self=this,transferId=channelProp,senderPeerId=data.sender||peerId;"main"===channelProp&&(transferId=self._dataChannels[peerId].main.getInfo().custom.transferId),
self._handleDataTransferTimeoutForPeer(transferId,peerId,!1);var emitEventFn=function(cb){if("MCU"===peerId){if(!self._dataTransfers[transferId].peers[channelProp])return void Log.error(self._debugOptions.instanceId,[peerId,"RTCDataChannel",channelProp,"Dropping triggering of ERROR event as Peers list does not exists"]);for(var evtPeerId in self._dataTransfers[transferId].peers[channelProp])self._dataTransfers[transferId].peers[channelProp].hasOwnProperty(evtPeerId)&&self._dataTransfers[transferId].peers[channelProp][evtPeerId]&&cb(evtPeerId)}else cb(senderPeerId)};Log.error(self._debugOptions.instanceId,[peerId,"RTCDataChannel",channelProp,"Received an error from peer ->"],data),emitEventFn(function(evtPeerId){self._trigger("dataTransferState",self.DATA_TRANSFER_STATE.ERROR,transferId,evtPeerId,self._getTransferInfo(transferId,peerID,!0,!1,!1),{message:new Error(data.content),transferType:self._dataTransfers[transferId].direction})})},Skylink.prototype._CANCELProtocolHandler=function(peerId,data,channelProp){var self=this,transferId=channelProp;"main"===channelProp&&(transferId=self._dataChannels[peerId].main.getInfo().custom.transferId),self._handleDataTransferTimeoutForPeer(transferId,peerId,!1);var emitEventFn=function(cb){if("MCU"===peerId){if(!self._dataTransfers[transferId].peers[channelProp])return void Log.error(self._debugOptions.instanceId,[peerId,"RTCDataChannel",channelProp,"Dropping triggering of CANCEL event as Peers list does not exists"]);for(var evtPeerId in self._dataTransfers[transferId].peers[channelProp])self._dataTransfers[transferId].peers[channelProp].hasOwnProperty(evtPeerId)&&self._dataTransfers[transferId].peers[channelProp][evtPeerId]&&cb(evtPeerId)}else cb(peerId)};Log.error(self._debugOptions.instanceId,[peerId,"RTCDataChannel",channelProp,"Received data transfer termination from peer ->"],data),emitEventFn(function(evtPeerId){self._trigger("dataTransferState",self.DATA_TRANSFER_STATE.CANCEL,transferId,evtPeerId,self._getTransferInfo(transferId,peerId,!0,!1,!1),{message:new Error(data.content||"Peer has terminated data transfer."),transferType:self._dataTransfers[transferId].direction})})},Skylink.prototype._DATAProtocolHandler=function(peerId,chunk,chunkType,chunkSize,channelProp){var self=this,transferId=channelProp,senderPeerId=peerId;if(self._dataChannels[peerId]&&self._dataChannels[peerId][channelProp]){var streamId=self._dataChannels[peerId][channelProp].streamId;if(streamId&&self._dataStreams[streamId]&&("string"==typeof chunk&&"string"===self._dataStreams[streamId].sessionChunkType||chunk instanceof Blob&&"binary"===self._dataStreams[streamId].sessionChunkType))return senderPeerId=self._dataStreams[streamId].senderPeerId||peerId,self._trigger("dataStreamState",self.DATA_STREAM_STATE.RECEIVED,streamId,senderPeerId,{chunk:chunk,chunkSize:chunkSize,chunkType:chunkType,isPrivate:self._dataStreams[streamId].sessionChunkType.isPrivate,isStringStream:"string"===self._dataStreams[streamId].sessionChunkType,senderPeerId:senderPeerId},null),void self._trigger("incomingDataStream",chunk,transferId,senderPeerId,{chunkSize:chunkSize,chunkType:chunkType,isPrivate:self._dataStreams[streamId].sessionChunkType.isPrivate,isStringStream:"string"===self._dataStreams[streamId].sessionChunkType,senderPeerId:senderPeerId},!1);if("main"===channelProp&&(transferId=self._dataChannels[peerId].main.getInfo().custom.transferId),self._dataTransfers[transferId].senderPeerId&&(senderPeerId=self._dataTransfers[transferId].senderPeerId),self._handleDataTransferTimeoutForPeer(transferId,peerId,!1),self._dataTransfers[transferId].chunkType=chunkType,self._dataTransfers[transferId].sessions[peerId].receivedSize+=chunkSize,self._dataTransfers[transferId].chunks[self._dataTransfers[transferId].sessions[peerId].ackN]=chunk,self._dataTransfers[transferId].sessions[peerId].receivedSize>=self._dataTransfers[transferId].size)return Log.log(self._debugOptions.instanceId,[peerId,"RTCDataChannel",channelProp,"Data transfer has been completed. Computed size ->"],self._dataTransfers[transferId].sessions[peerId].receivedSize),self._sendMessageToDataChannel(peerId,{type:self._DC_PROTOCOL_TYPE.ACK,sender:self._user.sid,ackN:self._dataTransfers[transferId].sessions[peerId].ackN+1},channelProp),self._trigger("incomingData",self._getTransferData(transferId),transferId,senderPeerId,self._getTransferInfo(transferId,peerId,!1,!1,!1),null),void self._trigger("dataTransferState",self.DATA_TRANSFER_STATE.DOWNLOAD_COMPLETED,transferId,senderPeerId,self._getTransferInfo(transferId,peerId,!0,!1,!1),null);self._dataTransfers[transferId].sessions[peerId].ackN+=1,self._sendMessageToDataChannel(peerId,{type:self._DC_PROTOCOL_TYPE.ACK,sender:self._user.sid,ackN:self._dataTransfers[transferId].sessions[peerId].ackN},channelProp),self._handleDataTransferTimeoutForPeer(transferId,peerId,!0),self._trigger("dataTransferState",self.DATA_TRANSFER_STATE.DOWNLOADING,transferId,senderPeerId,self._getTransferInfo(transferId,peerId,!0,!1,!1),null)}};!function(){Object.keys||(Object.keys=function(){var t=Object.prototype.hasOwnProperty,r=!{toString:null}.propertyIsEnumerable("toString"),e=["toString","toLocaleString","valueOf","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","constructor"],o=e.length;return function(n){if("object"!=typeof n&&"function"!=typeof n||null===n)throw new TypeError("Object.keys called on non-object");var c=[];for(var l in n)t.call(n,l)&&c.push(l);if(r)for(var p=0;o>p;p++)t.call(n,e[p])&&c.push(e[p]);return c}}())}(),!function(){function t(t){return 10>t?"0"+t:t}Date.prototype.toISOString=function(){return this.getUTCFullYear()+"-"+t(this.getUTCMonth()+1)+"-"+t(this.getUTCDate())+"T"+t(this.getUTCHours())+":"+t(this.getUTCMinutes())+":"+t(this.getUTCSeconds())+"."+(this.getUTCMilliseconds()/1e3).toFixed(3).slice(2,5)+"Z"}}(),!function(){"function"!=typeof Date.now&&(Date.now=function(){return(new Date).getTime()})}(),!function(e,t){function n(e){var n=t[e];t[e]=function(e){return o(n(e))}}function a(t,n,a){return(a=this).attachEvent("on"+t,function(t){var t=t||e.event;t.preventDefault=t.preventDefault||function(){t.returnValue=!1},t.stopPropagation=t.stopPropagation||function(){t.cancelBubble=!0},n.call(a,t)})}function o(e,t){if(t=e.length)for(;t--;)e[t].addEventListener=a;else e.addEventListener=a;return e}e.addEventListener||(o([t,e]),"Element"in e?e.Element.prototype.addEventListener=a:(t.attachEvent("onreadystatechange",function(){o(t.all)}),n("getElementsByTagName"),n("getElementById"),n("createElement"),o(t.all)))}(window,document),!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):t.ES6Promise=e()}(this,function(){"use strict";function t(t){return"function"==typeof t||"object"==typeof t&&null!==t}function e(t){return"function"==typeof t}function n(t){I=t}function r(t){J=t}function o(){return function(){return process.nextTick(a)}}function i(){return"undefined"!=typeof H?function(){H(a)}:c()}function s(){var t=0,e=new V(a),n=document.createTextNode("");return e.observe(n,{characterData:!0}),function(){n.data=t=++t%2}}function u(){var t=new MessageChannel;return t.port1.onmessage=a,function(){return t.port2.postMessage(0)}}function c(){var t=setTimeout;return function(){return t(a,1)}}function a(){for(var t=0;t<G;t+=2){var e=$[t],n=$[t+1];e(n),$[t]=void 0,$[t+1]=void 0}G=0}function f(){try{var t=require,e=t("vertx");return H=e.runOnLoop||e.runOnContext,i()}catch(n){return c()}}function l(t,e){var n=arguments,r=this,o=new this.constructor(p);void 0===o[et]&&k(o);var i=r._state;return i?!function(){var t=n[i-1];J(function(){return x(i,o,t,r._result)})}():E(r,o,t,e),o}function h(t){var e=this;if(t&&"object"==typeof t&&t.constructor===e)return t;var n=new e(p);return g(n,t),n}function p(){}function v(){return new TypeError("You cannot resolve a promise with itself")}function d(){return new TypeError("A promises callback cannot return that same promise.")}function _(t){try{return t.then}catch(e){return it.error=e,it}}function y(t,e,n,r){try{t.call(e,n,r)}catch(o){return o}}function m(t,e,n){J(function(t){var r=!1,o=y(n,e,function(n){r||(r=!0,e!==n?g(t,n):S(t,n))},function(e){r||(r=!0,j(t,e))},"Settle: "+(t._label||" unknown promise"));!r&&o&&(r=!0,j(t,o))},t)}function b(t,e){e._state===rt?S(t,e._result):e._state===ot?j(t,e._result):E(e,void 0,function(e){return g(t,e)},function(e){return j(t,e)})}function w(t,n,r){n.constructor===t.constructor&&r===l&&n.constructor.resolve===h?b(t,n):r===it?j(t,it.error):void 0===r?S(t,n):e(r)?m(t,n,r):S(t,n)}function g(e,n){e===n?j(e,v()):t(n)?w(e,n,_(n)):S(e,n)}function A(t){t._onerror&&t._onerror(t._result),T(t)}function S(t,e){t._state===nt&&(t._result=e,t._state=rt,0!==t._subscribers.length&&J(T,t))}function j(t,e){t._state===nt&&(t._state=ot,t._result=e,J(A,t))}function E(t,e,n,r){var o=t._subscribers,i=o.length;t._onerror=null,o[i]=e,o[i+rt]=n,o[i+ot]=r,0===i&&t._state&&J(T,t)}function T(t){var e=t._subscribers,n=t._state;if(0!==e.length){for(var r=void 0,o=void 0,i=t._result,s=0;s<e.length;s+=3)r=e[s],o=e[s+n],r?x(n,r,o,i):o(i);t._subscribers.length=0}}function M(){this.error=null}function P(t,e){try{return t(e)}catch(n){return st.error=n,st}}function x(t,n,r,o){var i=e(r),s=void 0,u=void 0,c=void 0,a=void 0;if(i){if(s=P(r,o),s===st?(a=!0,u=s.error,s=null):c=!0,n===s)return void j(n,d())}else s=o,c=!0;n._state!==nt||(i&&c?g(n,s):a?j(n,u):t===rt?S(n,s):t===ot&&j(n,s))}function C(t,e){try{e(function(e){g(t,e)},function(e){j(t,e)})}catch(n){j(t,n)}}function O(){return ut++}function k(t){t[et]=ut++,t._state=void 0,t._result=void 0,t._subscribers=[]}function Y(t,e){this._instanceConstructor=t,this.promise=new t(p),this.promise[et]||k(this.promise),B(e)?(this._input=e,this.length=e.length,this._remaining=e.length,this._result=new Array(this.length),0===this.length?S(this.promise,this._result):(this.length=this.length||0,this._enumerate(),0===this._remaining&&S(this.promise,this._result))):j(this.promise,q())}function q(){return new Error("Array Methods must be provided an Array")}function F(t){return new Y(this,t).promise}function D(t){var e=this;return new e(B(t)?function(n,r){for(var o=t.length,i=0;i<o;i++)e.resolve(t[i]).then(n,r)}:function(t,e){return e(new TypeError("You must pass an array to race."))})}function K(t){var e=this,n=new e(p);return j(n,t),n}function L(){throw new TypeError("You must pass a resolver function as the first argument to the promise constructor")}function N(){throw new TypeError("Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.")}function U(t){this[et]=O(),this._result=this._state=void 0,this._subscribers=[],p!==t&&("function"!=typeof t&&L(),this instanceof U?C(this,t):N())}function W(){var t=void 0;if("undefined"!=typeof global)t=global;else if("undefined"!=typeof self)t=self;else try{t=Function("return this")()}catch(e){throw new Error("polyfill failed because global object is unavailable in this environment")}var n=t.Promise;if(n){var r=null;try{r=Object.prototype.toString.call(n.resolve())}catch(e){}if("[object Promise]"===r&&!n.cast)return}t.Promise=U}var z=void 0;z=Array.isArray?Array.isArray:function(t){return"[object Array]"===Object.prototype.toString.call(t)};var B=z,G=0,H=void 0,I=void 0,J=function(t,e){$[G]=t,$[G+1]=e,G+=2,2===G&&(I?I(a):tt())},Q="undefined"!=typeof window?window:void 0,R=Q||{},V=R.MutationObserver||R.WebKitMutationObserver,X="undefined"==typeof self&&"undefined"!=typeof process&&"[object process]"==={}.toString.call(process),Z="undefined"!=typeof Uint8ClampedArray&&"undefined"!=typeof importScripts&&"undefined"!=typeof MessageChannel,$=new Array(1e3),tt=void 0;tt=X?o():V?s():Z?u():void 0===Q&&"function"==typeof require?f():c();var et=Math.random().toString(36).substring(16),nt=void 0,rt=1,ot=2,it=new M,st=new M,ut=0;return Y.prototype._enumerate=function(){for(var t=this.length,e=this._input,n=0;this._state===nt&&n<t;n++)this._eachEntry(e[n],n)},Y.prototype._eachEntry=function(t,e){var n=this._instanceConstructor,r=n.resolve;if(r===h){var o=_(t);if(o===l&&t._state!==nt)this._settledAt(t._state,e,t._result);else if("function"!=typeof o)this._remaining--,this._result[e]=t;else if(n===U){var i=new n(p);w(i,t,o),this._willSettleAt(i,e)}else this._willSettleAt(new n(function(e){return e(t)}),e)}else this._willSettleAt(r(t),e)},Y.prototype._settledAt=function(t,e,n){var r=this.promise;r._state===nt&&(this._remaining--,t===ot?j(r,n):this._result[e]=n),0===this._remaining&&S(r,this._result)},Y.prototype._willSettleAt=function(t,e){var n=this;E(t,void 0,function(t){return n._settledAt(rt,e,t)},function(t){return n._settledAt(ot,e,t)})},U.all=F,U.race=D,U.resolve=h,U.reject=K,U._setScheduler=n,U._setAsap=r,U._asap=J,U.prototype={constructor:U,then:l,catch:function(t){return this.then(null,t)}},U.polyfill=W,U.Promise=U,U}),!function(){if("performance"in window==0&&(window.performance={}),Date.now=Date.now||function(){return(new Date).getTime()},"now"in window.performance==0){var a=Date.now();performance.timing&&performance.timing.navigationStart&&(a=performance.timing.navigationStart),window.performance.now=function(){return Date.now()-a}}}(),"undefined"!=typeof exports?module.exports={Skylink:Skylink,SkylinkLogs:SkylinkLogs}:globals?(globals.Skylink=Skylink,globals.SkylinkLogs=SkylinkLogs):window&&(window.Skylink=Skylink,window.SkylinkLogs=SkylinkLogs),Skylink.prototype._onIceCandidate=function(targetMid,candidate){var self=this,pc=self._peerConnections[targetMid];if(!pc)return void Log.error(self._debugOptions.instanceId,[targetMid,"RTCIceCandidate",null,"Ignoring of ICE candidate event as Peer connection does not exists ->"],candidate);if(candidate.candidate){pc.gathering||(Log.log(self._debugOptions.instanceId,[targetMid,"RTCIceCandidate",null,"ICE gathering has started."]),pc.gathering=!0,pc.gathered=!1,self._trigger("candidateGenerationState",self.CANDIDATE_GENERATION_STATE.GATHERING,targetMid));var candidateType=candidate.candidate.split(" ")[7];if(Log.debug(self._debugOptions.instanceId,[targetMid,"RTCIceCandidate",candidateType,"Generated ICE candidate ->"],candidate),"endOfCandidates"===candidateType)return void Log.error(self._debugOptions.instanceId,[targetMid,"RTCIceCandidate",candidateType,"Dropping of sending ICE candidate end-of-candidates signal to prevent errors ->"],candidate);if(self._filterCandidatesType[candidateType]){if(!self._hasMCU||!self._forceTURN)return void Log.error(self._debugOptions.instanceId,[targetMid,"RTCIceCandidate",candidateType,"Dropping of sending ICE candidate as it matches ICE candidate filtering flag ->"],candidate);Log.error(self._debugOptions.instanceId,[targetMid,"RTCIceCandidate",candidateType,"Not dropping of sending ICE candidate as TURN connections are enforced as MCU is present (and act as a TURN itself) so filtering of ICE candidate flags are not honoured ->"],candidate)}if(self._gatheredCandidates[targetMid]||(self._gatheredCandidates[targetMid]={sending:{host:[],srflx:[],relay:[]},receiving:{host:[],srflx:[],relay:[]}}),self._gatheredCandidates[targetMid].sending[candidateType].push({sdpMid:candidate.sdpMid,sdpMLineIndex:candidate.sdpMLineIndex,candidate:candidate.candidate}),!self._enableIceTrickle)return void Log.error(self._debugOptions.instanceId,[targetMid,"RTCIceCandidate",candidateType,"Dropping of sending ICE candidate as trickle ICE is disabled ->"],candidate);Log.debug(self._debugOptions.instanceId,[targetMid,"RTCIceCandidate",candidateType,"Sending ICE candidate ->"],candidate),self._sendChannelMessage({type:self._SIG_MESSAGE_TYPE.CANDIDATE,label:candidate.sdpMLineIndex,id:candidate.sdpMid,candidate:candidate.candidate,mid:self._user.sid,target:targetMid,rid:self._room.id})}else if(Log.log(self._debugOptions.instanceId,[targetMid,"RTCIceCandidate",null,"ICE gathering has completed."]),pc.gathering=!1,pc.gathered=!0,self._trigger("candidateGenerationState",self.CANDIDATE_GENERATION_STATE.COMPLETED,targetMid),self._enableIceTrickle)self._gatheredCandidates[targetMid]&&self._sendChannelMessage({type:self._SIG_MESSAGE_TYPE.END_OF_CANDIDATES,noOfExpectedCandidates:self._gatheredCandidates[targetMid].sending.srflx.length+self._gatheredCandidates[targetMid].sending.host.length+self._gatheredCandidates[targetMid].sending.relay.length,mid:self._user.sid,target:targetMid,rid:self._room.id});else{var sessionDescription=self._peerConnections[targetMid].localDescription;if(!(sessionDescription&&sessionDescription.type&&sessionDescription.sdp))return void Log.error(self._debugOptions.instanceId,[targetMid,"RTCSessionDescription",null,"Not sending any session description after ICE gathering completed as it is not present."]);self._sendChannelMessage({type:sessionDescription.type,sdp:self._addSDPMediaStreamTrackIDs(targetMid,sessionDescription),mid:self._user.sid,userInfo:self._getUserInfo(),target:targetMid,rid:self._room.id})}},Skylink.prototype._addIceCandidateToQueue=function(targetMid,canId,candidate){var candidateType=candidate.candidate.split(" ")[7];Log.debug(this._debugOptions.instanceId,[targetMid,"RTCIceCandidate",canId+":"+candidateType,"Buffering ICE candidate."]),this._trigger("candidateProcessingState",this.CANDIDATE_PROCESSING_STATE.BUFFERED,targetMid,canId,candidateType,{candidate:candidate.candidate,sdpMid:candidate.sdpMid,sdpMLineIndex:candidate.sdpMLineIndex},null),this._peerCandidatesQueue[targetMid]=this._peerCandidatesQueue[targetMid]||[],this._peerCandidatesQueue[targetMid].push([canId,candidate])},Skylink.prototype._addIceCandidateFromQueue=function(targetMid){this._peerCandidatesQueue[targetMid]=this._peerCandidatesQueue[targetMid]||[];for(var i=0;i<this._peerCandidatesQueue[targetMid].length;i++){var canArray=this._peerCandidatesQueue[targetMid][i];if(canArray){var candidateType=canArray[1].candidate.split(" ")[7];Log.debug(this._debugOptions.instanceId,[targetMid,"RTCIceCandidate",canArray[0]+":"+candidateType,"Adding buffered ICE candidate."]),this._addIceCandidate(targetMid,canArray[0],canArray[1])}else this._peerConnections[targetMid]&&this._peerConnections[targetMid].signalingState!==this.PEER_CONNECTION_STATE.CLOSED&&(Log.debug(this._debugOptions.instanceId,[targetMid,"RTCPeerConnection",null,"Signaling of end-of-candidates remote ICE gathering."]),this._peerConnections[targetMid].addIceCandidate(null))}delete this._peerCandidatesQueue[targetMid],this._signalingEndOfCandidates(targetMid)},Skylink.prototype._addIceCandidate=function(targetMid,canId,candidate){var self=this,candidateType=candidate.candidate.split(" ")[7],onSuccessCbFn=function(){Log.log(self._debugOptions.instanceId,[targetMid,"RTCIceCandidate",canId+":"+candidateType,"Added ICE candidate successfully."]),self._trigger("candidateProcessingState",self.CANDIDATE_PROCESSING_STATE.PROCESS_SUCCESS,targetMid,canId,candidateType,{candidate:candidate.candidate,sdpMid:candidate.sdpMid,sdpMLineIndex:candidate.sdpMLineIndex},null)},onErrorCbFn=function(error){Log.error(self._debugOptions.instanceId,[targetMid,"RTCIceCandidate",canId+":"+candidateType,"Failed adding ICE candidate ->"],error),self._trigger("candidateProcessingState",self.CANDIDATE_PROCESSING_STATE.PROCESS_ERROR,targetMid,canId,candidateType,{candidate:candidate.candidate,sdpMid:candidate.sdpMid,sdpMLineIndex:candidate.sdpMLineIndex},error)};return Log.debug(self._debugOptions.instanceId,[targetMid,"RTCIceCandidate",canId+":"+candidateType,"Adding ICE candidate."]),self._trigger("candidateProcessingState",self.CANDIDATE_PROCESSING_STATE.PROCESSING,targetMid,canId,candidateType,{candidate:candidate.candidate,sdpMid:candidate.sdpMid,sdpMLineIndex:candidate.sdpMLineIndex},null),self._peerConnections[targetMid]&&self._peerConnections[targetMid].signalingState!==self.PEER_CONNECTION_STATE.CLOSED?void self._peerConnections[targetMid].addIceCandidate(candidate,onSuccessCbFn,onErrorCbFn):(Log.error(self._debugOptions.instanceId,[targetMid,"RTCIceCandidate",canId+":"+candidateType,"Dropping ICE candidate as Peer connection does not exists or is closed"]),void self._trigger("candidateProcessingState",self.CANDIDATE_PROCESSING_STATE.DROPPED,targetMid,canId,candidateType,{candidate:candidate.candidate,sdpMid:candidate.sdpMid,sdpMLineIndex:candidate.sdpMLineIndex},new Error("Failed processing ICE candidate as Peer connection does not exists or is closed.")))},Skylink.prototype._setIceServers=function(givenConfig){var self=this,givenIceServers=UtilsFactory.clone(givenConfig.iceServers),iceServersList={},newIceServers=[],useTURNSSLProtocol=!1,useTURNSSLPort=!1;self._forceTURNSSL&&("chrome"===window.webrtcDetectedBrowser||"safari"===window.webrtcDetectedBrowser||"IE"===window.webrtcDetectedBrowser?useTURNSSLProtocol=!0:useTURNSSLPort=!0),Log.log(self._debugOptions.instanceId,"TURN server connections SSL configuration",{useTURNSSLProtocol:useTURNSSLProtocol,useTURNSSLPort:useTURNSSLPort});var i,pushIceServer=function(username,credential,url,index){if(iceServersList[username]||(iceServersList[username]={}),iceServersList[username][credential]||(iceServersList[username][credential]=[]),self._turnServer&&url.indexOf("temasys")>0){var parts=url.split(":"),subparts=(parts[1]||"").split("?");subparts[0]=self._turnServer,parts[1]=subparts.join("?"),url=parts.join(":")}iceServersList[username][credential].indexOf(url)===-1&&("number"==typeof index?iceServersList[username][credential].splice(index,0,url):iceServersList[username][credential].push(url))};for(i=0;i<givenIceServers.length;i++){var server=givenIceServers[i];if("string"==typeof server.url){if(0===server.url.indexOf("stun")){if(!self._enableSTUN){Log.warn(self._debugOptions.instanceId,"Ignoring STUN server provided at index "+i,UtilsFactory.clone(server));continue}if(!self._usePublicSTUN&&server.url.indexOf("temasys")===-1){Log.warn(self._debugOptions.instanceId,"Ignoring public STUN server provided at index "+i,UtilsFactory.clone(server));continue}}else if(0===server.url.indexOf("turn")){if(!self._enableTURN){Log.warn(self._debugOptions.instanceId,"Ignoring TURN server provided at index "+i,UtilsFactory.clone(server));continue}if(server.url.indexOf(":443")===-1&&useTURNSSLPort){Log.log(self._debugOptions.instanceId,"Ignoring TURN Server (non-SSL port) provided at index "+i,UtilsFactory.clone(server));continue}if(useTURNSSLProtocol){var parts=server.url.split(":");parts[0]="turns",server.url=parts.join(":")}}if(server.url.indexOf("@")>0){var protocolParts=server.url.split(":"),urlParts=protocolParts[1].split("@");server.username=urlParts[0],server.url=protocolParts[0]+":"+urlParts[1],"edge"===window.webrtcDetectedBrowser?server.url+=":3478":protocolParts[2]&&(server.url+=":"+protocolParts[2])}var username="string"==typeof server.username?server.username:"none",credential="string"==typeof server.credential?server.credential:"none";if(0===server.url.indexOf("turn"))if(self._TURNTransport===self.TURN_TRANSPORT.ANY)pushIceServer(username,credential,server.url);else{var rawUrl=server.url;if(rawUrl.indexOf("?transport=")>0&&(rawUrl=rawUrl.split("?transport=")[0]),self._TURNTransport===self.TURN_TRANSPORT.NONE)pushIceServer(username,credential,rawUrl);else if(self._TURNTransport===self.TURN_TRANSPORT.UDP)pushIceServer(username,credential,rawUrl+"?transport=udp");else if(self._TURNTransport===self.TURN_TRANSPORT.TCP)pushIceServer(username,credential,rawUrl+"?transport=tcp");else{if(self._TURNTransport!==self.TURN_TRANSPORT.ALL){Log.warn(self._debugOptions.instanceId,'Invalid TURN transport option "'+self._TURNTransport+'". Ignoring TURN server at index'+i,UtilsFactory.clone(server));continue}pushIceServer(username,credential,rawUrl+"?transport=tcp"),pushIceServer(username,credential,rawUrl+"?transport=udp")}}else pushIceServer(username,credential,server.url)}else Log.warn(self._debugOptions.instanceId,"Ignoring ICE server provided at index "+i,UtilsFactory.clone(server))}self._enableSTUN&&self._usePublicSTUN&&"firefox"===window.webrtcDetectedBrowser&&pushIceServer("none","none","stun:stun.services.mozilla.com",0);var hasUrlsSupport=!1;"chrome"===window.webrtcDetectedBrowser&&window.webrtcDetectedVersion>34&&(hasUrlsSupport=!0),"firefox"===window.webrtcDetectedBrowser&&window.webrtcDetectedVersion>38&&(hasUrlsSupport=!0),"opera"===window.webrtcDetectedBrowser&&window.webrtcDetectedVersion>31&&(hasUrlsSupport=!0),"safari"!==window.webrtcDetectedBrowser&&"IE"!==window.webrtcDetectedBrowser||(hasUrlsSupport=!0),["bowser","edge"].indexOf(window.webrtcDetectedBrowser)>-1&&(hasUrlsSupport=!0);for(var serverUsername in iceServersList)if(iceServersList.hasOwnProperty(serverUsername))for(var serverCred in iceServersList[serverUsername])if(iceServersList[serverUsername].hasOwnProperty(serverCred))if(hasUrlsSupport){var urlsItem={urls:iceServersList[serverUsername][serverCred]};if("none"!==serverUsername&&(urlsItem.username=serverUsername),"none"!==serverCred&&(urlsItem.credential=serverCred),"edge"===window.webrtcDetectedBrowser){if(urlsItem.username&&urlsItem.credential){urlsItem.urls=[urlsItem.urls[0]],newIceServers.push(urlsItem);break}}else newIceServers.push(urlsItem)}else for(var j=0;j<iceServersList[serverUsername][serverCred].length;j++){var urlItem={url:iceServersList[serverUsername][serverCred][j]};"none"!==serverUsername&&(urlItem.username=serverUsername),"none"!==serverCred&&(urlItem.credential=serverCred),newIceServers.push(urlItem)}return Log.log(self._debugOptions.instanceId,"Output iceServers configuration:",newIceServers),{iceServers:newIceServers}},Skylink.prototype._refreshPeerConnection=function(listOfPeers,doIceRestart,callback){var self=this,listOfPeerRestarts=[],error="",listOfPeerRestartErrors={},refreshSinglePeerCallback=function(peerId){return function(error){listOfPeerRestarts.indexOf(peerId)===-1&&(error&&(Log.error(self._debugOptions.instanceId,[peerId,"RTCPeerConnection",null,"Failed restarting for peer"],error),listOfPeerRestartErrors[peerId]=error),listOfPeerRestarts.push(peerId)),listOfPeerRestarts.length===listOfPeers.length&&"function"==typeof callback&&(Log.log(self._debugOptions.instanceId,[null,"PeerConnection",null,"Invoked all peers to restart. Firing callback"]),Object.keys(listOfPeerRestartErrors).length>0?callback({refreshErrors:listOfPeerRestartErrors,listOfPeers:listOfPeers},null):callback(null,{listOfPeers:listOfPeers}))}},refreshSinglePeer=function(peerId,peerCallback){return self._peerConnections[peerId]?(Log.log(self._debugOptions.instanceId,[peerId,"PeerConnection",null,"Restarting peer connection"]),void self._restartPeerConnection(peerId,doIceRestart,peerCallback)):(error="There is currently no existing peer connection made with the peer. Unable to restart connection",Log.error(self._debugOptions.instanceId,[peerId,null,null,error]),void peerCallback(error))};if(self._hasMCU)self._restartMCUConnection(callback,doIceRestart);else{var i;for(i=0;i<listOfPeers.length;i++){var peerId=listOfPeers[i];Object.keys(self._peerConnections).indexOf(peerId)>-1?refreshSinglePeer(peerId,refreshSinglePeerCallback(peerId)):(error="Peer connection with peer does not exists. Unable to restart",Log.error(self._debugOptions.instanceId,[peerId,"PeerConnection",null,error]),refreshSinglePeerCallback(peerId)(error))}}},Skylink.prototype._retrieveStats=function(peerId,callback){var self=this;Log.debug(self._debugOptions.instanceId,[peerId,"RTCStatsReport",null,"Retrieivng connection status"]);var pc=self._peerConnections[peerId],result={raw:null,connection:{iceConnectionState:pc.iceConnectionState,iceGatheringState:pc.iceGatheringState,signalingState:pc.signalingState,remoteDescription:{type:pc.remoteDescription?pc.remoteDescription.type||null:null,sdp:pc.remoteDescription?pc.remoteDescription.sdp||null:null},localDescription:{type:pc.localDescription?pc.localDescription.type||null:null,sdp:pc.localDescription?pc.localDescription.sdp||null:null},candidates:UtilsFactory.clone(self._gatheredCandidates[peerId]||{sending:{host:[],srflx:[],relay:[]},receiving:{host:[],srflx:[],relay:[]}}),dataChannels:{}},audio:{sending:{ssrc:null,bytes:0,packets:0,packetsLost:0,rtt:0,jitter:0,jitterBufferMs:null,codec:self._getSDPSelectedCodec(peerId,pc.remoteDescription,"audio"),nacks:null,inputLevel:null,echoReturnLoss:null,echoReturnLossEnhancement:null,totalBytes:0,totalPackets:0,totalPacketsLost:0,totalNacks:null},receiving:{ssrc:null,bytes:0,packets:0,packetsLost:0,packetsDiscarded:0,fractionLost:0,nacks:null,jitter:0,jitterBufferMs:null,codec:self._getSDPSelectedCodec(peerId,pc.remoteDescription,"audio"),outputLevel:null,totalBytes:0,totalPackets:0,totalPacketsLost:0,totalNacks:null}},video:{sending:{ssrc:null,bytes:0,packets:0,packetsLost:0,rtt:0,jitter:0,jitterBufferMs:null,codec:self._getSDPSelectedCodec(peerId,pc.remoteDescription,"video"),frameWidth:null,frameHeight:null,framesDecoded:null,framesCorrupted:null,framesDropped:null,framesPerSecond:null,framesInput:null,frames:null,frameRateEncoded:null,frameRate:null,frameRateInput:null,frameRateMean:null,frameRateStdDev:null,nacks:null,plis:null,firs:null,slis:null,qpSum:null,totalBytes:0,totalPackets:0,totalPacketsLost:0,totalNacks:null,totalPlis:null,totalFirs:null,totalSlis:null,totalFrames:null},receiving:{ssrc:null,bytes:0,packets:0,packetsDiscarded:0,packetsLost:0,fractionLost:0,jitter:0,jitterBufferMs:null,codec:self._getSDPSelectedCodec(peerId,pc.remoteDescription,"video"),frameWidth:null,frameHeight:null,framesDecoded:null,framesCorrupted:null,framesPerSecond:null,framesDropped:null,framesOutput:null,frames:null,frameRateMean:null,frameRateStdDev:null,nacks:null,plis:null,firs:null,slis:null,e2eDelay:null,totalBytes:0,totalPackets:0,totalPacketsLost:0,totalNacks:null,totalPlis:null,totalFirs:null,totalSlis:null,totalFrames:null}},selectedCandidate:{local:{ipAddress:null,candidateType:null,portNumber:null,transport:null,turnMediaTransport:null},remote:{ipAddress:null,candidateType:null,portNumber:null,transport:null},consentResponses:{received:null,sent:null,totalReceived:null,totalSent:null},consentRequests:{received:null,sent:null,totalReceived:null,totalSent:null},responses:{received:null,sent:null,totalReceived:null,totalSent:null},requests:{received:null,sent:null,totalReceived:null,totalSent:null}},certificate:{local:self._getSDPFingerprint(peerId,pc.localDescription),remote:self._getSDPFingerprint(peerId,pc.remoteDescription),dtlsCipher:null,srtpCipher:null}};for(var channelProp in self._dataChannels[peerId])self._dataChannels[peerId].hasOwnProperty(channelProp)&&self._dataChannels[peerId][channelProp]&&(result.connection.dataChannels[self._dataChannels[peerId][channelProp].getInfo().label]={label:self._dataChannels[peerId][channelProp].getInfo().label,readyState:self._dataChannels[peerId][channelProp].getInfo().readyState,channelType:"main"===channelProp?self.DATA_CHANNEL_TYPE.MESSAGING:self.DATA_CHANNEL_TYPE.DATA,currentTransferId:self._dataChannels[peerId][channelProp].transferId||null});var loopFn=function(obj,fn){for(var prop in obj)obj.hasOwnProperty(prop)&&obj[prop]&&fn(obj[prop],prop)},formatCandidateFn=function(candidateDirType,candidate){result.selectedCandidate[candidateDirType].ipAddress=candidate.ipAddress,result.selectedCandidate[candidateDirType].candidateType=candidate.candidateType,result.selectedCandidate[candidateDirType].portNumber="number"!=typeof candidate.portNumber?parseInt(candidate.portNumber,10)||null:candidate.portNumber,result.selectedCandidate[candidateDirType].transport=candidate.transport};pc.getStats(null,function(stats){if(Log.debug(self._debugOptions.instanceId,[peerId,"RTCStatsReport",null,"Retrieval success ->"],stats),result.raw=stats,"firefox"===window.webrtcDetectedBrowser)loopFn(stats,function(obj,prop){var dirType="";0===prop.indexOf("inbound_rtp")||0===prop.indexOf("outbound_rtp")?(dirType=0===prop.indexOf("inbound_rtp")?"receiving":"sending",self._peerStats[peerId][prop]||(self._peerStats[peerId][prop]=obj),result[obj.mediaType][dirType].bytes=self._parseConnectionStats(self._peerStats[peerId][prop],obj,"receiving"===dirType?"bytesReceived":"bytesSent"),
result[obj.mediaType][dirType].totalBytes=parseInt(("receiving"===dirType?obj.bytesReceived:obj.bytesSent)||"0",10),result[obj.mediaType][dirType].packets=self._parseConnectionStats(self._peerStats[peerId][prop],obj,"receiving"===dirType?"packetsReceived":"packetsSent"),result[obj.mediaType][dirType].totalPackets=parseInt(("receiving"===dirType?obj.packetsReceived:obj.packetsSent)||"0",10),result[obj.mediaType][dirType].ssrc=obj.ssrc,"video"===obj.mediaType&&(result.video[dirType].frameRateMean=obj.framerateMean||0,result.video[dirType].frameRateStdDev=obj.framerateStdDev||0,result.video[dirType].framesDropped="number"==typeof obj.framesDropped?obj.framesDropped:"number"==typeof obj.droppedFrames?obj.droppedFrames:null,result.video[dirType].framesCorrupted="number"==typeof obj.framesCorrupted?obj.framesCorrupted:null,result.video[dirType].framesPerSecond="number"==typeof obj.framesPerSecond?obj.framesPerSecond:null,"sending"===dirType?(result.video[dirType].framesEncoded="number"==typeof obj.framesEncoded?obj.framesEncoded:null,result.video[dirType].frames="number"==typeof obj.framesSent?obj.framesSent:null):(result.video[dirType].framesDecoded="number"==typeof obj.framesDecoded?obj.framesDecoded:null,result.video[dirType].frames="number"==typeof obj.framesReceived?obj.framesReceived:null)),"receiving"===dirType&&(obj.packetsDiscarded=("number"==typeof obj.packetsDiscarded?obj.packetsDiscarded:obj.discardedPackets)||0,obj.packetsLost="number"==typeof obj.packetsLost?obj.packetsLost:0,result[obj.mediaType].receiving.packetsLost=self._parseConnectionStats(self._peerStats[peerId][prop],obj,"packetsLost"),result[obj.mediaType].receiving.packetsDiscarded=self._parseConnectionStats(self._peerStats[peerId][prop],obj,"packetsDiscarded"),result[obj.mediaType].receiving.totalPacketsDiscarded=obj.packetsDiscarded,result[obj.mediaType].receiving.totalPacketsLost=obj.packetsLost),self._peerStats[peerId][prop]=obj):0===prop.indexOf("inbound_rtcp")||0===prop.indexOf("outbound_rtcp")?(dirType=0===prop.indexOf("inbound_rtp")?"receiving":"sending",self._peerStats[peerId][prop]||(self._peerStats[peerId][prop]=obj),"sending"===dirType?(result[obj.mediaType].sending.rtt=obj.mozRtt||0,result[obj.mediaType].sending.targetBitrate="number"==typeof obj.targetBitrate?obj.targetBitrate:0):result[obj.mediaType].receiving.jitter=obj.jitter||0,self._peerStats[peerId][prop]=obj):obj.nominated&&obj.selected&&(formatCandidateFn("remote",stats[obj.remoteCandidateId]),formatCandidateFn("local",stats[obj.localCandidateId]))});else if("edge"===window.webrtcDetectedBrowser){var tracks=[];pc.getRemoteStreams().length>0&&(tracks=tracks.concat(pc.getRemoteStreams()[0].getTracks())),pc.getLocalStreams().length>0&&(tracks=tracks.concat(pc.getLocalStreams()[0].getTracks())),loopFn(tracks,function(track){loopFn(stats,function(obj,prop){if("track"===obj.type&&obj.trackIdentifier===track.id){var dirType=obj.remoteSource?"receiving":"sending",mediaType=track.kind;"audio"===mediaType?(result[mediaType][dirType]["sending"===dirType?"inputLevel":"outputLevel"]=obj.audioLevel,"sending"===dirType&&(result[mediaType][dirType].echoReturnLoss=obj.echoReturnLoss,result[mediaType][dirType].echoReturnLossEnhancement=obj.echoReturnLossEnhancement)):(result[mediaType][dirType].frames=self._parseConnectionStats(self._peerStats[peerId][subprop],streamObj,"sending"===dirType?obj.framesSent:obj.framesReceived),result[mediaType][dirType].framesDropped=obj.framesDropped,result[mediaType][dirType].framesDecoded=obj.framesDecoded,result[mediaType][dirType].framesCorrupted=obj.framesCorrupted,result[mediaType][dirType].framesPerSecond=obj.framesPerSecond,result[mediaType][dirType].frameHeight=obj.frameHeight||null,result[mediaType][dirType].frameWidth=obj.frameWidth||null,result[mediaType][dirType].totalFrames="sending"===dirType?obj.framesSent:obj.framesReceived),loopFn(stats,function(streamObj,subprop){streamObj.mediaTrackId===obj.id&&["outboundrtp","inboundrtp"].indexOf(streamObj.type)>-1&&(self._peerStats[peerId][subprop]||(self._peerStats[peerId][subprop]=streamObj),result[mediaType][dirType].ssrc=parseInt(streamObj.ssrc||"0",10),result[mediaType][dirType].nacks=self._parseConnectionStats(self._peerStats[peerId][subprop],streamObj,"nackCount"),result[mediaType][dirType].totalNacks=streamObj.nackCount,"video"===mediaType&&(result[mediaType][dirType].firs=self._parseConnectionStats(self._peerStats[peerId][subprop],streamObj,"firCount"),result[mediaType][dirType].plis=self._parseConnectionStats(self._peerStats[peerId][subprop],streamObj,"pliCount"),result[mediaType][dirType].slis=self._parseConnectionStats(self._peerStats[peerId][subprop],streamObj,"sliCount"),result[mediaType][dirType].totalFirs=streamObj.firCount,result[mediaType][dirType].totalPlis=streamObj.plisCount,result[mediaType][dirType].totalSlis=streamObj.sliCount),result[mediaType][dirType].bytes=self._parseConnectionStats(self._peerStats[peerId][subprop],streamObj,"receiving"===dirType?"bytesReceived":"bytesSent"),result[mediaType][dirType].packets=self._parseConnectionStats(self._peerStats[peerId][subprop],streamObj,"receiving"===dirType?"packetsReceived":"packetsSent"),result[mediaType][dirType].totalBytes="receiving"===dirType?streamObj.bytesReceived:streamObj.bytesSent,result[mediaType][dirType].totalPackets="receiving"===dirType?streamObj.packetsReceived:streamObj.packetsSent,"receiving"===dirType?(result[mediaType][dirType].jitter=streamObj.jitter||0,result[mediaType].receiving.fractionLost=streamObj.fractionLost,result[mediaType][dirType].packetsLost=self._parseConnectionStats(self._peerStats[peerId][subprop],streamObj,"packetsLost"),result[mediaType][dirType].packetsDiscarded=self._parseConnectionStats(self._peerStats[peerId][subprop],streamObj,"packetsDiscarded"),result[mediaType][dirType].totalPacketsLost=streamObj.packetsLost,result[mediaType][dirType].totalPacketsDiscarded=streamObj.packetsDiscarded||0):(result[mediaType].sending.rtt=streamObj.roundTripTime||0,result[mediaType].sending.targetBitrate=streamObj.targetBitrate||0),result[mediaType][dirType].codec&&streamObj.codecId&&(result[mediaType][dirType].codec.name=streamObj.codecId))})}})})}else{var reportedCandidate=!1,reportedCertificate=!1;loopFn(stats,function(obj,prop){if(0===prop.indexOf("ssrc_")){var dirType=prop.indexOf("_recv")>0?"receiving":"sending";obj.mediaType||(obj.mediaType=obj.hasOwnProperty("audioOutputLevel")||obj.hasOwnProperty("audioInputLevel")||obj.hasOwnProperty("googEchoCancellationReturnLoss")||obj.hasOwnProperty("googEchoCancellation")?"audio":"video"),self._peerStats[peerId][prop]||(self._peerStats[peerId][prop]=obj);try{if("video"===obj.mediaType&&"receiving"===dirType){var captureStartNtpTimeMs=parseInt(obj.googCaptureStartNtpTimeMs||"0",10);if(captureStartNtpTimeMs>0&&pc.getRemoteStreams().length>0&&document&&"function"==typeof document.getElementsByTagName){var streamId=pc.getRemoteStreams()[0].id||pc.getRemoteStreams()[0].label,elements=[];self._isUsingPlugin?elements=document.getElementsByTagName("object"):(elements=document.getElementsByTagName("video"),0===elements.length&&(elements=document.getElementsByTagName("audio")));for(var e=0;e<elements.length;e++){var videoElmStreamId=null;if(self._isUsingPlugin){if(!(elements[e].children&&"object"==typeof elements[e].children&&"number"==typeof elements[e].children.length&&elements[e].children.length>0))break;for(var ec=0;ec<elements[e].children.length;ec++)if("streamId"===elements[e].children[ec].name){videoElmStreamId=elements[e].children[ec].value||null;break}}else videoElmStreamId=elements[e].srcObject?elements[e].srcObject.id||elements[e].srcObject.label:null;if(videoElmStreamId&&videoElmStreamId===streamId){result[obj.mediaType][dirType].e2eDelay=(new Date).getTime()+22089888e5-captureStartNtpTimeMs-1e3*elements[e].currentTime;break}}}}}catch(error){Log.error(self._debugOptions.instanceId,[peerId,"RTCStatsReport",null,"Failed retrieving e2e delay ->"],error)}if(result[obj.mediaType][dirType].ssrc=parseInt(obj.ssrc||"0",10),result[obj.mediaType][dirType].bytes=self._parseConnectionStats(self._peerStats[peerId][prop],obj,"receiving"===dirType?"bytesReceived":"bytesSent"),result[obj.mediaType][dirType].packets=self._parseConnectionStats(self._peerStats[peerId][prop],obj,"receiving"===dirType?"packetsReceived":"packetsSent"),result[obj.mediaType][dirType].nacks=self._parseConnectionStats(self._peerStats[peerId][prop],obj,"receiving"===dirType?"googNacksReceived":"googNacksSent"),result[obj.mediaType][dirType].totalPackets=parseInt(("receiving"===dirType?obj.packetsReceived:obj.packetsSent)||"0",10),result[obj.mediaType][dirType].totalBytes=parseInt(("receiving"===dirType?obj.bytesReceived:obj.bytesSent)||"0",10),result[obj.mediaType][dirType].totalNacks=parseInt(("receiving"===dirType?obj.googNacksReceived:obj.googNacksSent)||"0",10),result[obj.mediaType][dirType].codec&&(obj.googCodecName&&"unknown"!==obj.googCodecName&&(result[obj.mediaType][dirType].codec.name=obj.googCodecName),obj.codecImplementationName&&"unknown"!==obj.codecImplementationName&&(result[obj.mediaType][dirType].codec.implementation=obj.codecImplementationName)),"sending"===dirType?(result[obj.mediaType].sending.rtt=parseFloat(obj.googRtt||"0",10),result[obj.mediaType].sending.targetBitrate=obj.targetBitrate?parseInt(obj.targetBitrate,10):null):(result[obj.mediaType].receiving.packetsLost=self._parseConnectionStats(self._peerStats[peerId][prop],obj,"packetsLost"),result[obj.mediaType].receiving.packetsDiscarded=self._parseConnectionStats(self._peerStats[peerId][prop],obj,"packetsDiscarded"),result[obj.mediaType].receiving.jitter=parseFloat(obj.googJitterReceived||"0",10),result[obj.mediaType].receiving.jitterBufferMs=obj.googJitterBufferMs?parseFloat(obj.googJitterBufferMs||"0",10):null,result[obj.mediaType].receiving.totalPacketsLost=parseInt(obj.packetsLost||"0",10),result[obj.mediaType].receiving.totalPacketsDiscarded=parseInt(obj.packetsDiscarded||"0",10)),"video"===obj.mediaType?(result.video[dirType].framesCorrupted=obj.framesCorrupted?parseInt(obj.framesCorrupted,10):null,result.video[dirType].framesPerSecond=obj.framesPerSecond?parseFloat(obj.framesPerSecond,10):null,result.video[dirType].framesDropped=obj.framesDropped?parseInt(obj.framesDropped,10):null,"sending"===dirType?(result.video[dirType].frameWidth=obj.googFrameWidthSent?parseInt(obj.googFrameWidthSent,10):null,result.video[dirType].frameHeight=obj.googFrameHeightSent?parseInt(obj.googFrameHeightSent,10):null,result.video[dirType].plis=obj.googPlisSent?self._parseConnectionStats(self._peerStats[peerId][prop],obj,"googPlisSent"):null,result.video[dirType].firs=obj.googFirsSent?self._parseConnectionStats(self._peerStats[peerId][prop],obj,"googFirsSent"):null,result[obj.mediaType][dirType].totalPlis=obj.googPlisSent?parseInt(obj.googPlisSent,10):null,result[obj.mediaType][dirType].totalFirs=obj.googFirsSent?parseInt(obj.googFirsSent,10):null,result.video[dirType].framesEncoded=obj.framesEncoded?parseInt(obj.framesEncoded,10):null,result.video[dirType].frameRateEncoded=obj.googFrameRateEncoded?parseInt(obj.googFrameRateEncoded,10):null,result.video[dirType].frameRateInput=obj.googFrameRateInput?parseInt(obj.googFrameRateInput,10):null,result.video[dirType].frameRate=obj.googFrameRateSent?parseInt(obj.googFrameRateSent,10):null,result.video[dirType].qpSum=obj.qpSum?parseInt(obj.qpSum,10):null,result.video[dirType].frames=obj.framesSent?self._parseConnectionStats(self._peerStats[peerId][prop],obj,"framesSent"):null,result.video[dirType].totalFrames=obj.framesSent?parseInt(obj.framesSent,10):null):(result.video[dirType].frameWidth=obj.googFrameWidthReceived?parseInt(obj.googFrameWidthReceived,10):null,result.video[dirType].frameHeight=obj.googFrameHeightReceived?parseInt(obj.googFrameHeightReceived,10):null,result.video[dirType].plis=obj.googPlisReceived?self._parseConnectionStats(self._peerStats[peerId][prop],obj,"googPlisReceived"):null,result.video[dirType].firs=obj.googFirsReceived?self._parseConnectionStats(self._peerStats[peerId][prop],obj,"googFirsReceived"):null,result[obj.mediaType][dirType].totalPlis=obj.googPlisReceived?parseInt(obj.googPlisReceived,10):null,result[obj.mediaType][dirType].totalFirs=obj.googFirsReceived?parseInt(obj.googFirsReceived,10):null,result.video[dirType].framesDecoded=obj.framesDecoded?parseInt(obj.framesDecoded,10):null,result.video[dirType].frameRateDecoded=obj.googFrameRateDecoded?parseInt(obj.googFrameRateDecoded,10):null,result.video[dirType].frameRateOutput=obj.googFrameRateOutput?parseInt(obj.googFrameRateOutput,10):null,result.video[dirType].frameRate=obj.googFrameRateReceived?parseInt(obj.googFrameRateReceived,10):null,result.video[dirType].frames=obj.framesReceived?self._parseConnectionStats(self._peerStats[peerId][prop],obj,"framesReceived"):null,result.video[dirType].totalFrames=obj.framesReceived?parseInt(obj.framesReceived,10):null)):"receiving"===dirType?result.audio[dirType].outputLevel=parseFloat(obj.audioOutputLevel||"0",10):(result.audio[dirType].inputLevel=parseFloat(obj.audioInputLevel||"0",10),result.audio[dirType].echoReturnLoss=parseFloat(obj.googEchoCancellationReturnLoss||"0",10),result.audio[dirType].echoReturnLossEnhancement=parseFloat(obj.googEchoCancellationReturnLossEnhancement||"0",10)),self._peerStats[peerId][prop]=obj,reportedCandidate||loopFn(stats,function(canObj,canProp){reportedCandidate||0!==canProp.indexOf("Conn-")||obj.transportId===canObj.googChannelId&&(self._peerStats[peerId][canProp]||(self._peerStats[peerId][canProp]=canObj),formatCandidateFn("local",stats[canObj.localCandidateId]),formatCandidateFn("remote",stats[canObj.remoteCandidateId]),result.selectedCandidate.writable=canObj.googWritable?"true"===canObj.googWritable:null,result.selectedCandidate.readable=canObj.googReadable?"true"===canObj.googReadable:null,result.selectedCandidate.rtt=canObj.googRtt?self._parseConnectionStats(self._peerStats[peerId][canProp],canObj,"googRtt"):null,result.selectedCandidate.totalRtt=canObj.googRtt?parseInt(canObj.googRtt,10):null,result.selectedCandidate.requests={received:canObj.requestsReceived?self._parseConnectionStats(self._peerStats[peerId][canProp],canObj,"requestsReceived"):null,sent:canObj.requestsSent?self._parseConnectionStats(self._peerStats[peerId][canProp],canObj,"requestsSent"):null,totalReceived:canObj.requestsReceived?parseInt(canObj.requestsReceived,10):null,totalSent:canObj.requestsSent?parseInt(canObj.requestsSent,10):null},result.selectedCandidate.responses={received:canObj.responsesReceived?self._parseConnectionStats(self._peerStats[peerId][canProp],canObj,"responsesReceived"):null,sent:canObj.responsesSent?self._parseConnectionStats(self._peerStats[peerId][canProp],canObj,"responsesSent"):null,totalReceived:canObj.responsesReceived?parseInt(canObj.responsesReceived,10):null,totalSent:canObj.responsesSent?parseInt(canObj.responsesSent,10):null},result.selectedCandidate.consentRequests={received:canObj.consentRequestsReceived?self._parseConnectionStats(self._peerStats[peerId][canProp],canObj,"consentRequestsReceived"):null,sent:canObj.consentRequestsSent?self._parseConnectionStats(self._peerStats[peerId][canProp],canObj,"consentRequestsSent"):null,totalReceived:canObj.consentRequestsReceived?parseInt(canObj.consentRequestsReceived,10):null,totalSent:canObj.consentRequestsSent?parseInt(canObj.consentRequestsSent,10):null},result.selectedCandidate.consentResponses={received:canObj.consentResponsesReceived?self._parseConnectionStats(self._peerStats[peerId][canProp],canObj,"consentResponsesReceived"):null,sent:canObj.consentResponsesSent?self._parseConnectionStats(self._peerStats[peerId][canProp],canObj,"consentResponsesSent"):null,totalReceived:canObj.consentResponsesReceived?parseInt(canObj.consentResponsesReceived,10):null,totalSent:canObj.consentResponsesSent?parseInt(canObj.consentResponsesSent,10):null},self._peerStats[peerId][canProp]=canObj,reportedCandidate=!0)}),!reportedCertificate&&stats[obj.transportId]){result.certificate.srtpCipher=stats[obj.transportId].srtpCipher||null,result.certificate.dtlsCipher=stats[obj.transportId].dtlsCipher||null;var localCertId=stats[obj.transportId].localCertificateId,remoteCertId=stats[obj.transportId].remoteCertificateId;localCertId&&stats[localCertId]&&(result.certificate.local.derBase64=stats[localCertId].googDerBase64||null,stats[localCertId].googFingerprint&&(result.certificate.local.fingerprint=stats[localCertId].googFingerprint),stats[localCertId].googFingerprintAlgorithm&&(result.certificate.local.fingerprintAlgorithm=stats[localCertId].googFingerprintAlgorithm)),remoteCertId&&stats[remoteCertId]&&(result.certificate.remote.derBase64=stats[remoteCertId].googDerBase64||null,stats[remoteCertId].googFingerprint&&(result.certificate.remote.fingerprint=stats[remoteCertId].googFingerprint),stats[remoteCertId].googFingerprintAlgorithm&&(result.certificate.remote.fingerprintAlgorithm=stats[remoteCertId].googFingerprintAlgorithm)),reportedCertificate=!0}}})}0===(result.selectedCandidate.local.candidateType||"").indexOf("relay")?(result.selectedCandidate.local.turnMediaTransport="UDP",self._forceTURNSSL&&"firefox"!==window.webrtcDetectedBrowser?result.selectedCandidate.local.turnMediaTransport="TCP/TLS":(self._TURNTransport===self.TURN_TRANSPORT.TCP||self._forceTURNSSL)&&self._room&&self._room.connection&&self._room.connection.peerConfig&&Array.isArray(self._room.connection.peerConfig.iceServers)&&self._room.connection.peerConfig.iceServers[0]&&self._room.connection.peerConfig.iceServers[0].urls[0]&&self._room.connection.peerConfig.iceServers[0].urls[0].indexOf("?transport=tcp")>0&&(result.selectedCandidate.local.turnMediaTransport="TCP")):result.selectedCandidate.local.turnMediaTransport=null,callback(null,result)},function(error){callback(error,null)})},Skylink.prototype._addPeer=function(targetMid,peerBrowser,toOffer,restartConn,receiveOnly,isSS){var self=this;return self._peerConnections[targetMid]&&!restartConn?void Log.error(self._debugOptions.instanceId,[targetMid,null,null,"Connection to peer has already been made"]):(Log.log(self._debugOptions.instanceId,[targetMid,null,null,"Starting the connection to peer. Options provided:"],{peerBrowser:peerBrowser,toOffer:toOffer,receiveOnly:receiveOnly,enableDataChannel:self._enableDataChannel}),Log.info(self._debugOptions.instanceId,"Adding peer",isSS),restartConn||(self._peerConnections[targetMid]=self._createPeerConnection(targetMid,!!isSS)),self._peerConnections[targetMid]?void(self._peerConnections[targetMid].hasScreen=!!isSS):void Log.error(self._debugOptions.instanceId,[targetMid,null,null,"Failed creating the connection to peer"]))},Skylink.prototype._restartPeerConnection=function(peerId,doIceRestart,callback){var self=this;if(!self._peerConnections[peerId])return void Log.error(self._debugOptions.instanceId,[peerId,null,null,"Peer does not have an existing connection. Unable to restart"]);var pc=self._peerConnections[peerId],agent=(self.getPeerInfo(peerId)||{}).agent||{};if(self._isLowerThanVersion(agent.SMProtocolVersion||"","0.1.2")){var notSupportedError=new Error("Failed restarting with other agents connecting from other SDKs as re-negotiation is not supported by other SDKs");return Log.error(self._debugOptions.instanceId,[peerId,"RTCPeerConnection",null,"Ignoring restart request as agent's SDK does not support it"],notSupportedError),void("function"==typeof callback&&(Log.debug(self._debugOptions.instanceId,[peerId,"RTCPeerConnection",null,"Firing restart failure callback"]),callback(notSupportedError)))}if(pc.signalingState===self.PEER_CONNECTION_STATE.STABLE&&self._peerConnections[peerId]){Log.log(self._debugOptions.instanceId,[peerId,null,null,"Sending restart message to signaling server"]);var restartMsg={type:self._SIG_MESSAGE_TYPE.RESTART,mid:self._user.sid,rid:self._room.id,agent:window.webrtcDetectedBrowser,version:(window.webrtcDetectedVersion||0).toString(),os:window.navigator.platform,userInfo:self._getUserInfo(),target:peerId,weight:self._peerPriorityWeight,receiveOnly:self.getPeerInfo().config.receiveOnly,enableIceTrickle:self._enableIceTrickle,enableDataChannel:self._enableDataChannel,enableIceRestart:self._enableIceRestart,doIceRestart:doIceRestart===!0&&self._enableIceRestart&&self._peerInformations[peerId]&&self._peerInformations[peerId].config.enableIceRestart,isRestartResend:!1,temasysPluginVersion:AdapterJS.WebRTCPlugin.plugin?AdapterJS.WebRTCPlugin.plugin.VERSION:null,SMProtocolVersion:self.SM_PROTOCOL_VERSION,DTProtocolVersion:self.DT_PROTOCOL_VERSION};self._publishOnly&&(restartMsg.publishOnly={type:self._streams.screenshare&&self._streams.screenshare.stream?"screenshare":"video"}),self._parentId&&(restartMsg.parentId=self._parentId),self._peerEndOfCandidatesCounter[peerId]=self._peerEndOfCandidatesCounter[peerId]||{},self._peerEndOfCandidatesCounter[peerId].len=0,self._sendChannelMessage(restartMsg),self._trigger("peerRestart",peerId,self.getPeerInfo(peerId),!0,doIceRestart===!0),"function"==typeof callback&&(Log.debug(self._debugOptions.instanceId,[peerId,"RTCPeerConnection",null,"Firing restart callback"]),callback(null))}else if(pc.signalingState===self.PEER_CONNECTION_STATE.HAVE_LOCAL_OFFER){var hasLocalDescription=pc.localDescription&&pc.localDescription.sdp;if(hasLocalDescription)self._sendChannelMessage({type:pc.localDescription.type,sdp:pc.localDescription.sdp,mid:self._user.sid,target:peerId,rid:self._room.id,restart:!0});else{var noLocalDescriptionError="Failed re-sending localDescription as there is no localDescription set to connection. There could be a handshaking step error";Log.error(self._debugOptions.instanceId,[peerId,"RTCPeerConnection",null,noLocalDescriptionError],{localDescription:pc.localDescription,remoteDescription:pc.remoteDescription}),"function"==typeof callback&&(Log.debug(self._debugOptions.instanceId,[peerId,"RTCPeerConnection",null,"Firing restart failure callback"]),callback(new Error(noLocalDescriptionError)))}}else{var unableToRestartError="Failed restarting as peer connection state is "+pc.signalingState;Log.error(self._debugOptions.instanceId,[peerId,"RTCPeerConnection",null,unableToRestartError]),"function"==typeof callback&&(Log.debug(self._debugOptions.instanceId,[peerId,"RTCPeerConnection",null,"Firing restart failure callback"]),callback(new Error(unableToRestartError)))}},Skylink.prototype._removePeer=function(peerId){if(!this._peerConnections[peerId]&&!this._peerInformations[peerId])return void Log.debug(this._debugOptions.instanceId,[peerId,"RTCPeerConnection",null,"Dropping the hangup from Peer as not connected to Peer at all."]);var peerInfo=UtilsFactory.clone(this.getPeerInfo(peerId))||{userData:"",settings:{},mediaStatus:{},agent:{},config:{},room:UtilsFactory.clone(this._selectedRoom)};"MCU"!==peerId?this._trigger("peerLeft",peerId,peerInfo,!1):(this._hasMCU=!1,Log.log(this._debugOptions.instanceId,[peerId,null,null,"MCU has stopped listening and left"]),this._trigger("serverPeerLeft",peerId,this.SERVER_PEER_TYPE.MCU)),this._peerConnections[peerId]&&(this._peerConnections[peerId].signalingState!==this.PEER_CONNECTION_STATE.CLOSED&&this._peerConnections[peerId].close(),"MCU"!==peerId&&this._handleEndedStreams(peerId),delete this._peerConnections[peerId]),this._peerInformations[peerId]&&delete this._peerInformations[peerId],this._peerMessagesStamps[peerId]&&delete this._peerMessagesStamps[peerId],this._streamsSession[peerId]&&delete this._streamsSession[peerId],this._peerEndOfCandidatesCounter[peerId]&&delete this._peerEndOfCandidatesCounter[peerId],this._sdpSessions[peerId]&&delete this._sdpSessions[peerId],this._dataChannels[peerId]&&this._closeDataChannel(peerId),Log.log(this._debugOptions.instanceId,[peerId,null,null,"Successfully removed peer"])},Skylink.prototype._createPeerConnection=function(targetMid,isScreenSharing){var pc,self=this;if(self._inRoom&&self._room&&self._room.connection&&self._room.connection.peerConfig&&Array.isArray(self._room.connection.peerConfig.iceServers)){try{pc=new RTCPeerConnection({iceServers:self._room.connection.peerConfig.iceServers,iceTransportPolicy:self._filterCandidatesType.host&&self._filterCandidatesType.srflx&&!self._filterCandidatesType.relay?"relay":"all",bundlePolicy:"max-bundle",rtcpMuxPolicy:"require"},{optional:[{DtlsSrtpKeyAgreement:!0},{googIPv6:!0}]}),Log.info(self._debugOptions.instanceId,[targetMid,null,null,"Created peer connection"]),Log.debug(self._debugOptions.instanceId,[targetMid,null,null,"Peer connection config:"],self._room.connection.peerConfig),Log.debug(self._debugOptions.instanceId,[targetMid,null,null,"Peer connection constraints:"],self._room.connection.peerConstraints)}catch(error){return Log.error(self._debugOptions.instanceId,[targetMid,null,null,"Failed creating peer connection:"],error),null}return pc.setOffer="",pc.setAnswer="",pc.hasStream=!1,pc.hasScreen=!!isScreenSharing,pc.hasMainChannel=!1,pc.firefoxStreamId="",pc.processingLocalSDP=!1,pc.processingRemoteSDP=!1,pc.gathered=!1,pc.gathering=!1,self._gatheredCandidates[targetMid]={sending:{host:[],srflx:[],relay:[]},receiving:{host:[],srflx:[],relay:[]}},self._streamsSession[targetMid]=self._streamsSession[targetMid]||{},self._peerEndOfCandidatesCounter[targetMid]=self._peerEndOfCandidatesCounter[targetMid]||{},self._sdpSessions[targetMid]={local:{},remote:{}},self._dataChannels[targetMid]={},pc.ondatachannel=function(event){var dc=event.channel||event;if(Log.debug(self._debugOptions.instanceId,[targetMid,"RTCDataChannel",dc.label,"Received datachannel ->"],dc),self._enableDataChannel&&self._peerInformations[targetMid]&&self._peerInformations[targetMid].config.enableDataChannel){var channelType=self.DATA_CHANNEL_TYPE.DATA,channelKey=dc.label;pc.hasMainChannel||(channelType=self.DATA_CHANNEL_TYPE.MESSAGING,channelKey="main",pc.hasMainChannel=!0),self._createDataChannel(targetMid,dc)}else Log.error(self._debugOptions.instanceId,[targetMid,"RTCDataChannel",dc.label,"Not adding datachannel as enable datachannel is set to false"])},pc.onaddstream=function(event){if(self._peerConnections[targetMid]){var stream=event.stream||event,streamId=stream.id||stream.label;if("MCU"===targetMid)return void Log.error(self._debugOptions.instanceId,[targetMid,"MediaStream",streamId,"Ignoring received remote stream from MCU ->"],stream);if(!self._sdpSettings.direction.audio.receive&&!self._sdpSettings.direction.video.receive)return void Log.error(self._debugOptions.instanceId,[targetMid,"MediaStream",streamId,"Ignoring received empty remote stream ->"],stream);if(!self._hasMCU&&"firefox"===window.webrtcDetectedBrowser&&pc.getRemoteStreams().length>1&&pc.remoteDescription&&pc.remoteDescription.sdp&&pc.remoteDescription.sdp.indexOf(" msid:"+streamId+" ")===-1)return void Log.error(self._debugOptions.instanceId,[targetMid,"MediaStream",streamId,"Ignoring received empty remote stream ->"],stream);var peerSettings=UtilsFactory.clone(self.getPeerInfo(targetMid).settings),hasScreenshare=peerSettings.video&&"object"==typeof peerSettings.video&&!!peerSettings.video.screenshare;pc.hasStream=!0,pc.hasScreen=!!hasScreenshare,self._streamsSession[targetMid][streamId]=peerSettings,self._onRemoteStreamAdded(targetMid,stream,!!hasScreenshare)}},pc.onicecandidate=function(event){self._onIceCandidate(targetMid,event.candidate||event)},pc.oniceconnectionstatechange=function(evt){var iceConnectionState=pc.iceConnectionState;Log.debug(self._debugOptions.instanceId,[targetMid,"RTCIceConnectionState",null,"Ice connection state changed ->"],iceConnectionState),"edge"===window.webrtcDetectedBrowser&&("connecting"===iceConnectionState?iceConnectionState=self.ICE_CONNECTION_STATE.CHECKING:"new"===iceConnectionState&&(iceConnectionState=self.ICE_CONNECTION_STATE.FAILED)),self._trigger("iceConnectionState",iceConnectionState,targetMid),pc.iceConnectionState===self.ICE_CONNECTION_STATE.FAILED&&self._enableIceTrickle&&self._trigger("iceConnectionState",self.ICE_CONNECTION_STATE.TRICKLE_FAILED,targetMid)},pc.onsignalingstatechange=function(){Log.debug(self._debugOptions.instanceId,[targetMid,"RTCSignalingState",null,"Peer connection state changed ->"],pc.signalingState),self._trigger("peerConnectionState",pc.signalingState,targetMid)},pc.onicegatheringstatechange=function(){Log.log(self._debugOptions.instanceId,[targetMid,"RTCIceGatheringState",null,"Ice gathering state changed ->"],pc.iceGatheringState),self._trigger("candidateGenerationState",pc.iceGatheringState,targetMid)},"firefox"===window.webrtcDetectedBrowser&&(pc.removeStream=function(stream){for(var senders=pc.getSenders(),s=0;s<senders.length;s++)for(var tracks=stream.getTracks(),t=0;t<tracks.length;t++)tracks[t]===senders[s].track&&pc.removeTrack(senders[s])}),pc}},Skylink.prototype._restartMCUConnection=function(callback,doIceRestart){for(var self=this,listOfPeers=Object.keys(self._peerConnections),listOfPeerRestartErrors={},sendRestartMsgFn=function(peerId){var restartMsg={type:self._SIG_MESSAGE_TYPE.RESTART,mid:self._user.sid,rid:self._room.id,agent:window.webrtcDetectedBrowser,version:(window.webrtcDetectedVersion||0).toString(),os:window.navigator.platform,userInfo:self._getUserInfo(),target:peerId,weight:self._peerPriorityWeight,receiveOnly:self.getPeerInfo().config.receiveOnly,enableIceTrickle:self._enableIceTrickle,enableDataChannel:self._enableDataChannel,enableIceRestart:self._enableIceRestart,doIceRestart:self._mcuUseRenegoRestart&&doIceRestart===!0&&self._enableIceRestart&&self._peerInformations[peerId]&&self._peerInformations[peerId].config.enableIceRestart,isRestartResend:!1,temasysPluginVersion:AdapterJS.WebRTCPlugin.plugin?AdapterJS.WebRTCPlugin.plugin.VERSION:null,SMProtocolVersion:self.SM_PROTOCOL_VERSION,DTProtocolVersion:self.DT_PROTOCOL_VERSION};self._publishOnly&&(restartMsg.publishOnly={type:self._streams.screenshare&&self._streams.screenshare.stream?"screenshare":"video"}),self._parentId&&(restartMsg.parentId=self._parentId),Log.log(self._debugOptions.instanceId,[peerId,"RTCPeerConnection",null,"Sending restart message to signaling server ->"],restartMsg),self._sendChannelMessage(restartMsg)},i=0;i<listOfPeers.length;i++)if(self._peerConnections[listOfPeers[i]])"MCU"!==listOfPeers[i]&&(self._trigger("peerRestart",listOfPeers[i],self.getPeerInfo(listOfPeers[i]),!0,!1),self._mcuUseRenegoRestart||sendRestartMsgFn(listOfPeers[i]));else{var error="Peer connection with peer does not exists. Unable to restart";Log.error(self._debugOptions.instanceId,[listOfPeers[i],"PeerConnection",null,error]),listOfPeerRestartErrors[listOfPeers[i]]=new Error(error)}if(self._trigger("serverPeerRestart","MCU",self.SERVER_PEER_TYPE.MCU),self._mcuUseRenegoRestart)self._peerEndOfCandidatesCounter.MCU=self._peerEndOfCandidatesCounter.MCU||{},self._peerEndOfCandidatesCounter.MCU.len=0,sendRestartMsgFn("MCU");else{var peerJoinedFn=function(peerId,peerInfo,isSelf){Log.log(self._debugOptions.instanceId,[null,"PeerConnection",null,"Invoked all peers to restart with MCU. Firing callback"]),"function"==typeof callback&&(Object.keys(listOfPeerRestartErrors).length>0?callback({refreshErrors:listOfPeerRestartErrors,listOfPeers:listOfPeers},null):callback(null,{listOfPeers:listOfPeers}))};self.once("peerJoined",peerJoinedFn,function(peerId,peerInfo,isSelf){return isSelf}),self.leaveRoom(!1,function(error,success){if(error){if("function"==typeof callback){for(var i=0;i<listOfPeers.length;i++)listOfPeerRestartErrors[listOfPeers[i]]=error;callback({refreshErrors:listOfPeerRestartErrors,listOfPeers:listOfPeers},null)}}else self.joinRoom(self._selectedRoom)})}},Skylink.prototype._parseConnectionStats=function(prevStats,stats,prop){var nTime=stats.timestamp,oTime=prevStats.timestamp,nVal=parseFloat(stats[prop]||"0",10),oVal=parseFloat(prevStats[prop]||"0",10);return new Date(nTime).getTime()===new Date(oTime).getTime()?nVal:parseFloat(((nVal-oVal)/(nTime-oTime)*1e3).toFixed(3)||"0",10)},Skylink.prototype._signalingEndOfCandidates=function(targetMid){var self=this;if(self._peerEndOfCandidatesCounter[targetMid]&&self._peerConnections[targetMid].remoteDescription&&self._peerConnections[targetMid].remoteDescription.sdp&&"number"==typeof self._peerEndOfCandidatesCounter[targetMid].expectedLen&&self._peerEndOfCandidatesCounter[targetMid].len>=self._peerEndOfCandidatesCounter[targetMid].expectedLen&&(!self._peerCandidatesQueue[targetMid]||0===self._peerCandidatesQueue[targetMid].length)&&!self._peerEndOfCandidatesCounter[targetMid].hasSet){
Log.debug(self._debugOptions.instanceId,[targetMid,"RTCPeerConnection",null,"Signaling of end-of-candidates remote ICE gathering."]),self._peerEndOfCandidatesCounter[targetMid].hasSet=!0;try{if("edge"===window.webrtcDetectedBrowser){for(var mLineCounter=-1,addedMids=[],sdpLines=self._peerConnections[targetMid].remoteDescription.sdp.split("\r\n"),i=0;i<sdpLines.length;i++)if(0===sdpLines[i].indexOf("m="))mLineCounter++;else if(0===sdpLines[i].indexOf("a=mid:")){var mid=sdpLines[i].split("a=mid:")[1]||"";mid&&addedMids.indexOf(mid)===-1&&(addedMids.push(mid),self._addIceCandidate(targetMid,"endofcan-"+(new Date).getTime(),new RTCIceCandidate({sdpMid:mid,sdpMLineIndex:mLineCounter,candidate:"candidate:1 1 udp 1 0.0.0.0 9 typ endOfCandidates"})))}}else self._peerConnections[targetMid].addIceCandidate(null);self._gatheredCandidates[targetMid]&&self._trigger("candidatesGathered",targetMid,{expected:self._peerEndOfCandidatesCounter[targetMid].expectedLen||0,received:self._peerEndOfCandidatesCounter[targetMid].len||0,processed:self._gatheredCandidates[targetMid].receiving.srflx.length+self._gatheredCandidates[targetMid].receiving.relay.length+self._gatheredCandidates[targetMid].receiving.host.length})}catch(error){Log.error(self._debugOptions.instanceId,[targetMid,"RTCPeerConnection",null,"Failed signaling end-of-candidates ->"],error)}}},Skylink.prototype._getUserInfo=function(peerId){var userInfo=UtilsFactory.clone(this.getPeerInfo()),peerInfo=UtilsFactory.clone(this.getPeerInfo(peerId));return userInfo.settings.video&&"object"==typeof userInfo.settings.video&&(userInfo.settings.video.customSettings={},userInfo.settings.video.frameRate&&"object"==typeof userInfo.settings.video.frameRate&&(userInfo.settings.video.customSettings.frameRate=UtilsFactory.clone(userInfo.settings.video.frameRate),userInfo.settings.video.frameRate=-1),userInfo.settings.video.facingMode&&"object"==typeof userInfo.settings.video.facingMode&&(userInfo.settings.video.customSettings.facingMode=UtilsFactory.clone(userInfo.settings.video.facingMode),userInfo.settings.video.facingMode="-1"),userInfo.settings.video.resolution&&"object"==typeof userInfo.settings.video.resolution&&(userInfo.settings.video.resolution.width&&"object"==typeof userInfo.settings.video.resolution.width&&(userInfo.settings.video.customSettings.width=UtilsFactory.clone(userInfo.settings.video.width),userInfo.settings.video.resolution.width=-1),userInfo.settings.video.resolution.height&&"object"==typeof userInfo.settings.video.resolution.height&&(userInfo.settings.video.customSettings.height=UtilsFactory.clone(userInfo.settings.video.height),userInfo.settings.video.resolution.height=-1))),userInfo.settings.bandwidth&&(userInfo.settings.maxBandwidth=UtilsFactory.clone(userInfo.settings.bandwidth),delete userInfo.settings.bandwidth),(peerId?"edge"!==window.webrtcDetectedBrowser&&"edge"===peerInfo.agent.name?["IE","safari"].indexOf(window.webrtcDetectedBrowser)>-1&&!this._currentCodecSupport.video.h264:"edge"===window.webrtcDetectedBrowser&&"edge"!==peerInfo.agent.name&&!this._currentCodecSupport.video.h264:"edge"===window.webrtcDetectedBrowser&&!this._currentCodecSupport.video.h264)&&(userInfo.settings.video=!1,userInfo.mediaStatus.videoMuted=!0),delete userInfo.agent,delete userInfo.room,delete userInfo.config,delete userInfo.parentId,userInfo},Skylink.prototype._doOffer=function(targetMid,iceRestart,peerBrowser){var self=this,pc=self._peerConnections[targetMid]||self._addPeer(targetMid,peerBrowser);if(Log.log(self._debugOptions.instanceId,[targetMid,null,null,"Checking caller status"],peerBrowser),!pc)return void Log.error(self._debugOptions.instanceId,[targetMid,"RTCSessionDescription","offer","Dropping of creating of offer as connection does not exists"]);if(pc.signalingState!==self.PEER_CONNECTION_STATE.STABLE)return void Log.error(self._debugOptions.instanceId,[targetMid,"RTCSessionDescription","offer",'Dropping of creating of offer as signalingState is not "'+self.PEER_CONNECTION_STATE.STABLE+'" ->'],pc.signalingState);var peerAgent=((self._peerInformations[targetMid]||{}).agent||{}).name||"",doIceRestart=!!((self._peerInformations[targetMid]||{}).config||{}).enableIceRestart&&iceRestart&&self._enableIceRestart,offerToReceiveAudio=!(!self._sdpSettings.connection.audio&&"MCU"!==targetMid),offerToReceiveVideo=!(!self._sdpSettings.connection.video&&"MCU"!==targetMid||("edge"===window.webrtcDetectedBrowser&&"edge"!==peerAgent||["IE","safari"].indexOf(window.webrtcDetectedBrowser)>-1&&"edge"===peerAgent)&&!self._currentCodecSupport.video.h264),offerConstraints={offerToReceiveAudio:offerToReceiveAudio,offerToReceiveVideo:offerToReceiveVideo,iceRestart:doIceRestart};peerBrowser.os=peerBrowser.os||"",["IE","safari"].indexOf(window.webrtcDetectedBrowser)>-1&&(offerConstraints={mandatory:{OfferToReceiveAudio:offerToReceiveAudio,OfferToReceiveVideo:offerToReceiveVideo,iceRestart:doIceRestart}}),self._hasMCU&&"MCU"!==targetMid||self._addLocalMediaStreams(targetMid),self._enableDataChannel&&self._peerInformations[targetMid]&&self._peerInformations[targetMid].config.enableDataChannel&&(self._sdpSettings.connection.data||"MCU"===targetMid)&&(self._dataChannels[targetMid]&&self._dataChannels[targetMid].main||(self._createDataChannel(targetMid),self._peerConnections[targetMid].hasMainChannel=!0)),Log.debug(self._debugOptions.instanceId,[targetMid,null,null,"Creating offer with config:"],offerConstraints),pc.endOfCandidates=!1,pc.createOffer(function(offer){Log.debug(self._debugOptions.instanceId,[targetMid,null,null,"Created offer"],offer),self._setLocalAndSendMessage(targetMid,offer)},function(error){self._trigger("handshakeProgress",self.HANDSHAKE_PROGRESS.ERROR,targetMid,error),Log.error(self._debugOptions.instanceId,[targetMid,null,null,"Failed creating an offer:"],error)},offerConstraints)},Skylink.prototype._doAnswer=function(targetMid){var self=this;Log.log(self._debugOptions.instanceId,[targetMid,null,null,"Creating answer with config:"],self._room.connection.sdpConstraints);var pc=self._peerConnections[targetMid];return pc?pc.signalingState!==self.PEER_CONNECTION_STATE.HAVE_REMOTE_OFFER?void Log.error(self._debugOptions.instanceId,[targetMid,"RTCSessionDescription","answer",'Dropping of creating of answer as signalingState is not "'+self.PEER_CONNECTION_STATE.HAVE_REMOTE_OFFER+'" ->'],pc.signalingState):(self._hasMCU&&"MCU"!==targetMid||self._addLocalMediaStreams(targetMid),void pc.createAnswer(function(answer){Log.debug(self._debugOptions.instanceId,[targetMid,null,null,"Created answer"],answer),self._setLocalAndSendMessage(targetMid,answer)},function(error){Log.error(self._debugOptions.instanceId,[targetMid,null,null,"Failed creating an answer:"],error),self._trigger("handshakeProgress",self.HANDSHAKE_PROGRESS.ERROR,targetMid,error)})):void Log.error(self._debugOptions.instanceId,[targetMid,"RTCSessionDescription","answer","Dropping of creating of answer as connection does not exists"])},Skylink.prototype._setLocalAndSendMessage=function(targetMid,sessionDescription){var self=this,pc=self._peerConnections[targetMid];return sessionDescription&&sessionDescription.sdp?pc?sessionDescription.type===self.HANDSHAKE_PROGRESS.OFFER&&pc.signalingState!==self.PEER_CONNECTION_STATE.STABLE?void Log.error(self._debugOptions.instanceId,[targetMid,"RTCSessionDescription",sessionDescription.type,'Local session description will not be set as signaling state is "'+pc.signalingState+'" ->'],sessionDescription):sessionDescription.type===self.HANDSHAKE_PROGRESS.ANSWER&&pc.signalingState!==self.PEER_CONNECTION_STATE.HAVE_REMOTE_OFFER?void Log.error(self._debugOptions.instanceId,[targetMid,"RTCSessionDescription",sessionDescription.type,'Local session description will not be set as signaling state is "'+pc.signalingState+'" ->'],sessionDescription):pc.processingLocalSDP?void Log.error(self._debugOptions.instanceId,[targetMid,"RTCSessionDescription",sessionDescription.type,"Local session description will not be set as another is being processed ->"],sessionDescription):(pc.processingLocalSDP=!0,sessionDescription.sdp=self._removeSDPFirefoxH264Pref(targetMid,sessionDescription),sessionDescription.sdp=self._removeSDPH264VP9AptRtxForOlderPlugin(targetMid,sessionDescription),sessionDescription.sdp=self._removeSDPCodecs(targetMid,sessionDescription),sessionDescription.sdp=self._handleSDPConnectionSettings(targetMid,sessionDescription,"local"),sessionDescription.sdp=self._removeSDPREMBPackets(targetMid,sessionDescription),Log.log(self._debugOptions.instanceId,[targetMid,"RTCSessionDescription",sessionDescription.type,"Local session description updated ->"],sessionDescription.sdp),void pc.setLocalDescription(sessionDescription,function(){return Log.debug(self._debugOptions.instanceId,[targetMid,"RTCSessionDescription",sessionDescription.type,"Local session description has been set ->"],sessionDescription),pc.processingLocalSDP=!1,self._trigger("handshakeProgress",sessionDescription.type,targetMid),sessionDescription.type===self.HANDSHAKE_PROGRESS.ANSWER?pc.setAnswer="local":pc.setOffer="local",self._enableIceTrickle||pc.gathered?void self._sendChannelMessage({type:sessionDescription.type,sdp:self._addSDPMediaStreamTrackIDs(targetMid,sessionDescription),mid:self._user.sid,target:targetMid,rid:self._room.id,userInfo:self._getUserInfo()}):void Log.log(self._debugOptions.instanceId,[targetMid,"RTCSessionDescription",sessionDescription.type,"Local session description sending is halted to complete ICE gathering."])},function(error){Log.error(self._debugOptions.instanceId,[targetMid,"RTCSessionDescription",sessionDescription.type,"Local description failed setting ->"],error),pc.processingLocalSDP=!1,self._trigger("handshakeProgress",self.HANDSHAKE_PROGRESS.ERROR,targetMid,error)})):void Log.error(self._debugOptions.instanceId,[targetMid,"RTCSessionDescription",sessionDescription.type,"Local session description will not be set as connection does not exists ->"],sessionDescription):void Log.error(self._debugOptions.instanceId,[targetMid,"RTCSessionDescription",null,"Local session description is undefined ->"],sessionDescription)},Skylink.prototype._waitForOpenChannel=function(mediaOptions,callback){var self=this;self._socketCurrentReconnectionAttempt=0,self._wait(function(){self._condition("channelOpen",function(){if(mediaOptions=mediaOptions||{},self._userData=mediaOptions.userData||self._userData||"",self._streamsBandwidthSettings={googleX:{},bAS:{}},self._publishOnly=!1,self._sdpSettings={connection:{audio:!0,video:!0,data:!0},direction:{audio:{send:!0,receive:!0},video:{send:!0,receive:!0}}},mediaOptions.bandwidth&&("number"==typeof mediaOptions.bandwidth.audio&&(self._streamsBandwidthSettings.bAS.audio=mediaOptions.bandwidth.audio),"number"==typeof mediaOptions.bandwidth.video&&(self._streamsBandwidthSettings.bAS.video=mediaOptions.bandwidth.video),"number"==typeof mediaOptions.bandwidth.data&&(self._streamsBandwidthSettings.bAS.data=mediaOptions.bandwidth.data)),mediaOptions.googleXBandwidth&&("number"==typeof mediaOptions.googleXBandwidth.min&&(self._streamsBandwidthSettings.googleX.min=mediaOptions.googleXBandwidth.min),"number"==typeof mediaOptions.googleXBandwidth.max&&(self._streamsBandwidthSettings.googleX.max=mediaOptions.googleXBandwidth.max)),mediaOptions.sdpSettings&&(mediaOptions.sdpSettings.direction&&(mediaOptions.sdpSettings.direction.audio&&(self._sdpSettings.direction.audio.receive="boolean"!=typeof mediaOptions.sdpSettings.direction.audio.receive||mediaOptions.sdpSettings.direction.audio.receive,self._sdpSettings.direction.audio.send="boolean"!=typeof mediaOptions.sdpSettings.direction.audio.send||mediaOptions.sdpSettings.direction.audio.send),mediaOptions.sdpSettings.direction.video&&(self._sdpSettings.direction.video.receive="boolean"!=typeof mediaOptions.sdpSettings.direction.video.receive||mediaOptions.sdpSettings.direction.video.receive,self._sdpSettings.direction.video.send="boolean"!=typeof mediaOptions.sdpSettings.direction.video.send||mediaOptions.sdpSettings.direction.video.send)),mediaOptions.sdpSettings.connection&&(self._sdpSettings.connection.audio="boolean"!=typeof mediaOptions.sdpSettings.connection.audio||mediaOptions.sdpSettings.connection.audio,self._sdpSettings.connection.video="boolean"!=typeof mediaOptions.sdpSettings.connection.video||mediaOptions.sdpSettings.connection.video,self._sdpSettings.connection.data="boolean"!=typeof mediaOptions.sdpSettings.connection.data||mediaOptions.sdpSettings.connection.data)),mediaOptions.publishOnly&&(self._sdpSettings.direction.audio.send=!0,self._sdpSettings.direction.audio.receive=!1,self._sdpSettings.direction.video.send=!0,self._sdpSettings.direction.video.receive=!1,self._publishOnly=!0,"object"==typeof mediaOptions.publishOnly&&mediaOptions.publishOnly.parentId&&"string"==typeof mediaOptions.publishOnly.parentId&&(self._parentId=mediaOptions.publishOnly.parentId)),mediaOptions.parentId&&(self._parentId=mediaOptions.parentId),mediaOptions.manualGetUserMedia===!0){self._trigger("mediaAccessRequired");var current50Block=0,mediaAccessRequiredFailure=!1;return void self._wait(function(){mediaAccessRequiredFailure===!0?self._onUserMediaError(new Error("Waiting for stream timeout"),!1,!1):callback(null,self._streams.userMedia.stream)},function(){return current50Block+=1,600===current50Block?(mediaAccessRequiredFailure=!0,!0):!(!self._streams.userMedia||!self._streams.userMedia.stream)||void 0},50)}return mediaOptions.audio||mediaOptions.video?void self.getUserMedia({useExactConstraints:!!mediaOptions.useExactConstraints,audio:mediaOptions.audio,video:mediaOptions.video},function(error,success){error?callback(error,null):callback(null,success)}):void callback(null,null)},function(){return self._channelOpen||self._openChannel(),self._channelOpen},function(state){return!0})},function(){return self._readyState===self.READY_STATE_CHANGE.COMPLETED})},Skylink.prototype._requestServerInfo=function(method,url,callback,params){var self=this,useXDomainRequest="function"==typeof window.XDomainRequest||"object"==typeof window.XDomainRequest;self._socketUseXDR=useXDomainRequest;var xhr;url=self._forceSSL?"https:"+url:url,useXDomainRequest?(Log.debug(self._debugOptions.instanceId,[null,"XMLHttpRequest",method,"Using XDomainRequest. XMLHttpRequest is now XDomainRequest"],{agent:window.webrtcDetectedBrowser,version:window.webrtcDetectedVersion}),xhr=new XDomainRequest,xhr.setContentType=function(contentType){xhr.contentType=contentType}):(Log.debug(self._debugOptions.instanceId,[null,"XMLHttpRequest",method,"Using XMLHttpRequest"],{agent:window.webrtcDetectedBrowser,version:window.webrtcDetectedVersion}),xhr=new window.XMLHttpRequest,xhr.setContentType=function(contentType){xhr.setRequestHeader("Content-type",contentType)}),xhr.onload=function(){var response=xhr.responseText||xhr.response,status=xhr.status||200;Log.debug(self._debugOptions.instanceId,[null,"XMLHttpRequest",method,"Received sessions parameters"],JSON.parse(response||"{}")),callback(status,JSON.parse(response||"{}"))},xhr.onerror=function(error){Log.error(self._debugOptions.instanceId,[null,"XMLHttpRequest",method,"Failed retrieving information:"],{status:xhr.status}),self._readyState=-1,self._trigger("readyStateChange",self.READY_STATE_CHANGE.ERROR,{status:xhr.status||null,content:"Network error occurred. (Status: "+xhr.status+")",errorCode:self.READY_STATE_CHANGE_ERROR.XML_HTTP_REQUEST_ERROR},self._selectedRoom)},xhr.onprogress=function(){Log.debug(self._debugOptions.instanceId,[null,"XMLHttpRequest",method,"Retrieving information and config from webserver. Url:"],url),Log.debug(self._debugOptions.instanceId,[null,"XMLHttpRequest",method,"Provided parameters:"],params)},xhr.open(method,url,!0),params?(xhr.setContentType("application/json;charset=UTF-8"),xhr.send(JSON.stringify(params))):xhr.send()},Skylink.prototype._parseInfo=function(info){return Log.log(this._debugOptions.instanceId,"Parsing parameter from server",info),info.pc_constraints||info.offer_constraints?(Log.debug(this._debugOptions.instanceId,"Peer connection constraints:",info.pc_constraints),Log.debug(this._debugOptions.instanceId,"Offer constraints:",info.offer_constraints),this._key=info.cid,this._appKeyOwner=info.apiOwner,this._signalingServer=info.ipSigserver,this._signalingServerPort=null,this._isPrivileged=info.isPrivileged,this._autoIntroduce=info.autoIntroduce,this._user={uid:info.username,token:info.userCred,timeStamp:info.timeStamp,streams:[],info:{}},this._room={id:info.room_key,token:info.roomCred,startDateTime:info.start,duration:info.len,connection:{peerConstraints:JSON.parse(info.pc_constraints),peerConfig:null,offerConstraints:JSON.parse(info.offer_constraints),sdpConstraints:{mandatory:{OfferToReceiveAudio:!0,OfferToReceiveVideo:!0}},mediaConstraints:JSON.parse(info.media_constraints)}},this._socketPorts={"http:":info.httpPortList,"https:":info.httpsPortList},this._readyState=2,this._trigger("readyStateChange",this.READY_STATE_CHANGE.COMPLETED,null,this._selectedRoom),void Log.info(this._debugOptions.instanceId,"Parsed parameters from webserver. Ready for web-realtime communication")):void this._trigger("readyStateChange",this.READY_STATE_CHANGE.ERROR,{status:200,content:info.info,errorCode:info.error},self._selectedRoom)},Skylink.prototype._loadInfo=function(){var self=this,adapter=function(){try{return window.AdapterJS||AdapterJS}catch(error){return!1}}();if(!adapter||"function"!=typeof adapter.webRTCReady){var noAdapterErrorMsg="AdapterJS dependency is not loaded or incorrect AdapterJS dependency is used";return void self._trigger("readyStateChange",self.READY_STATE_CHANGE.ERROR,{status:null,content:noAdapterErrorMsg,errorCode:self.READY_STATE_CHANGE_ERROR.ADAPTER_NO_LOADED},self._selectedRoom)}return window.io?window.XMLHttpRequest?self._path?void adapter.webRTCReady(function(){return self._isUsingPlugin=!!adapter.WebRTCPlugin.plugin&&!!adapter.WebRTCPlugin.plugin.VERSION,window.RTCPeerConnection?void self._getCodecsSupport(function(error){return error?(Log.error(self._debugOptions.instanceId,error),self._readyState=-1,void self._trigger("readyStateChange",self.READY_STATE_CHANGE.ERROR,{status:null,content:error.message||error.toString(),errorCode:self.READY_STATE_CHANGE_ERROR.PARSE_CODECS},self._selectedRoom)):0===Object.keys(self._currentCodecSupport.audio).length&&0===Object.keys(self._currentCodecSupport.video).length?(Log.error(self._debugOptions.instanceId,"No audio/video codecs available to start connection."),self._readyState=-1,void self._trigger("readyStateChange",self.READY_STATE_CHANGE.ERROR,{status:null,content:"No audio/video codecs available to start connection",errorCode:self.READY_STATE_CHANGE_ERROR.PARSE_CODECS},self._selectedRoom)):(self._readyState=1,self._trigger("readyStateChange",self.READY_STATE_CHANGE.LOADING,null,self._selectedRoom),void self._requestServerInfo("GET",self._path,function(status,response){if(200!==status){var errorMessage="XMLHttpRequest status not OK\nStatus was: "+status;return self._readyState=0,void self._trigger("readyStateChange",self.READY_STATE_CHANGE.ERROR,{status:status,content:response?response.info||errorMessage:errorMessage,errorCode:response.error||self.READY_STATE_CHANGE_ERROR.INVALID_XMLHTTPREQUEST_STATUS},self._selectedRoom)}self._parseInfo(response)}))}):(Log.error(self._debugOptions.instanceId,"WebRTC not supported. Please upgrade your browser"),self._readyState=-1,void self._trigger("readyStateChange",self.READY_STATE_CHANGE.ERROR,{status:null,content:"WebRTC not available",errorCode:self.READY_STATE_CHANGE_ERROR.NO_WEBRTC_SUPPORT},self._selectedRoom))}):(Log.error(self._debugOptions.instanceId,"Skylink is not initialised. Please call init() first"),self._readyState=-1,void self._trigger("readyStateChange",self.READY_STATE_CHANGE.ERROR,{status:null,content:"No API Path is found",errorCode:self.READY_STATE_CHANGE_ERROR.NO_PATH},self._selectedRoom)):(Log.error(self._debugOptions.instanceId,"XMLHttpRequest not supported. Please upgrade your browser"),self._readyState=-1,void self._trigger("readyStateChange",self.READY_STATE_CHANGE.ERROR,{status:null,content:"XMLHttpRequest not available",errorCode:self.READY_STATE_CHANGE_ERROR.NO_XMLHTTPREQUEST_SUPPORT},self._selectedRoom)):(Log.error(self._debugOptions.instanceId,"Socket.io not loaded. Please load socket.io"),self._readyState=-1,void self._trigger("readyStateChange",self.READY_STATE_CHANGE.ERROR,{status:null,content:"Socket.io not found",errorCode:self.READY_STATE_CHANGE_ERROR.NO_SOCKET_IO},self._selectedRoom))},Skylink.prototype._initSelectedRoom=function(room,callback){var self=this;if("function"==typeof room||"undefined"==typeof room)return void Log.error(self._debugOptions.instanceId,"Invalid room provided. Room:",room);var defaultRoom=self._defaultRoom,initOptions={appKey:self._appKey,roomServer:self._roomServer,defaultRoom:room,enableDataChannel:self._enableDataChannel,enableIceTrickle:self._enableIceTrickle,enableTURNServer:self._enableTURN,enableSTUNServer:self._enableSTUN,TURNServerTransport:self._TURNTransport,audioFallback:self._audioFallback,forceSSL:self._forceSSL,socketTimeout:self._socketTimeout,forceTURNSSL:self._forceTURNSSL,audioCodec:self._selectedAudioCodec,videoCodec:self._selectedVideoCodec,forceTURN:self._forceTURN,usePublicSTUN:self._usePublicSTUN,disableVideoFecCodecs:self._disableVideoFecCodecs,disableComfortNoiseCodec:self._disableComfortNoiseCodec,disableREMB:self._disableREMB,filterCandidatesType:self._filterCandidatesType,throttleIntervals:self._throttlingTimeouts,throttleShouldThrowError:self._throttlingShouldThrowError,mcuUseRenegoRestart:self._mcuUseRenegoRestart,iceServer:self._turnServer,socketServer:self._socketServer};self._roomCredentials&&(initOptions.credentials={credentials:self._roomCredentials,duration:self._roomDuration,startDateTime:self._roomStart}),self.init(initOptions,function(error,success){self._defaultRoom=defaultRoom,error?callback(error,null):callback(null,success)})},Skylink.prototype._trigger=function(eventName){var args=Array.prototype.slice.call(arguments),arr=this._EVENTS[eventName],once=this._onceEvents[eventName]||null;if(args.shift(),arr)for(var i=0;i<arr.length;i++)try{if(Log.log(this._debugOptions.instanceId,[null,"Event",eventName,"Event is fired"]),arr[i].apply(this,args)===!1)break}catch(error){throw Log.error(this._debugOptions.instanceId,[null,"Event",eventName,"Exception occurred in event:"],error),error}if(once)for(var j=0;j<once.length;j++)if(once[j][1].apply(this,args)===!0){if(Log.log(this._debugOptions.instanceId,[null,"Event",eventName,"Condition is met. Firing event"]),once[j][0].apply(this,args)===!1)break;once[j]&&!once[j][2]&&(Log.log(this._debugOptions.instanceId,[null,"Event",eventName,"Removing event after firing once"]),once.splice(j,1),j--)}else Log.log(this._debugOptions.instanceId,[null,"Event",eventName,"Condition is still not met. Holding event from being fired"]);Log.log(this._debugOptions.instanceId,[null,"Event",eventName,"Event is triggered"])},Skylink.prototype._condition=function(eventName,callback,checkFirst,condition,fireAlways){if("boolean"==typeof condition&&(fireAlways=condition,condition=null),"function"==typeof callback&&"function"==typeof checkFirst){if(checkFirst())return Log.log(this._debugOptions.instanceId,[null,"Event",eventName,"First condition is met. Firing callback"]),void callback();Log.log(this._debugOptions.instanceId,[null,"Event",eventName,"First condition is not met. Subscribing to event"]),this.once(eventName,callback,condition,fireAlways)}else Log.error(this._debugOptions.instanceId,[null,"Event",eventName,"Provided callback or checkFirst is not a function"])},Skylink.prototype._wait=function(callback,condition,intervalTime,fireAlways){if(fireAlways="undefined"!=typeof fireAlways&&fireAlways,"function"==typeof callback&&"function"==typeof condition){if(condition())return Log.log(this._debugOptions.instanceId,[null,"Event",null,"Condition is met. Firing callback"]),void callback();Log.log(this._debugOptions.instanceId,[null,"Event",null,"Condition is not met. Doing a check."]),intervalTime="number"==typeof intervalTime?intervalTime:50;var doWait=setInterval(function(){condition()&&(Log.log(this._debugOptions.instanceId,[null,"Event",null,"Condition is met after waiting. Firing callback"]),fireAlways||clearInterval(doWait),callback())},intervalTime)}else"function"!=typeof callback&&Log.error(this._debugOptions.instanceId,[null,"Event",null,"Provided callback is not a function"]),"function"!=typeof condition&&Log.error(this._debugOptions.instanceId,[null,"Event",null,"Provided condition is not a function"])},Skylink.prototype._throttle=function(func,prop,wait){var self=this,now=(new Date).getTime();self._timestamp[prop]&&now-self._timestamp[prop]<wait?func(!1):(func(!0),self._timestamp[prop]=now)},Skylink.prototype._sendChannelMessage=function(message){var self=this,interval=1e3,throughput=16;if(!self._channelOpen||!self._user||!self._socket)return void Log.error(self._debugOptions.instanceId,[message.target||"Server","Socket",message.type,"Dropping of message as Socket connection is not opened or is at incorrect step ->"],message);self._user.sid&&!self._peerMessagesStamps[self._user.sid]&&(self._peerMessagesStamps[self._user.sid]={userData:0,audioMuted:0,videoMuted:0});var checkStampFn=function(statusMessage){return statusMessage.type===self._SIG_MESSAGE_TYPE.UPDATE_USER?!!self._user.sid&&statusMessage.stamp>self._peerMessagesStamps[self._user.sid].userData:statusMessage.type===self._SIG_MESSAGE_TYPE.MUTE_VIDEO?!!self._user.sid&&statusMessage.stamp>self._peerMessagesStamps[self._user.sid].videoMuted:statusMessage.type!==self._SIG_MESSAGE_TYPE.MUTE_AUDIO||!!self._user.sid&&statusMessage.stamp>self._peerMessagesStamps[self._user.sid].audioMuted},setStampFn=function(statusMessage){statusMessage.type===self._SIG_MESSAGE_TYPE.UPDATE_USER?self._peerMessagesStamps[self._user.sid].userData=statusMessage.stamp:statusMessage.type===self._SIG_MESSAGE_TYPE.MUTE_VIDEO?self._peerMessagesStamps[self._user.sid].videoMuted=statusMessage.stamp:statusMessage.type===self._SIG_MESSAGE_TYPE.MUTE_AUDIO&&(self._peerMessagesStamps[self._user.sid].audioMuted=statusMessage.stamp)},setQueueFn=function(){Log.debug(self._debugOptions.instanceId,[null,"Socket",null,"Starting queue timeout"]),self._socketMessageTimeout=setTimeout(function(){return(new Date).getTime()-self._timestamp.socketMessage<=interval?(Log.debug(self._debugOptions.instanceId,[null,"Socket",null,"Restarting queue timeout"]),void setQueueFn()):void startSendingQueuedMessageFn()},interval-((new Date).getTime()-self._timestamp.socketMessage))},triggerEventFn=function(eventMessage){eventMessage.type===self._SIG_MESSAGE_TYPE.PUBLIC_MESSAGE&&self._trigger("incomingMessage",{content:eventMessage.data,isPrivate:!1,targetPeerId:null,listOfPeers:Object.keys(self._peerInformations),isDataChannel:!1,senderPeerId:self._user.sid},self._user.sid,self.getPeerInfo(),!0)},sendGroupMessageFn=function(groupMessageList){if(self._socketMessageTimeout=null,!(self._channelOpen&&self._user&&self._user.sid&&self._socket))return void Log.error(self._debugOptions.instanceId,[message.target||"Server","Socket",null,"Dropping of group messages as Socket connection is not opened or is at incorrect step ->"],groupMessageList);for(var strGroupMessageList=[],stamps={userData:0,audioMuted:0,videoMuted:0},k=0;k<groupMessageList.length;k++)checkStampFn(groupMessageList[k])&&(groupMessageList[k].type===self._SIG_MESSAGE_TYPE.UPDATE_USER&&groupMessageList[k].stamp>self._peerMessagesStamps[self._user.sid].userData&&groupMessageList[k].stamp>stamps.userData?stamps.userData=groupMessageList[k].stamp:groupMessageList[k].type===self._SIG_MESSAGE_TYPE.MUTE_AUDIO&&groupMessageList[k].stamp>self._peerMessagesStamps[self._user.sid].audioMuted&&groupMessageList[k].stamp>stamps.audioMuted?stamps.audioMuted=groupMessageList[k].stamp:groupMessageList[k].type===self._SIG_MESSAGE_TYPE.MUTE_VIDEO&&groupMessageList[k].stamp>self._peerMessagesStamps[self._user.sid].videoMuted&&groupMessageList[k].stamp>stamps.videoMuted&&(stamps.videoMuted=groupMessageList[k].stamp));for(var i=0;i<groupMessageList.length;i++)groupMessageList[i].type===self._SIG_MESSAGE_TYPE.UPDATE_USER&&groupMessageList[i].stamp<stamps.userData||groupMessageList[i].type===self._SIG_MESSAGE_TYPE.MUTE_AUDIO&&groupMessageList[i].stamp<stamps.audioMuted||groupMessageList[i].type===self._SIG_MESSAGE_TYPE.MUTE_VIDEO&&groupMessageList[i].stamp<stamps.videoMuted?(Log.error(self._debugOptions.instanceId,[message.target||"Server","Socket",groupMessageList[i],"Dropping of outdated status message ->"],UtilsFactory.clone(groupMessageList[i])),groupMessageList.splice(i,1),i--):strGroupMessageList.push(JSON.stringify(groupMessageList[i]));if(strGroupMessageList.length>0){var groupMessage={type:self._SIG_MESSAGE_TYPE.GROUP,lists:strGroupMessageList,mid:self._user.sid,rid:self._room.id};Log.debug(self._debugOptions.instanceId,[message.target||"Server","Socket",groupMessage.type,"Sending queued grouped message (max: 16 per group) ->"],UtilsFactory.clone(groupMessage)),self._socket.send(JSON.stringify(groupMessage)),self._timestamp.socketMessage=(new Date).getTime();for(var j=0;j<groupMessageList.length;j++)setStampFn(groupMessageList[j]),triggerEventFn(groupMessageList[j])}},startSendingQueuedMessageFn=function(){self._socketMessageQueue.length>0&&(self._socketMessageQueue.length<throughput?sendGroupMessageFn(self._socketMessageQueue.splice(0,self._socketMessageQueue.length)):(sendGroupMessageFn(self._socketMessageQueue.splice(0,throughput)),setQueueFn()))};if(self._groupMessageList.indexOf(message.type)>-1)if(self._timestamp.socketMessage&&(new Date).getTime()-self._timestamp.socketMessage<=interval)Log.error(self._debugOptions.instanceId,[message.target||"Server","Socket",message.type,"Queueing socket message to prevent message drop ->"],UtilsFactory.clone(message)),self._socketMessageQueue.push(message),self._socketMessageTimeout||setQueueFn();else{if(!checkStampFn(message))return void Log.error(self._debugOptions.instanceId,[message.target||"Server","Socket",message.type,"Dropping of outdated status message ->"],UtilsFactory.clone(message));self._socketMessageTimeout&&clearTimeout(self._socketMessageTimeout),Log.error(self._debugOptions.instanceId,[message.target||"Server","Socket",message.type,"Sending message ->"],UtilsFactory.clone(message)),self._socket.send(JSON.stringify(message)),setStampFn(message),triggerEventFn(message),self._timestamp.socketMessage=(new Date).getTime()}else Log.debug(self._debugOptions.instanceId,[message.target||"Server","Socket",message.type,"Sending message ->"],UtilsFactory.clone(message)),self._socket.send(JSON.stringify(message)),message.type===self._SIG_MESSAGE_TYPE.BYE&&self._inRoom&&self._user&&self._user.sid&&message.mid===self._user.sid&&(self.leaveRoom(!1),self._trigger("sessionDisconnect",self._user.sid,self.getPeerInfo()))},Skylink.prototype._createSocket=function(type){var self=this,options={forceNew:!0,reconnection:!0,timeout:self._socketTimeout,reconnectionAttempts:2,reconnectionDelayMax:5e3,reconnectionDelay:1e3,transports:["websocket"]},ports=self._socketPorts[self._signalingServerProtocol],fallbackType=null;null===self._signalingServerPort?(self._signalingServerPort=ports[0],self._socketSession.finalAttempts=0,self._socketSession.attempts=0,fallbackType=self.SOCKET_FALLBACK.NON_FALLBACK):ports.indexOf(self._signalingServerPort)===ports.length-1?"WebSocket"===type?(type="Polling",self._signalingServerPort=ports[0]):self._socketSession.finalAttempts++:self._signalingServerPort=ports[ports.indexOf(self._signalingServerPort)+1],"Polling"===type&&(options.reconnectionDelayMax=1e3,options.reconnectionAttempts=4,options.transports=["xhr-polling","jsonp-polling","polling"]);var url=self._signalingServerProtocol+"//"+(self._socketServer||self._signalingServer)+":"+self._signalingServerPort;self._socketSession.transportType=type,self._socketSession.socketOptions=options,self._socketSession.socketServer=url,
null===fallbackType&&(fallbackType="http:"===self._signalingServerProtocol?"Polling"===type?self.SOCKET_FALLBACK.LONG_POLLING:self.SOCKET_FALLBACK.FALLBACK_PORT:"Polling"===type?self.SOCKET_FALLBACK.LONG_POLLING_SSL:self.SOCKET_FALLBACK.FALLBACK_SSL_PORT,self._socketSession.attempts++,self._trigger("socketError",self.SOCKET_ERROR.RECONNECTION_ATTEMPT,null,fallbackType,UtilsFactory.clone(self._socketSession)),self._trigger("channelRetry",fallbackType,self._socketSession.attempts,UtilsFactory.clone(self._socketSession))),self._socket&&(self._socket.removeAllListeners("connect_error"),self._socket.removeAllListeners("reconnect_attempt"),self._socket.removeAllListeners("reconnect_error"),self._socket.removeAllListeners("reconnect_failed"),self._socket.removeAllListeners("connect"),self._socket.removeAllListeners("reconnect"),self._socket.removeAllListeners("error"),self._socket.removeAllListeners("disconnect"),self._socket.removeAllListeners("message"),self._socket.disconnect(),self._socket=null),self._channelOpen=!1,Log.log(self._debugOptions.instanceId,"Opening channel with signaling server url:",UtilsFactory.clone(self._socketSession)),self._socket=io.connect(url,options),self._socket.on("reconnect_attempt",function(attempt){self._socketSession.attempts++,self._trigger("channelRetry",fallbackType,self._socketSession.attempts,UtilsFactory.clone(self._socketSession))}),self._socket.on("reconnect_failed",function(){fallbackType===self.SOCKET_FALLBACK.NON_FALLBACK?self._trigger("socketError",self.SOCKET_ERROR.CONNECTION_FAILED,new Error('Failed connection with transport "'+type+'" and port '+self._signalingServerPort+"."),fallbackType,UtilsFactory.clone(self._socketSession)):self._trigger("socketError",self.SOCKET_ERROR.RECONNECTION_FAILED,new Error('Failed reconnection with transport "'+type+'" and port '+self._signalingServerPort+"."),fallbackType,UtilsFactory.clone(self._socketSession)),self._socketSession.finalAttempts<4?self._createSocket(type):self._trigger("socketError",self.SOCKET_ERROR.RECONNECTION_ABORTED,new Error("Reconnection aborted as there no more available ports, transports and final attempts left."),fallbackType,UtilsFactory.clone(self._socketSession))}),self._socket.on("connect",function(){self._channelOpen||(Log.log(self._debugOptions.instanceId,[null,"Socket",null,"Channel opened"]),self._channelOpen=!0,self._trigger("channelOpen",UtilsFactory.clone(self._socketSession)))}),self._socket.on("reconnect",function(){self._channelOpen||(Log.log(self._debugOptions.instanceId,[null,"Socket",null,"Channel opened"]),self._channelOpen=!0,self._trigger("channelOpen",UtilsFactory.clone(self._socketSession)))}),self._socket.on("error",function(error){Log.error(self._debugOptions.instanceId,[null,"Socket",null,"Exception occurred ->"],error),self._trigger("channelError",error,UtilsFactory.clone(self._socketSession))}),self._socket.on("disconnect",function(){self._channelOpen=!1,self._trigger("channelClose",UtilsFactory.clone(self._socketSession)),Log.log(self._debugOptions.instanceId,[null,"Socket",null,"Channel closed"]),self._inRoom&&self._user&&self._user.sid&&(self.leaveRoom(!1),self._trigger("sessionDisconnect",self._user.sid,self.getPeerInfo()))}),self._socket.on("message",function(messageStr){var message=JSON.parse(messageStr);if(Log.log(self._debugOptions.instanceId,[null,"Socket",null,"Received message ->"],message),message.type===self._SIG_MESSAGE_TYPE.GROUP){Log.debug(self._debugOptions.instanceId,"Bundle of "+message.lists.length+" messages");for(var i=0;i<message.lists.length;i++){var indiMessage=JSON.parse(message.lists[i]);self._processSigMessage(indiMessage),self._trigger("channelMessage",indiMessage,UtilsFactory.clone(self._socketSession))}}else self._processSigMessage(message),self._trigger("channelMessage",message,UtilsFactory.clone(self._socketSession))})},Skylink.prototype._openChannel=function(){var self=this;if(self._channelOpen)return void Log.error(self._debugOptions.instanceId,[null,"Socket",null,"Unable to instantiate a new channel connection as there is already an ongoing channel connection"]);if(self._readyState!==self.READY_STATE_CHANGE.COMPLETED)return void Log.error(self._debugOptions.instanceId,[null,"Socket",null,"Unable to instantiate a new channel connection as readyState is not ready"]);self._forceSSL?self._signalingServerProtocol="https:":self._signalingServerProtocol=window.location.protocol;var socketType="WebSocket";window.WebSocket||(socketType="Polling"),self._signalingServerPort=null,self._createSocket(socketType)},Skylink.prototype._closeChannel=function(){this._socket&&(this._socket.removeAllListeners("connect_error"),this._socket.removeAllListeners("reconnect_attempt"),this._socket.removeAllListeners("reconnect_error"),this._socket.removeAllListeners("reconnect_failed"),this._socket.removeAllListeners("connect"),this._socket.removeAllListeners("reconnect"),this._socket.removeAllListeners("error"),this._socket.removeAllListeners("disconnect"),this._socket.removeAllListeners("message")),this._channelOpen&&(this._socket&&this._socket.disconnect(),Log.log(this._debugOptions.instanceId,[null,"Socket",null,"Channel closed"]),this._channelOpen=!1,this._trigger("channelClose",UtilsFactory.clone(this._socketSession))),this._socket=null},Skylink.prototype._processSigMessage=function(message,session){var origin=message.mid;if(origin&&origin!==this._user.sid||(origin="Server"),Log.debug(this._debugOptions.instanceId,[origin,"Socket",message.type,"Received from peer ->"],UtilsFactory.clone(message)),message.mid===this._user.sid&&message.type!==this._SIG_MESSAGE_TYPE.REDIRECT&&message.type!==this._SIG_MESSAGE_TYPE.IN_ROOM)return void Log.debug(this._debugOptions.instanceId,[origin,"Socket",message.type,"Ignoring message ->"],UtilsFactory.clone(message));switch(message.type){case this._SIG_MESSAGE_TYPE.PUBLIC_MESSAGE:this._publicMessageHandler(message);break;case this._SIG_MESSAGE_TYPE.PRIVATE_MESSAGE:this._privateMessageHandler(message);break;case this._SIG_MESSAGE_TYPE.IN_ROOM:this._inRoomHandler(message);break;case this._SIG_MESSAGE_TYPE.ENTER:this._enterHandler(message);break;case this._SIG_MESSAGE_TYPE.WELCOME:this._welcomeHandler(message);break;case this._SIG_MESSAGE_TYPE.RESTART:this._restartHandler(message);break;case this._SIG_MESSAGE_TYPE.OFFER:this._offerHandler(message);break;case this._SIG_MESSAGE_TYPE.ANSWER:this._answerHandler(message);break;case this._SIG_MESSAGE_TYPE.CANDIDATE:this._candidateHandler(message);break;case this._SIG_MESSAGE_TYPE.BYE:this._byeHandler(message);break;case this._SIG_MESSAGE_TYPE.REDIRECT:this._redirectHandler(message);break;case this._SIG_MESSAGE_TYPE.UPDATE_USER:this._updateUserEventHandler(message);break;case this._SIG_MESSAGE_TYPE.MUTE_VIDEO:this._muteVideoEventHandler(message);break;case this._SIG_MESSAGE_TYPE.MUTE_AUDIO:this._muteAudioEventHandler(message);break;case this._SIG_MESSAGE_TYPE.STREAM:this._streamEventHandler(message);break;case this._SIG_MESSAGE_TYPE.ROOM_LOCK:this._roomLockEventHandler(message);break;case this._SIG_MESSAGE_TYPE.PEER_LIST:this._peerListEventHandler(message);break;case this._SIG_MESSAGE_TYPE.INTRODUCE_ERROR:this._introduceErrorEventHandler(message);break;case this._SIG_MESSAGE_TYPE.APPROACH:this._approachEventHandler(message);break;case this._SIG_MESSAGE_TYPE.RECORDING:this._recordingEventHandler(message);break;case this._SIG_MESSAGE_TYPE.END_OF_CANDIDATES:this._endOfCandidatesHandler(message);break;default:Log.error(this._debugOptions.instanceId,[message.mid,"Socket",message.type,"Unsupported message ->"],UtilsFactory.clone(message))}},Skylink.prototype._peerListEventHandler=function(message){var self=this;self._peerList=message.result,Log.log(self._debugOptions.instanceId,["Server",null,message.type,"Received list of peers"],self._peerList),self._trigger("getPeersStateChange",self.GET_PEERS_STATE.RECEIVED,self._user.sid,self._peerList)},Skylink.prototype._endOfCandidatesHandler=function(message){var self=this,targetMid=message.mid;self._peerConnections[targetMid]&&self._peerConnections[targetMid].signalingState!==self.PEER_CONNECTION_STATE.CLOSED&&(self._peerEndOfCandidatesCounter[targetMid].expectedLen=message.noOfExpectedCandidates||0,self._signalingEndOfCandidates(targetMid))},Skylink.prototype._introduceErrorEventHandler=function(message){var self=this;Log.log(self._debugOptions.instanceId,["Server",null,message.type,"Introduce failed. Reason: "+message.reason]),self._trigger("introduceStateChange",self.INTRODUCE_STATE.ERROR,self._user.sid,message.sendingPeerId,message.receivingPeerId,message.reason)},Skylink.prototype._approachEventHandler=function(message){var self=this;Log.log(self._debugOptions.instanceId,["Server",null,message.type,"Approaching peer"],message.target),self._trigger("handshakeProgress",self.HANDSHAKE_PROGRESS.ENTER,self._user.sid);var enterMsg={type:self._SIG_MESSAGE_TYPE.ENTER,mid:self._user.sid,rid:self._room.id,agent:window.webrtcDetectedBrowser,version:(window.webrtcDetectedVersion||0).toString(),os:window.navigator.platform,userInfo:self._getUserInfo(),receiveOnly:self.getPeerInfo().config.receiveOnly,target:message.target,weight:self._peerPriorityWeight,temasysPluginVersion:AdapterJS.WebRTCPlugin.plugin?AdapterJS.WebRTCPlugin.plugin.VERSION:null,enableIceTrickle:self._enableIceTrickle,enableDataChannel:self._enableDataChannel,enableIceRestart:self._enableIceRestart,SMProtocolVersion:self.SM_PROTOCOL_VERSION,DTProtocolVersion:self.DT_PROTOCOL_VERSION};self._publishOnly&&(enterMsg.publishOnly={type:self._streams.screenshare&&self._streams.screenshare.stream?"screenshare":"video"}),self._parentId&&(enterMsg.parentId=self._parentId),self._sendChannelMessage(enterMsg)},Skylink.prototype._redirectHandler=function(message){if(Log.log(this._debugOptions.instanceId,["Server",null,message.type,"System action warning:"],{message:message.info,reason:message.reason,action:message.action}),message.action===this.SYSTEM_ACTION.REJECT)for(var key in this._peerConnections)this._peerConnections.hasOwnProperty(key)&&this._removePeer(key);"toClose"===message.reason&&(message.reason="toclose"),this._trigger("systemAction",message.action,message.info,message.reason)},Skylink.prototype._updateUserEventHandler=function(message){var targetMid=message.mid;if(Log.log(this._debugOptions.instanceId,[targetMid,null,message.type,"Peer updated userData:"],message.userData),this._peerInformations[targetMid]){if(this._peerMessagesStamps[targetMid]&&"number"==typeof message.stamp){if(message.stamp<this._peerMessagesStamps[targetMid].userData)return void Log.warn(this._debugOptions.instanceId,[targetMid,null,message.type,"Dropping outdated status ->"],message);this._peerMessagesStamps[targetMid].userData=message.stamp}this._peerInformations[targetMid].userData=message.userData||{},this._trigger("peerUpdated",targetMid,this.getPeerInfo(targetMid),!1)}else Log.log(this._debugOptions.instanceId,[targetMid,null,message.type,"Peer does not have any user information"])},Skylink.prototype._roomLockEventHandler=function(message){var targetMid=message.mid;Log.log(this._debugOptions.instanceId,[targetMid,message.type,"Room lock status:"],message.lock),this._trigger("roomLock",message.lock,targetMid,this.getPeerInfo(targetMid),!1)},Skylink.prototype._muteAudioEventHandler=function(message){var targetMid=message.mid;if(Log.log(this._debugOptions.instanceId,[targetMid,null,message.type,"Peer's audio muted:"],message.muted),this._peerInformations[targetMid]){if(this._peerMessagesStamps[targetMid]&&"number"==typeof message.stamp){if(message.stamp<this._peerMessagesStamps[targetMid].audioMuted)return void Log.warn(this._debugOptions.instanceId,[targetMid,null,message.type,"Dropping outdated status ->"],message);this._peerMessagesStamps[targetMid].audioMuted=message.stamp}this._peerInformations[targetMid].mediaStatus.audioMuted=message.muted,this._trigger("streamMuted",targetMid,this.getPeerInfo(targetMid),!1,this._peerInformations[targetMid].settings.video&&this._peerInformations[targetMid].settings.video.screenshare),this._trigger("peerUpdated",targetMid,this.getPeerInfo(targetMid),!1)}else Log.log(this._debugOptions.instanceId,[targetMid,message.type,"Peer does not have any user information"])},Skylink.prototype._muteVideoEventHandler=function(message){var targetMid=message.mid;if(Log.log(this._debugOptions.instanceId,[targetMid,null,message.type,"Peer's video muted:"],message.muted),this._peerInformations[targetMid]){if(this._peerMessagesStamps[targetMid]&&"number"==typeof message.stamp){if(message.stamp<this._peerMessagesStamps[targetMid].videoMuted)return void Log.warn(this._debugOptions.instanceId,[targetMid,null,message.type,"Dropping outdated status ->"],message);this._peerMessagesStamps[targetMid].videoMuted=message.stamp}this._peerInformations[targetMid].mediaStatus.videoMuted=message.muted,this._trigger("streamMuted",targetMid,this.getPeerInfo(targetMid),!1,this._peerInformations[targetMid].settings.video&&this._peerInformations[targetMid].settings.video.screenshare),this._trigger("peerUpdated",targetMid,this.getPeerInfo(targetMid),!1)}else Log.log(this._debugOptions.instanceId,[targetMid,null,message.type,"Peer does not have any user information"])},Skylink.prototype._streamEventHandler=function(message){var targetMid=message.mid;Log.log(this._debugOptions.instanceId,[targetMid,null,message.type,"Peer's stream status:"],message.status),this._peerInformations[targetMid]&&message.streamId?(this._streamsSession[targetMid]=this._streamsSession[targetMid]||{},"ended"===message.status&&(message.settings&&"object"==typeof message.settings&&"undefined"==typeof this._streamsSession[targetMid][message.streamId]&&(this._streamsSession[targetMid][message.streamId]={audio:message.settings.audio,video:message.settings.video}),this._handleEndedStreams(targetMid,message.streamId))):Log.log(this._debugOptions.instanceId,[targetMid,null,message.type,"Peer does not have any user information"])},Skylink.prototype._byeHandler=function(message){var targetMid=message.mid,selfId=(this._user||{}).sid;selfId!==targetMid?(Log.log(this._debugOptions.instanceId,[targetMid,null,message.type,"Peer has left the room"]),this._removePeer(targetMid)):Log.log(this._debugOptions.instanceId,[targetMid,null,message.type,"Self has left the room"])},Skylink.prototype._privateMessageHandler=function(message){var targetMid=message.mid;Log.log(this._debugOptions.instanceId,[targetMid,null,message.type,"Received private message from peer:"],message.data),this._trigger("incomingMessage",{content:message.data,isPrivate:!0,targetPeerId:message.target,isDataChannel:!1,senderPeerId:targetMid},targetMid,this.getPeerInfo(targetMid),!1)},Skylink.prototype._publicMessageHandler=function(message){var targetMid=message.mid;Log.log(this._debugOptions.instanceId,[targetMid,null,message.type,"Received public message from peer:"],message.data),this._trigger("incomingMessage",{content:message.data,isPrivate:!1,targetPeerId:null,isDataChannel:!1,senderPeerId:targetMid},targetMid,this.getPeerInfo(targetMid),!1)},Skylink.prototype._recordingEventHandler=function(message){var self=this;if(Log.debug(self._debugOptions.instanceId,["MCU","Recording",null,"Received recording message ->"],message),"on"===message.action)self._recordings[message.recordingId]||(Log.debug(self._debugOptions.instanceId,["MCU","Recording",message.recordingId,"Started recording"]),self._currentRecordingId=message.recordingId,self._recordings[message.recordingId]={active:!0,state:self.RECORDING_STATE.START,startedDateTime:(new Date).toISOString(),endedDateTime:null,mixingDateTime:null,links:null,error:null},self._recordingStartInterval=setTimeout(function(){Log.log(self._debugOptions.instanceId,["MCU","Recording",message.recordingId,"4 seconds has been recorded. Recording can be stopped now"]),self._recordingStartInterval=null},4e3),self._trigger("recordingState",self.RECORDING_STATE.START,message.recordingId,null,null));else if("off"===message.action){if(!self._recordings[message.recordingId])return void Log.error(self._debugOptions.instanceId,["MCU","Recording",message.recordingId,'Received request of "off" but the session is empty']);self._currentRecordingId=null,self._recordingStartInterval&&(clearTimeout(self._recordingStartInterval),Log.error(self._debugOptions.instanceId,["MCU","Recording",message.recordingId,"Recording stopped abruptly before 4 seconds"]),self._recordingStartInterval=null),Log.debug(self._debugOptions.instanceId,["MCU","Recording",message.recordingId,"Stopped recording"]),self._recordings[message.recordingId].active=!1,self._recordings[message.recordingId].state=self.RECORDING_STATE.STOP,self._recordings[message.recordingId].endedDateTime=(new Date).toISOString(),self._trigger("recordingState",self.RECORDING_STATE.STOP,message.recordingId,null,null)}else if("url"===message.action){if(!self._recordings[message.recordingId])return void Log.error(self._debugOptions.instanceId,["MCU","Recording",message.recordingId,"Received URL but the session is empty"]);var links={};if(Array.isArray(message.urls))for(var i=0;i<message.urls.length;i++)links[messages.urls[i].id||""]=messages.urls[i].url||"";else"string"==typeof message.url&&(links.mixin=message.url);self._recordings[message.recordingId].links=links,self._recordings[message.recordingId].state=self.RECORDING_STATE.LINK,self._recordings[message.recordingId].mixingDateTime=(new Date).toISOString(),self._trigger("recordingState",self.RECORDING_STATE.LINK,message.recordingId,links,null)}else{var recordingError=new Error(message.error||"Unknown error");if(!self._recordings[message.recordingId])return void Log.error(self._debugOptions.instanceId,["MCU","Recording",message.recordingId,"Received error but the session is empty ->"],recordingError);Log.error(self._debugOptions.instanceId,["MCU","Recording",message.recordingId,"Recording failure ->"],recordingError),self._recordings[message.recordingId].state=self.RECORDING_STATE.ERROR,self._recordings[message.recordingId].error=recordingError,self._recordings[message.recordingId].active&&(Log.debug(self._debugOptions.instanceId,["MCU","Recording",message.recordingId,"Stopped recording abruptly"]),self._recordings[message.recordingId].active=!1),self._trigger("recordingState",self.RECORDING_STATE.ERROR,message.recordingId,null,recordingError)}},Skylink.prototype._inRoomHandler=function(message){var self=this;Log.log(self._debugOptions.instanceId,["Server",null,message.type,"User is now in the room and functionalities are now available. Config received:"],message.pc_config),self._room.connection.peerConfig=self._setIceServers(message.pc_config),self._inRoom=!0,self._user.sid=message.sid,self._peerPriorityWeight=message.tieBreaker,self._trigger("peerJoined",self._user.sid,self.getPeerInfo(),!0),self._trigger("handshakeProgress",self.HANDSHAKE_PROGRESS.ENTER,self._user.sid);var streamId=null;self._streams.screenshare&&self._streams.screenshare.stream?(streamId=self._streams.screenshare.stream.id||self._streams.screenshare.stream.label,self._trigger("incomingStream",self._user.sid,self._streams.screenshare.stream,!0,self.getPeerInfo(),!0,streamId)):self._streams.userMedia&&self._streams.userMedia.stream&&(streamId=self._streams.userMedia.stream.id||self._streams.userMedia.stream.label,self._trigger("incomingStream",self._user.sid,self._streams.userMedia.stream,!0,self.getPeerInfo(),!1,streamId));var enterMsg={type:self._SIG_MESSAGE_TYPE.ENTER,mid:self._user.sid,rid:self._room.id,agent:window.webrtcDetectedBrowser,version:(window.webrtcDetectedVersion||0).toString(),os:window.navigator.platform,userInfo:self._getUserInfo(),receiveOnly:self.getPeerInfo().config.receiveOnly,weight:self._peerPriorityWeight,temasysPluginVersion:AdapterJS.WebRTCPlugin.plugin?AdapterJS.WebRTCPlugin.plugin.VERSION:null,enableIceTrickle:self._enableIceTrickle,enableDataChannel:self._enableDataChannel,enableIceRestart:self._enableIceRestart,SMProtocolVersion:self.SM_PROTOCOL_VERSION,DTProtocolVersion:self.DT_PROTOCOL_VERSION};self._publishOnly&&(enterMsg.publishOnly={type:self._streams.screenshare&&self._streams.screenshare.stream?"screenshare":"video"}),self._parentId&&(enterMsg.parentId=self._parentId),self._sendChannelMessage(enterMsg)},Skylink.prototype._enterHandler=function(message){var self=this,targetMid=message.mid,isNewPeer=!1,userInfo=message.userInfo||{};if(userInfo.settings=userInfo.settings||{},userInfo.mediaStatus=userInfo.mediaStatus||{},userInfo.config={enableIceTrickle:"boolean"!=typeof message.enableIceTrickle||message.enableIceTrickle,enableIceRestart:"boolean"==typeof message.enableIceRestart&&message.enableIceRestart,enableDataChannel:"boolean"!=typeof message.enableDataChannel||message.enableDataChannel,priorityWeight:"number"==typeof message.weight?message.weight:0,receiveOnly:message.receiveOnly===!0,publishOnly:!!message.publishOnly},userInfo.parentId=message.parentId||null,userInfo.agent={name:"string"==typeof message.agent&&message.agent?message.agent:"other",version:function(){if(!message.version||"string"!=typeof message.version)return 0;if(message.version.indexOf(".")>-1){var parts=message.version.split(".");if(parts.length>2){var majorVer=parts[0]||"0";return parts.splice(0,1),parseFloat(majorVer+"."+parts.join("0"),10)}return parseFloat(message.version||"0",10)}return parseInt(message.version||"0",10)}(),os:"string"==typeof message.os&&message.os?message.os:"",pluginVersion:"string"==typeof message.temasysPluginVersion&&message.temasysPluginVersion?message.temasysPluginVersion:null,SMProtocolVersion:message.SMProtocolVersion&&"string"==typeof message.SMProtocolVersion?message.SMProtocolVersion:"0.1.1",DTProtocolVersion:message.DTProtocolVersion&&"string"==typeof message.DTProtocolVersion?message.DTProtocolVersion:self._hasMCU||"MCU"===targetMid?"0.1.2":"0.1.0"},Log.log(self._debugOptions.instanceId,[targetMid,"RTCPeerConnection",null,'Peer "enter" received ->'],message),"MCU"!==targetMid&&self._parentId&&self._parentId===targetMid)return void Log.error(self._debugOptions.instanceId,[targetMid,"RTCPeerConnection",null,'Discarding "enter" for parentId case ->'],message);if(!self._peerInformations[targetMid]){isNewPeer=!0,self._peerInformations[targetMid]=userInfo;var hasScreenshare=userInfo.settings.video&&"object"==typeof userInfo.settings.video&&!!userInfo.settings.video.screenshare;self._addPeer(targetMid,{agent:userInfo.agent.name,version:userInfo.agent.version,os:userInfo.agent.os},!1,!1,message.receiveOnly,hasScreenshare),"MCU"===targetMid?(Log.info(self._debugOptions.instanceId,[targetMid,"RTCPeerConnection",null,"MCU feature has been enabled"]),self._hasMCU=!0,self._trigger("serverPeerJoined",targetMid,self.SERVER_PEER_TYPE.MCU)):self._trigger("peerJoined",targetMid,self.getPeerInfo(targetMid),!1),self._trigger("handshakeProgress",self.HANDSHAKE_PROGRESS.ENTER,targetMid)}self._peerMessagesStamps[targetMid]=self._peerMessagesStamps[targetMid]||{userData:0,audioMuted:0,videoMuted:0};var welcomeMsg={type:self._SIG_MESSAGE_TYPE.WELCOME,mid:self._user.sid,rid:self._room.id,enableIceTrickle:self._enableIceTrickle,enableDataChannel:self._enableDataChannel,enableIceRestart:self._enableIceRestart,agent:window.webrtcDetectedBrowser,version:(window.webrtcDetectedVersion||0).toString(),receiveOnly:self.getPeerInfo().config.receiveOnly,os:window.navigator.platform,userInfo:self._getUserInfo(),target:targetMid,weight:self._peerPriorityWeight,temasysPluginVersion:AdapterJS.WebRTCPlugin.plugin?AdapterJS.WebRTCPlugin.plugin.VERSION:null,SMProtocolVersion:self.SM_PROTOCOL_VERSION,DTProtocolVersion:self.DT_PROTOCOL_VERSION};self._publishOnly&&(welcomeMsg.publishOnly={type:self._streams.screenshare&&self._streams.screenshare.stream?"screenshare":"video"}),self._parentId&&(welcomeMsg.parentId=self._parentId),self._sendChannelMessage(welcomeMsg),isNewPeer&&self._trigger("handshakeProgress",self.HANDSHAKE_PROGRESS.WELCOME,targetMid)},Skylink.prototype._restartHandler=function(message){var self=this,targetMid=message.mid,userInfo=message.userInfo||{};if(userInfo.settings=userInfo.settings||{},userInfo.mediaStatus=userInfo.mediaStatus||{},userInfo.config={enableIceTrickle:"boolean"!=typeof message.enableIceTrickle||message.enableIceTrickle,enableIceRestart:"boolean"==typeof message.enableIceRestart&&message.enableIceRestart,enableDataChannel:"boolean"!=typeof message.enableDataChannel||message.enableDataChannel,priorityWeight:"number"==typeof message.weight?message.weight:0,receiveOnly:message.receiveOnly===!0,publishOnly:!!message.publishOnly},userInfo.parentId=message.parentId||null,userInfo.agent={name:"string"==typeof message.agent&&message.agent?message.agent:"other",version:function(){if(!message.version||"string"!=typeof message.version)return 0;if(message.version.indexOf(".")>-1){var parts=message.version.split(".");if(parts.length>2){var majorVer=parts[0]||"0";return parts.splice(0,1),parseFloat(majorVer+"."+parts.join("0"),10)}return parseFloat(message.version||"0",10)}return parseInt(message.version||"0",10)}(),os:"string"==typeof message.os&&message.os?message.os:"",pluginVersion:"string"==typeof message.temasysPluginVersion&&message.temasysPluginVersion?message.temasysPluginVersion:null,SMProtocolVersion:message.SMProtocolVersion&&"string"==typeof message.SMProtocolVersion?message.SMProtocolVersion:"0.1.1",DTProtocolVersion:message.DTProtocolVersion&&"string"==typeof message.DTProtocolVersion?message.DTProtocolVersion:self._hasMCU||"MCU"===targetMid?"0.1.2":"0.1.0"},Log.log(self._debugOptions.instanceId,[targetMid,"RTCPeerConnection",null,'Peer "restart" received ->'],message),!self._peerInformations[targetMid])return void Log.error(self._debugOptions.instanceId,[targetMid,"RTCPeerConnection",null,"Peer does not have an existing session. Ignoring restart process."]);if("MCU"!==targetMid&&self._parentId&&self._parentId===targetMid)return void Log.error(self._debugOptions.instanceId,[targetMid,"RTCPeerConnection",null,'Discarding "restart" for parentId case ->'],message);if(self._hasMCU&&!self._mcuUseRenegoRestart)return Log.error(self._debugOptions.instanceId,[targetMid,"RTCPeerConnection",null,"Dropping restart request as MCU does not support re-negotiation. Restart workaround is to re-join Room for Peer."]),void self._trigger("peerRestart",targetMid,self.getPeerInfo(targetMid),!1,!1);if(self._peerInformations[targetMid]=userInfo,self._peerMessagesStamps[targetMid]=self._peerMessagesStamps[targetMid]||{userData:0,audioMuted:0,videoMuted:0},self._peerEndOfCandidatesCounter[targetMid]=self._peerEndOfCandidatesCounter[targetMid]||{},self._peerEndOfCandidatesCounter[targetMid].len=0,self._peerPriorityWeight>message.weight){if(Log.debug(self._debugOptions.instanceId,[targetMid,"RTCPeerConnection",null,"Re-negotiating new offer/answer."]),self._peerMessagesStamps[targetMid].hasRestart)return void Log.error(self._debugOptions.instanceId,[targetMid,"RTCPeerConnection",null,'Discarding extra "restart" received.']);self._peerMessagesStamps[targetMid].hasRestart=!0,self._doOffer(targetMid,message.doIceRestart===!0,{agent:userInfo.agent.name,version:userInfo.agent.version,os:userInfo.agent.os},!0)}else{Log.debug(self._debugOptions.instanceId,[targetMid,"RTCPeerConnection",null,"Waiting for peer to start re-negotiation."]);var restartMsg={type:self._SIG_MESSAGE_TYPE.RESTART,mid:self._user.sid,rid:self._room.id,agent:window.webrtcDetectedBrowser,version:(window.webrtcDetectedVersion||0).toString(),os:window.navigator.platform,userInfo:self._getUserInfo(),target:targetMid,weight:self._peerPriorityWeight,enableIceTrickle:self._enableIceTrickle,enableDataChannel:self._enableDataChannel,enableIceRestart:self._enableIceRestart,doIceRestart:message.doIceRestart===!0,receiveOnly:self.getPeerInfo().config.receiveOnly,isRestartResend:!0,temasysPluginVersion:AdapterJS.WebRTCPlugin.plugin?AdapterJS.WebRTCPlugin.plugin.VERSION:null,SMProtocolVersion:self.SM_PROTOCOL_VERSION,DTProtocolVersion:self.DT_PROTOCOL_VERSION};self._publishOnly&&(restartMsg.publishOnly={type:self._streams.screenshare&&self._streams.screenshare.stream?"screenshare":"video"}),self._parentId&&(restartMsg.parentId=self._parentId),self._sendChannelMessage(restartMsg)}self._trigger("peerRestart",targetMid,self.getPeerInfo(targetMid),!1,message.doIceRestart===!0)},Skylink.prototype._welcomeHandler=function(message){var self=this,targetMid=message.mid,isNewPeer=!1,userInfo=message.userInfo||{};if(userInfo.settings=userInfo.settings||{},userInfo.mediaStatus=userInfo.mediaStatus||{},userInfo.config={enableIceTrickle:"boolean"!=typeof message.enableIceTrickle||message.enableIceTrickle,enableIceRestart:"boolean"==typeof message.enableIceRestart&&message.enableIceRestart,enableDataChannel:"boolean"!=typeof message.enableDataChannel||message.enableDataChannel,priorityWeight:"number"==typeof message.weight?message.weight:0,receiveOnly:message.receiveOnly===!0,publishOnly:!!message.publishOnly},userInfo.parentId=message.parentId||null,userInfo.agent={name:"string"==typeof message.agent&&message.agent?message.agent:"other",version:function(){if(!message.version||"string"!=typeof message.version)return 0;if(message.version.indexOf(".")>-1){var parts=message.version.split(".");if(parts.length>2){var majorVer=parts[0]||"0";return parts.splice(0,1),parseFloat(majorVer+"."+parts.join("0"),10)}return parseFloat(message.version||"0",10)}return parseInt(message.version||"0",10)}(),os:"string"==typeof message.os&&message.os?message.os:"",pluginVersion:"string"==typeof message.temasysPluginVersion&&message.temasysPluginVersion?message.temasysPluginVersion:null,SMProtocolVersion:message.SMProtocolVersion&&"string"==typeof message.SMProtocolVersion?message.SMProtocolVersion:"0.1.1",DTProtocolVersion:message.DTProtocolVersion&&"string"==typeof message.DTProtocolVersion?message.DTProtocolVersion:self._hasMCU||"MCU"===targetMid?"0.1.2":"0.1.0"},Log.log(self._debugOptions.instanceId,[targetMid,"RTCPeerConnection",null,'Peer "welcome" received ->'],message),"MCU"!==targetMid&&self._parentId&&self._parentId===targetMid)return void Log.error(self._debugOptions.instanceId,[targetMid,"RTCPeerConnection",null,'Discarding "welcome" for parentId case ->'],message);if(!self._peerInformations[targetMid]){isNewPeer=!0,self._peerInformations[targetMid]=userInfo;var hasScreenshare=userInfo.settings.video&&"object"==typeof userInfo.settings.video&&!!userInfo.settings.video.screenshare;self._addPeer(targetMid,{agent:userInfo.agent.name,version:userInfo.agent.version,os:userInfo.agent.os},!1,!1,message.receiveOnly,hasScreenshare),"MCU"===targetMid?(Log.info(self._debugOptions.instanceId,[targetMid,"RTCPeerConnection",null,"MCU feature has been enabled"]),self._hasMCU=!0,self._trigger("serverPeerJoined",targetMid,self.SERVER_PEER_TYPE.MCU)):self._trigger("peerJoined",targetMid,self.getPeerInfo(targetMid),!1),self._trigger("handshakeProgress",self.HANDSHAKE_PROGRESS.ENTER,targetMid),self._trigger("handshakeProgress",self.HANDSHAKE_PROGRESS.WELCOME,targetMid)}if(self._peerMessagesStamps[targetMid]=self._peerMessagesStamps[targetMid]||{userData:0,audioMuted:0,videoMuted:0,hasWelcome:!1},self._hasMCU||self._peerPriorityWeight>message.weight){if(self._peerMessagesStamps[targetMid].hasWelcome)return void Log.error(self._debugOptions.instanceId,[targetMid,"RTCPeerConnection",null,'Discarding extra "welcome" received.']);Log.debug(self._debugOptions.instanceId,[targetMid,"RTCPeerConnection",null,"Starting negotiation"]),self._peerMessagesStamps[targetMid].hasWelcome=!0,self._doOffer(targetMid,!1,{agent:userInfo.agent.name,version:userInfo.agent.version,os:userInfo.agent.os},!0)}else{Log.debug(self._debugOptions.instanceId,[targetMid,"RTCPeerConnection",null,"Waiting for peer to start negotiation."]);var welcomeMsg={type:self._SIG_MESSAGE_TYPE.WELCOME,mid:self._user.sid,rid:self._room.id,enableIceTrickle:self._enableIceTrickle,enableDataChannel:self._enableDataChannel,enableIceRestart:self._enableIceRestart,receiveOnly:self.getPeerInfo().config.receiveOnly,agent:window.webrtcDetectedBrowser,
version:(window.webrtcDetectedVersion||0).toString(),os:window.navigator.platform,userInfo:self._getUserInfo(),target:targetMid,weight:self._peerPriorityWeight,temasysPluginVersion:AdapterJS.WebRTCPlugin.plugin?AdapterJS.WebRTCPlugin.plugin.VERSION:null,SMProtocolVersion:self.SM_PROTOCOL_VERSION,DTProtocolVersion:self.DT_PROTOCOL_VERSION};self._publishOnly&&(welcomeMsg.publishOnly={type:self._streams.screenshare&&self._streams.screenshare.stream?"screenshare":"video"}),self._parentId&&(welcomeMsg.parentId=self._parentId),self._sendChannelMessage(welcomeMsg)}},Skylink.prototype._offerHandler=function(message){var self=this,targetMid=message.mid,pc=self._peerConnections[targetMid];if(!pc)return void Log.error(self._debugOptions.instanceId,[targetMid,null,message.type,"Peer connection object not found. Unable to setRemoteDescription for offer"]);if(message.userInfo&&"object"==typeof message.userInfo){var userInfo=message.userInfo||{};self._peerInformations[targetMid].settings=userInfo.settings||{},self._peerInformations[targetMid].mediaStatus=userInfo.mediaStatus||{},self._peerInformations[targetMid].userData=userInfo.userData}Log.log(self._debugOptions.instanceId,[targetMid,null,message.type,"Received offer from peer. Session description:"],UtilsFactory.clone(message));var offer=new RTCSessionDescription({type:message.type,sdp:self._hasMCU?message.sdp.split("\n").join("\r\n"):message.sdp});return Log.log(self._debugOptions.instanceId,[targetMid,"RTCSessionDescription",message.type,"Session description object created"],offer),offer.sdp=self._removeSDPFilteredCandidates(targetMid,offer),offer.sdp=self._setSDPCodec(targetMid,offer),offer.sdp=self._setSDPBitrate(targetMid,offer),offer.sdp=self._setSDPOpusConfig(targetMid,offer),offer.sdp=self._removeSDPCodecs(targetMid,offer),offer.sdp=self._removeSDPREMBPackets(targetMid,offer),offer.sdp=self._handleSDPConnectionSettings(targetMid,offer,"remote"),Log.log(self._debugOptions.instanceId,[targetMid,"RTCSessionDescription",message.type,"Updated remote offer ->"],offer.sdp),pc.signalingState!==self.PEER_CONNECTION_STATE.STABLE?void Log.error(self._debugOptions.instanceId,[targetMid,null,message.type,'Peer connection state is not in "stable" state for re-negotiation. Dropping message.'],{signalingState:pc.signalingState,isRestart:!!message.resend}):pc.processingRemoteSDP?void Log.error(self._debugOptions.instanceId,[targetMid,"RTCSessionDescription","offer","Dropping of setting local offer as there is another sessionDescription being processed ->"],offer):(pc.processingRemoteSDP=!0,"edge"!==window.webrtcDetectedBrowser||self._hasMCU&&"MCU"!==targetMid||self._addLocalMediaStreams(targetMid),void pc.setRemoteDescription(offer,function(){Log.debug(self._debugOptions.instanceId,[targetMid,"RTCSessionDescription",message.type,"Remote description set"]),pc.setOffer="remote",pc.processingRemoteSDP=!1,self._trigger("handshakeProgress",self.HANDSHAKE_PROGRESS.OFFER,targetMid),self._addIceCandidateFromQueue(targetMid),self._doAnswer(targetMid)},function(error){self._trigger("handshakeProgress",self.HANDSHAKE_PROGRESS.ERROR,targetMid,error),pc.processingRemoteSDP=!1,Log.error(self._debugOptions.instanceId,[targetMid,null,message.type,"Failed setting remote description:"],error)}))},Skylink.prototype._candidateHandler=function(message){var targetMid=message.mid;if(!message.candidate&&!message.id)return void Log.warn(this._debugOptions.instanceId,[targetMid,"RTCIceCandidate",null,"Received invalid ICE candidate message ->"],message);var canId="can-"+(new Date).getTime(),candidateType=message.candidate.split(" ")[7]||"",candidate=new RTCIceCandidate({sdpMLineIndex:message.label,candidate:message.candidate,sdpMid:message.id});if(Log.debug(this._debugOptions.instanceId,[targetMid,"RTCIceCandidate",canId+":"+candidateType,"Received ICE candidate ->"],candidate),this._peerEndOfCandidatesCounter[targetMid]=this._peerEndOfCandidatesCounter[targetMid]||{},this._peerEndOfCandidatesCounter[targetMid].len=this._peerEndOfCandidatesCounter[targetMid].len||0,this._peerEndOfCandidatesCounter[targetMid].hasSet=!1,this._peerEndOfCandidatesCounter[targetMid].len++,this._trigger("candidateProcessingState",this.CANDIDATE_PROCESSING_STATE.RECEIVED,targetMid,canId,candidateType,{candidate:candidate.candidate,sdpMid:candidate.sdpMid,sdpMLineIndex:candidate.sdpMLineIndex},null),!this._peerConnections[targetMid]||this._peerConnections[targetMid].signalingState===this.PEER_CONNECTION_STATE.CLOSED)return Log.warn(this._debugOptions.instanceId,[targetMid,"RTCIceCandidate",canId+":"+candidateType,"Dropping ICE candidate as Peer connection does not exists or is closed"]),this._trigger("candidateProcessingState",this.CANDIDATE_PROCESSING_STATE.DROPPED,targetMid,canId,candidateType,{candidate:candidate.candidate,sdpMid:candidate.sdpMid,sdpMLineIndex:candidate.sdpMLineIndex},new Error("Failed processing ICE candidate as Peer connection does not exists or is closed.")),void this._signalingEndOfCandidates(targetMid);if(this._filterCandidatesType[candidateType]){if(!this._hasMCU||!this._forceTURN)return Log.warn(this._debugOptions.instanceId,[targetMid,"RTCIceCandidate",canId+":"+candidateType,"Dropping received ICE candidate as it matches ICE candidate filtering flag ->"],candidate),this._trigger("candidateProcessingState",this.CANDIDATE_PROCESSING_STATE.DROPPED,targetMid,canId,candidateType,{candidate:candidate.candidate,sdpMid:candidate.sdpMid,sdpMLineIndex:candidate.sdpMLineIndex},new Error("Dropping of processing ICE candidate as it matches ICE candidate filtering flag.")),void this._signalingEndOfCandidates(targetMid);Log.warn(this._debugOptions.instanceId,[targetMid,"RTCIceCandidate",canId+":"+candidateType,"Not dropping received ICE candidate as TURN connections are enforced as MCU is present (and act as a TURN itself) so filtering of ICE candidate flags are not honoured ->"],candidate)}this._peerConnections[targetMid].remoteDescription&&this._peerConnections[targetMid].remoteDescription.sdp&&this._peerConnections[targetMid].localDescription&&this._peerConnections[targetMid].localDescription.sdp?this._addIceCandidate(targetMid,canId,candidate):this._addIceCandidateToQueue(targetMid,canId,candidate),this._signalingEndOfCandidates(targetMid),this._gatheredCandidates[targetMid]||(this._gatheredCandidates[targetMid]={sending:{host:[],srflx:[],relay:[]},receiving:{host:[],srflx:[],relay:[]}}),this._gatheredCandidates[targetMid].receiving[candidateType].push({sdpMid:candidate.sdpMid,sdpMLineIndex:candidate.sdpMLineIndex,candidate:candidate.candidate})},Skylink.prototype._answerHandler=function(message){var self=this,targetMid=message.mid;Log.log(self._debugOptions.instanceId,[targetMid,null,message.type,"Received answer from peer. Session description:"],UtilsFactory.clone(message));var pc=self._peerConnections[targetMid];if(!pc)return void Log.error(self._debugOptions.instanceId,[targetMid,null,message.type,"Peer connection object not found. Unable to setRemoteDescription for answer"]);if(message.userInfo&&"object"==typeof message.userInfo){var userInfo=message.userInfo||{};self._peerInformations[targetMid].settings=userInfo.settings||{},self._peerInformations[targetMid].mediaStatus=userInfo.mediaStatus||{},self._peerInformations[targetMid].userData=userInfo.userData}var answer=new RTCSessionDescription({type:message.type,sdp:self._hasMCU?message.sdp.split("\n").join("\r\n"):message.sdp});return Log.log(self._debugOptions.instanceId,[targetMid,"RTCSessionDescription",message.type,"Session description object created"],answer),answer.sdp=self._removeSDPFilteredCandidates(targetMid,answer),answer.sdp=self._setSDPCodec(targetMid,answer),answer.sdp=self._setSDPBitrate(targetMid,answer),answer.sdp=self._setSDPOpusConfig(targetMid,answer),answer.sdp=self._removeSDPCodecs(targetMid,answer),answer.sdp=self._removeSDPREMBPackets(targetMid,answer),answer.sdp=self._handleSDPConnectionSettings(targetMid,answer,"remote"),Log.log(self._debugOptions.instanceId,[targetMid,"RTCSessionDescription",message.type,"Updated remote answer ->"],answer.sdp),pc.signalingState!==self.PEER_CONNECTION_STATE.HAVE_LOCAL_OFFER?void Log.error(self._debugOptions.instanceId,[targetMid,null,message.type,'Peer connection state is not in "have-local-offer" state for re-negotiation. Dropping message.'],{signalingState:pc.signalingState,isRestart:!!message.restart}):pc.processingRemoteSDP?void Log.error(self._debugOptions.instanceId,[targetMid,"RTCSessionDescription","answer","Dropping of setting local answer as there is another sessionDescription being processed ->"],answer):(pc.processingRemoteSDP=!0,void pc.setRemoteDescription(answer,function(){Log.debug(self._debugOptions.instanceId,[targetMid,null,message.type,"Remote description set"]),pc.setAnswer="remote",pc.processingRemoteSDP=!1,self._trigger("handshakeProgress",self.HANDSHAKE_PROGRESS.ANSWER,targetMid),self._addIceCandidateFromQueue(targetMid),self._peerMessagesStamps[targetMid]&&(self._peerMessagesStamps[targetMid].hasRestart=!1),self._dataChannels[targetMid]&&(pc.remoteDescription.sdp.indexOf("m=application")===-1||pc.remoteDescription.sdp.indexOf("m=application 0")>0)&&(Log.error(self._debugOptions.instanceId,[targetMid,"RTCPeerConnection",null,"Closing all datachannels as they were rejected."]),self._closeDataChannel(targetMid))},function(error){self._trigger("handshakeProgress",self.HANDSHAKE_PROGRESS.ERROR,targetMid,error),pc.processingRemoteSDP=!1,Log.error(self._debugOptions.instanceId,[targetMid,null,message.type,"Failed setting remote description:"],{error:error,state:pc.signalingState})}))},Skylink.prototype._isLowerThanVersion=function(agentVer,requiredVer){for(var partsA=agentVer.split("."),partsB=requiredVer.split("."),i=0;i<partsB.length;i++)if(parseInt(partsA[i]||"0",10)<parseInt(partsB[i]||"0",10))return!0;return!1},Skylink.prototype._muteStreams=function(){var self=this,hasVideo=!1,hasAudio=!1,muteFn=function(stream){for(var audioTracks=stream.getAudioTracks(),videoTracks=stream.getVideoTracks(),a=0;a<audioTracks.length;a++)audioTracks[a].enabled=!self._streamsMutedSettings.audioMuted,hasAudio=!0;for(var v=0;v<videoTracks.length;v++)videoTracks[v].enabled=!self._streamsMutedSettings.videoMuted,hasVideo=!0};return self._streams.userMedia&&self._streams.userMedia.stream&&muteFn(self._streams.userMedia.stream),self._streams.screenshare&&self._streams.screenshare.stream&&muteFn(self._streams.screenshare.stream),self._streams.screenshare&&self._streams.screenshare.streamClone&&muteFn(self._streams.screenshare.streamClone),Log.debug(self._debugOptions.instanceId,"Updated Streams muted status ->",self._streamsMutedSettings),{hasVideo:hasVideo,hasAudio:hasAudio}},Skylink.prototype._stopStreams=function(options){var self=this,stopFn=function(stream){var streamId=stream.id||stream.label;Log.debug(self._debugOptions.instanceId,[null,"MediaStream",streamId,"Stopping Stream ->"],stream);try{for(var audioTracks=stream.getAudioTracks(),videoTracks=stream.getVideoTracks(),a=0;a<audioTracks.length;a++)audioTracks[a].stop();for(var v=0;v<videoTracks.length;v++)videoTracks[v].stop()}catch(error){stream.stop()}self._streamsStoppedCbs[streamId]&&(self._streamsStoppedCbs[streamId](),delete self._streamsStoppedCbs[streamId])},stopUserMedia=!1,stopScreenshare=!1,hasStoppedMedia=!1;"object"==typeof options&&(stopUserMedia=options.userMedia===!0,stopScreenshare=options.screenshare===!0),stopUserMedia&&self._streams.userMedia&&(self._streams.userMedia.stream&&stopFn(self._streams.userMedia.stream),self._streams.userMedia=null,hasStoppedMedia=!0),stopScreenshare&&self._streams.screenshare&&(self._streams.screenshare.streamClone&&stopFn(self._streams.screenshare.streamClone),self._streams.screenshare.stream&&stopFn(self._streams.screenshare.stream),self._streams.screenshare=null,hasStoppedMedia=!0),self._inRoom&&hasStoppedMedia&&self._trigger("peerUpdated",self._user.sid,self.getPeerInfo(),!0),Log.log(self._debugOptions.instanceId,"Stopping Streams with settings ->",options)},Skylink.prototype._parseStreamSettings=function(options){var settings={settings:{audio:!1,video:!1},mutedSettings:{shouldAudioMuted:!1,shouldVideoMuted:!1},getUserMediaSettings:{audio:!1,video:!1}};return options.audio&&(settings.settings.audio={stereo:!1,exactConstraints:!!options.useExactConstraints,echoCancellation:!1},settings.getUserMediaSettings.audio={echoCancellation:!1},"object"==typeof options.audio&&("boolean"==typeof options.audio.stereo&&(settings.settings.audio.stereo=options.audio.stereo),"boolean"==typeof options.audio.useinbandfec&&(settings.settings.audio.useinbandfec=options.audio.useinbandfec),"boolean"==typeof options.audio.usedtx&&(settings.settings.audio.usedtx=options.audio.usedtx),"number"==typeof options.audio.maxplaybackrate&&options.audio.maxplaybackrate>=8e3&&options.audio.maxplaybackrate<=48e3&&(settings.settings.audio.maxplaybackrate=options.audio.maxplaybackrate),"boolean"==typeof options.audio.mute&&(settings.mutedSettings.shouldAudioMuted=options.audio.mute),"edge"!==window.webrtcDetectedBrowser&&("boolean"==typeof options.audio.echoCancellation&&(settings.settings.audio.echoCancellation=options.audio.echoCancellation,settings.getUserMediaSettings.audio.echoCancellation=options.audio.echoCancellation),Array.isArray(options.audio.optional)&&(settings.settings.audio.optional=UtilsFactory.clone(options.audio.optional),settings.getUserMediaSettings.audio.optional=UtilsFactory.clone(options.audio.optional)),options.audio.deviceId&&"string"==typeof options.audio.deviceId&&"firefox"!==window.webrtcDetectedBrowser&&(settings.settings.audio.deviceId=options.audio.deviceId,options.useExactConstraints?settings.getUserMediaSettings.audio.deviceId={exact:options.audio.deviceId}:(Array.isArray(settings.getUserMediaSettings.audio.optional)||(settings.getUserMediaSettings.audio.optional=[]),settings.getUserMediaSettings.audio.optional.push({sourceId:options.audio.deviceId}))))),"edge"===window.webrtcDetectedBrowser&&(settings.getUserMediaSettings.audio=!0)),options.video&&(settings.settings.video={resolution:UtilsFactory.clone(this.VIDEO_RESOLUTION.VGA),screenshare:!1,exactConstraints:!!options.useExactConstraints},settings.getUserMediaSettings.video={},"object"==typeof options.video?("boolean"==typeof options.video.mute&&(settings.mutedSettings.shouldVideoMuted=options.video.mute),Array.isArray(options.video.optional)&&(settings.settings.video.optional=UtilsFactory.clone(options.video.optional),settings.getUserMediaSettings.video.optional=UtilsFactory.clone(options.video.optional)),options.video.deviceId&&"string"==typeof options.video.deviceId&&"firefox"!==window.webrtcDetectedBrowser&&(settings.settings.video.deviceId=options.video.deviceId,options.useExactConstraints?settings.getUserMediaSettings.video.deviceId={exact:options.video.deviceId}:(Array.isArray(settings.getUserMediaSettings.video.optional)||(settings.getUserMediaSettings.video.optional=[]),settings.getUserMediaSettings.video.optional.push({sourceId:options.video.deviceId}))),options.video.resolution&&"object"==typeof options.video.resolution&&((options.video.resolution.width&&"object"==typeof options.video.resolution.width||"number"==typeof options.video.resolution.width)&&(settings.settings.video.resolution.width=options.video.resolution.width),(options.video.resolution.height&&"object"==typeof options.video.resolution.height||"number"==typeof options.video.resolution.height)&&(settings.settings.video.resolution.height=options.video.resolution.height)),settings.getUserMediaSettings.video.width="object"==typeof settings.settings.video.resolution.width?settings.settings.video.resolution.width:options.useExactConstraints?{exact:settings.settings.video.resolution.width}:{max:settings.settings.video.resolution.width},settings.getUserMediaSettings.video.height="object"==typeof settings.settings.video.resolution.height?settings.settings.video.resolution.height:options.useExactConstraints?{exact:settings.settings.video.resolution.height}:{max:settings.settings.video.resolution.height},(options.video.frameRate&&"object"==typeof options.video.frameRate||"number"==typeof options.video.frameRate&&!self._isUsingPlugin)&&(settings.settings.video.frameRate=options.video.frameRate,settings.getUserMediaSettings.video.frameRate="object"==typeof settings.settings.video.frameRate?settings.settings.video.frameRate:options.useExactConstraints?{exact:settings.settings.video.frameRate}:{max:settings.settings.video.frameRate}),options.video.facingMode&&["string","object"].indexOf(typeof options.video.facingMode)>-1&&self._isUsingPlugin&&(settings.settings.video.facingMode=options.video.facingMode,settings.getUserMediaSettings.video.facingMode="object"==typeof settings.settings.video.facingMode?settings.settings.video.facingMode:options.useExactConstraints?{exact:settings.settings.video.facingMode}:{max:settings.settings.video.facingMode})):options.useExactConstraints?settings.getUserMediaSettings.video={width:{exact:settings.settings.video.resolution.width},height:{exact:settings.settings.video.resolution.height}}:settings.getUserMediaSettings.video.mandatory={maxWidth:settings.settings.video.resolution.width,maxHeight:settings.settings.video.resolution.height},"edge"===window.webrtcDetectedBrowser&&(settings.settings.video={screenshare:!1,exactConstraints:!!options.useExactConstraints},settings.getUserMediaSettings.video=!0)),settings},Skylink.prototype._onStreamAccessSuccess=function(stream,settings,isScreenSharing,isAudioFallback){var self=this,streamId=stream.id||stream.label;if(Log.log(self._debugOptions.instanceId,[null,"MediaStream",streamId,"Has access to stream ->"],stream),!isScreenSharing&&self._streams.userMedia?self._stopStreams({userMedia:!0,screenshare:!1}):isScreenSharing&&self._streams.screenshare&&self._stopStreams({userMedia:!1,screenshare:!0}),self._streamsStoppedCbs[streamId]=function(){Log.log(self._debugOptions.instanceId,[null,"MediaStream",streamId,"Stream has ended"]),self._trigger("mediaAccessStopped",!!isScreenSharing,!!isAudioFallback,streamId),self._inRoom&&(Log.debug(self._debugOptions.instanceId,[null,"MediaStream",streamId,"Sending Stream ended status to Peers"]),self._sendChannelMessage({type:self._SIG_MESSAGE_TYPE.STREAM,mid:self._user.sid,rid:self._room.id,cid:self._key,streamId:streamId,settings:settings.settings,status:"ended"}),self._trigger("streamEnded",self._user.sid,self.getPeerInfo(),!0,!!isScreenSharing,streamId),isScreenSharing&&self._streams.screenshare&&self._streams.screenshare.stream&&(self._streams.screenshare.stream.id||self._streams.screenshare.stream.label)===streamId?self._streams.screenshare=null:!isScreenSharing&&self._streams.userMedia&&self._streams.userMedia.stream&&(self._streams.userMedia.stream.id||self._streams.userMedia.stream.label)===streamId&&(self._streams.userMedia=null))},["chrome","opera"].indexOf(window.webrtcDetectedBrowser)>-1?stream.oninactive=function(){self._streamsStoppedCbs[streamId]&&(self._streamsStoppedCbs[streamId](),delete self._streamsStoppedCbs[streamId])}:"firefox"===window.webrtcDetectedBrowser?stream.endedInterval=setInterval(function(){"undefined"==typeof stream.recordedTime&&(stream.recordedTime=0),stream.recordedTime===stream.currentTime?(clearInterval(stream.endedInterval),self._streamsStoppedCbs[streamId]&&(self._streamsStoppedCbs[streamId](),delete self._streamsStoppedCbs[streamId])):stream.recordedTime=stream.currentTime},1e3):stream.onended=function(){self._streamsStoppedCbs[streamId]&&(self._streamsStoppedCbs[streamId](),delete self._streamsStoppedCbs[streamId])},settings.settings.audio&&0===stream.getAudioTracks().length||settings.settings.video&&0===stream.getVideoTracks().length){var tracksNotSameError="Expected audio tracks length with "+(settings.settings.audio?"1":"0")+" and video tracks length with "+(settings.settings.video?"1":"0")+" but received audio tracks length with "+stream.getAudioTracks().length+" and video tracks length with "+stream.getVideoTracks().length;Log.error(self._debugOptions.instanceId,[null,"MediaStream",streamId,tracksNotSameError]);var requireAudio=!!settings.settings.audio,requireVideo=!!settings.settings.video;settings.settings.audio&&0===stream.getAudioTracks().length&&(settings.settings.audio=!1),settings.settings.video&&0===stream.getVideoTracks().length&&(settings.settings.video=!1),self._trigger("mediaAccessFallback",{error:new Error(tracksNotSameError),diff:{video:{expected:requireVideo?1:0,received:stream.getVideoTracks().length},audio:{expected:requireAudio?1:0,received:stream.getAudioTracks().length}}},self.MEDIA_ACCESS_FALLBACK_STATE.FALLBACKED,!!isScreenSharing,!!isAudioFallback,streamId)}self._streams[isScreenSharing?"screenshare":"userMedia"]={stream:stream,settings:settings.settings,constraints:settings.getUserMediaSettings},self._muteStreams(),self._trigger("mediaAccessSuccess",stream,!!isScreenSharing,!!isAudioFallback,streamId)},Skylink.prototype._onStreamAccessError=function(error,settings,isScreenSharing){var self=this;return!isScreenSharing&&settings.settings.audio&&settings.settings.video&&self._audioFallback?(Log.debug(self._debugOptions.instanceId,"Fallbacking to retrieve audio only Stream"),self._trigger("mediaAccessFallback",{error:error,diff:null},self.MEDIA_ACCESS_FALLBACK_STATE.FALLBACKING,!1,!0),void navigator.getUserMedia({audio:!0},function(stream){self._onStreamAccessSuccess(stream,settings,!1,!0)},function(error){Log.error(self._debugOptions.instanceId,"Failed fallbacking to retrieve audio only Stream ->",error),self._trigger("mediaAccessError",error,!1,!0),self._trigger("mediaAccessFallback",{error:error,diff:null},self.MEDIA_ACCESS_FALLBACK_STATE.ERROR,!1,!0)})):(Log.error(self._debugOptions.instanceId,"Failed retrieving "+(isScreenSharing?"screensharing":"camera")+" Stream ->",error),void self._trigger("mediaAccessError",error,!!isScreenSharing,!1))},Skylink.prototype._onRemoteStreamAdded=function(targetMid,stream,isScreenSharing){var self=this;return self._peerInformations[targetMid]?(Log.log(self._debugOptions.instanceId,[targetMid,"MediaStream",stream.id,"Received remote stream ->"],stream),isScreenSharing&&Log.log(self._debugOptions.instanceId,[targetMid,"MediaStream",stream.id,"Peer is having a screensharing session with user"]),self._trigger("incomingStream",targetMid,stream,!1,self.getPeerInfo(targetMid),isScreenSharing,stream.id||stream.label),void self._trigger("peerUpdated",targetMid,self.getPeerInfo(targetMid),!1)):void Log.error(self._debugOptions.instanceId,[targetMid,"MediaStream",stream.id,"Received remote stream when peer is not connected. Ignoring stream ->"],stream)},Skylink.prototype._addLocalMediaStreams=function(peerId){var self=this;try{Log.log(self._debugOptions.instanceId,[peerId,null,null,"Adding local stream"]);var pc=self._peerConnections[peerId];if(pc)if(pc.signalingState!==self.PEER_CONNECTION_STATE.CLOSED){var updateStreamFn=function(updatedStream){for(var hasStream=!1,streams=pc.getLocalStreams(),i=0;i<streams.length;i++)null===updatedStream||streams[i].id!==updatedStream.id?pc.removeStream(streams[i]):hasStream=!0;null===updatedStream||hasStream||pc.addStream(updatedStream)};self._streams.screenshare&&self._streams.screenshare.stream?(Log.debug(self._debugOptions.instanceId,[peerId,"MediaStream",null,"Sending screen"],self._streams.screenshare.stream),updateStreamFn(self._streams.screenshare.stream)):self._streams.userMedia&&self._streams.userMedia.stream?(Log.debug(self._debugOptions.instanceId,[peerId,"MediaStream",null,"Sending stream"],self._streams.userMedia.stream),updateStreamFn(self._streams.userMedia.stream)):(Log.error(self._debugOptions.instanceId,[peerId,"MediaStream",null,"No media to send. Will be only receiving"]),updateStreamFn(null))}else Log.error(self._debugOptions.instanceId,[peerId,"MediaStream",null,"Not adding any stream as signalingState is closed"]);else Log.error(self._debugOptions.instanceId,[peerId,"MediaStream",self._mediaStream,"Not adding stream as peerconnection object does not exists"])}catch(error){(error.message||"").indexOf("already added")>-1?Log.error(self._debugOptions.instanceId,[peerId,null,null,"Not re-adding stream as LocalMediaStream is already added"],error):Log.error(self._debugOptions.instanceId,[peerId,null,null,"Failed adding local stream"],error)}},Skylink.prototype._handleEndedStreams=function(peerId,checkStreamId){var self=this;self._streamsSession[peerId]=self._streamsSession[peerId]||{};var renderEndedFn=function(streamId){var shouldTrigger=!!self._streamsSession[peerId][streamId];if(!checkStreamId&&self._peerConnections[peerId]&&self._peerConnections[peerId].signalingState!==self.PEER_CONNECTION_STATE.CLOSED)for(var streams=self._peerConnections[peerId].getRemoteStreams(),i=0;i<streams.length;i++)if(streamId===(streams[i].id||streams[i].label)){shouldTrigger=!1;break}if(shouldTrigger){var peerInfo=UtilsFactory.clone(self.getPeerInfo(peerId));peerInfo.settings.audio=UtilsFactory.clone(self._streamsSession[peerId][streamId].audio),peerInfo.settings.video=UtilsFactory.clone(self._streamsSession[peerId][streamId].video);var hasScreenshare=peerInfo.settings.video&&"object"==typeof peerInfo.settings.video&&!!peerInfo.settings.video.screenshare;self._streamsSession[peerId][streamId]=!1,self._trigger("streamEnded",peerId,peerInfo,!1,hasScreenshare,streamId)}};if(checkStreamId)renderEndedFn(checkStreamId);else for(var prop in self._streamsSession[peerId])self._streamsSession[peerId].hasOwnProperty(prop)&&self._streamsSession[peerId][prop]&&renderEndedFn(prop)},Skylink.prototype._setSDPOpusConfig=function(targetMid,sessionDescription){var sdpLines=sessionDescription.sdp.split("\r\n"),payload=null,appendFmtpLineAtIndex=-1,userAudioSettings=this.getPeerInfo().settings.audio,opusSettings={useinbandfec:null,usedtx:null,maxplaybackrate:null,stereo:!1};userAudioSettings&&"object"==typeof userAudioSettings&&(opusSettings.stereo=userAudioSettings.stereo===!0,opusSettings.useinbandfec="boolean"==typeof userAudioSettings.useinbandfec?userAudioSettings.useinbandfec:null,opusSettings.usedtx="boolean"==typeof userAudioSettings.usedtx?userAudioSettings.usedtx:null,opusSettings.maxplaybackrate="number"==typeof userAudioSettings.maxplaybackrate?userAudioSettings.maxplaybackrate:null);for(var i=0;i<sdpLines.length;i++)if(0===sdpLines[i].indexOf("a=rtpmap:")&&sdpLines[i].toLowerCase().indexOf("opus/48000")>0){payload=(sdpLines[i].split(" ")[0]||"").split(":")[1]||null,appendFmtpLineAtIndex=i;break}if(!payload)return Log.warn(this._debugOptions.instanceId,[targetMid,"RTCSessionDesription",sessionDescription.type,"Failed to find OPUS payload. Not configuring options."]),sessionDescription.sdp;for(var j=0;j<sdpLines.length;j++)if(0===sdpLines[j].indexOf("a=fmtp:"+payload)){for(var opusConfigs=(sdpLines[j].split("a=fmtp:"+payload)[1]||"").replace(/\s/g,"").split(";"),updatedOpusParams="",k=0;k<opusConfigs.length;k++)if(opusConfigs[k]&&opusConfigs[k].indexOf("=")>0){var params=opusConfigs[k].split("=");["useinbandfec","usedtx","sprop-stereo","stereo","maxplaybackrate"].indexOf(params[0])>-1?"useinbandfec"===params[0]&&"1"===params[1]&&null===opusSettings.useinbandfec?(Log.log(this._debugOptions.instanceId,[targetMid,"RTCSessionDesription",sessionDescription.type,"Received OPUS useinbandfec as true by default."]),opusSettings.useinbandfec=!0):"usedtx"===params[0]&&"1"===params[1]&&null===opusSettings.usedtx?(Log.log(this._debugOptions.instanceId,[targetMid,"RTCSessionDesription",sessionDescription.type,"Received OPUS usedtx as true by default."]),opusSettings.usedtx=!0):"maxplaybackrate"===params[0]&&parseInt(params[1]||"0",10)>0&&null===opusSettings.maxplaybackrate&&(Log.log(this._debugOptions.instanceId,[targetMid,"RTCSessionDesription",sessionDescription.type,"Received OPUS maxplaybackrate as "+params[1]+" by default."]),opusSettings.maxplaybackrate=params[1]):updatedOpusParams+=opusConfigs[k]+";"}opusSettings.stereo===!0&&(updatedOpusParams+="stereo=1;"),opusSettings.useinbandfec===!0&&(updatedOpusParams+="useinbandfec=1;"),opusSettings.usedtx===!0&&(updatedOpusParams+="usedtx=1;"),opusSettings.maxplaybackrate&&(updatedOpusParams+="maxplaybackrate="+opusSettings.maxplaybackrate+";"),Log.log(this._debugOptions.instanceId,[targetMid,"RTCSessionDesription",sessionDescription.type,"Updated OPUS parameters ->"],updatedOpusParams),sdpLines[j]="a=fmtp:"+payload+" "+updatedOpusParams,appendFmtpLineAtIndex=-1;break}if(appendFmtpLineAtIndex>0){var newFmtpLine="a=fmtp:"+payload+" ";opusSettings.stereo===!0&&(newFmtpLine+="stereo=1;"),opusSettings.useinbandfec===!0&&(newFmtpLine+="useinbandfec=1;"),opusSettings.usedtx===!0&&(newFmtpLine+="usedtx=1;"),opusSettings.maxplaybackrate&&(newFmtpLine+="maxplaybackrate="+opusSettings.maxplaybackrate+";"),Log.info(this._debugOptions.instanceId,[targetMid,"RTCSessionDesription",sessionDescription.type,"Created OPUS parameters ->"],newFmtpLine),sdpLines.splice(appendFmtpLineAtIndex+1,0,newFmtpLine)}return sdpLines.join("\r\n")},Skylink.prototype._setSDPBitrate=function(targetMid,sessionDescription){var self=this,sdpLines=sessionDescription.sdp.split("\r\n"),parseFn=function(type,bw){var mLineType=type,mLineIndex=-1,cLineIndex=-1;"data"===type&&(mLineType="application");for(var i=0;i<sdpLines.length;i++)if(0===sdpLines[i].indexOf("m="+mLineType))mLineIndex=i;else if(mLineIndex>0){if(0===sdpLines[i].indexOf("m="))break;0===sdpLines[i].indexOf("c=")?cLineIndex=i:0!==sdpLines[i].indexOf("b=AS:")&&0!==sdpLines[i].indexOf("b:TIAS:")||(sdpLines.splice(i,1),i--)}return"number"==typeof bw&&bw>0?cLineIndex===-1?void Log.warn(self._debugOptions.instanceId,[targetMid,"RTCSessionDesription",sessionDescription.type,'Failed setting "'+type+'" bandwidth as c-line is missing.']):(Log.info(self._debugOptions.instanceId,[targetMid,"RTCSessionDesription",sessionDescription.type,'Limiting maximum sending "'+type+'" bandwidth ->'],bw),void sdpLines.splice(cLineIndex+1,0,"firefox"===window.webrtcDetectedBrowser?"b=TIAS:"+1024*bw:"b=AS:"+bw)):void Log.warn(self._debugOptions.instanceId,[targetMid,"RTCSessionDesription",sessionDescription.type,'Not limiting "'+type+'" bandwidth'])};if(parseFn("audio",this._streamsBandwidthSettings.bAS.audio),parseFn("video",this._streamsBandwidthSettings.bAS.video),parseFn("data",this._streamsBandwidthSettings.bAS.data),"number"==typeof this._streamsBandwidthSettings.googleX.min||"number"==typeof this._streamsBandwidthSettings.googleX.max){for(var codec=null,codecRtpMapLineIndex=-1,codecFmtpLineIndex=-1,j=0;j<sdpLines.length;j++)if(0===sdpLines[j].indexOf("m=video"))codec=sdpLines[j].split(" ")[3];else if(codec){if(0===sdpLines[j].indexOf("m="))break;if(0===sdpLines[j].indexOf("a=rtpmap:"+codec+" "))codecRtpMapLineIndex=j;else if(0===sdpLines[j].indexOf("a=fmtp:"+codec+" ")){sdpLines[j]=sdpLines[j].replace(/x-google-(min|max)-bitrate=[0-9]*[;]*/gi,""),codecFmtpLineIndex=j;break}}if(codecRtpMapLineIndex>-1){var xGoogleParams="";"number"==typeof this._streamsBandwidthSettings.googleX.min&&(xGoogleParams+="x-google-min-bitrate="+this._streamsBandwidthSettings.googleX.min+";"),"number"==typeof this._streamsBandwidthSettings.googleX.max&&(xGoogleParams+="x-google-max-bitrate="+this._streamsBandwidthSettings.googleX.max+";"),Log.info(this._debugOptions.instanceId,[targetMid,"RTCSessionDesription",sessionDescription.type,"Limiting x-google-bitrate ->"],xGoogleParams),codecFmtpLineIndex>-1?sdpLines[codecFmtpLineIndex]+=(sdpLines[codecFmtpLineIndex].split(" ")[1]?";":"")+xGoogleParams:sdpLines.splice(codecRtpMapLineIndex+1,0,"a=fmtp:"+codec+" "+xGoogleParams)}}return sdpLines.join("\r\n")},Skylink.prototype._setSDPCodec=function(targetMid,sessionDescription){var self=this,sdpLines=sessionDescription.sdp.split("\r\n"),parseFn=function(type,codec){if("auto"===codec)return void Log.warn(self._debugOptions.instanceId,[targetMid,"RTCSessionDesription",sessionDescription.type,'Not preferring any codec for "'+type+'" streaming. Using browser selection.']);for(var i=0;i<sdpLines.length;i++)if(0===sdpLines[i].indexOf("a=rtpmap:")&&sdpLines[i].toLowerCase().indexOf(codec.toLowerCase())>0){
var payload=sdpLines[i].split(":")[1].split(" ")[0]||null;if(!payload)return void Log.warn(self._debugOptions.instanceId,[targetMid,"RTCSessionDesription",sessionDescription.type,'Not preferring "'+codec+'" for "'+type+'" streaming as payload is not found.']);for(var j=0;j<sdpLines.length;j++)if(0===sdpLines[j].indexOf("m="+type)){Log.info(self._debugOptions.instanceId,[targetMid,"RTCSessionDesription",sessionDescription.type,'Preferring "'+codec+'" for "'+type+'" streaming.']);var parts=sdpLines[j].split(" ");parts.indexOf(payload)>=3&&parts.splice(parts.indexOf(payload),1),parts.splice(3,0,payload),sdpLines[j]=parts.join(" ");break}}};return parseFn("audio",this._selectedAudioCodec),parseFn("video",this._selectedVideoCodec),sdpLines.join("\r\n")},Skylink.prototype._removeSDPFirefoxH264Pref=function(targetMid,sessionDescription){return Log.info(this._debugOptions.instanceId,[targetMid,"RTCSessionDesription",sessionDescription.type,"Removing Firefox experimental H264 flag to ensure interopability reliability"]),sessionDescription.sdp.replace(/a=fmtp:0 profile-level-id=0x42e00c;packetization-mode=1\r\n/g,"")},Skylink.prototype._addSDPMediaStreamTrackIDs=function(targetMid,sessionDescription){var self=this;if(!(this._peerConnections[targetMid]&&this._peerConnections[targetMid].getLocalStreams().length>0))return Log.log(this._debugOptions.instanceId,[targetMid,"RTCSessionDesription",sessionDescription.type,"Not enforcing MediaStream IDs as no Streams is sent."]),sessionDescription.sdp;var sessionDescriptionStr=sessionDescription.sdp;this._enableIceTrickle||(sessionDescriptionStr=sessionDescriptionStr.replace(/a=end-of-candidates\r\n/g,""));var sdpLines=sessionDescriptionStr.split("\r\n"),localStream=(((this._peerInformations[targetMid]||{}).agent||{}).name||"",this._peerConnections[targetMid].getLocalStreams()[0]),localStreamId=localStream.id||localStream.label,parseFn=function(type,tracks){if(0===tracks.length)return void Log.log(self._debugOptions.instanceId,[targetMid,"RTCSessionDesription",sessionDescription.type,'Not enforcing "'+type+'" MediaStreamTrack IDs as no Stream "'+type+'" tracks is sent.']);for(var trackId=tracks[0].id||tracks[0].label,trackLabel=tracks[0].label||"Default",ssrcId=null,hasReachedType=!1,i=0;i<sdpLines.length;i++)if(0!==sdpLines[i].indexOf("m="+type)){if(hasReachedType&&0===sdpLines[i].indexOf("a=ssrc:")){ssrcId=(sdpLines[i].split(":")[1]||"").split(" ")[0]||null;var msidLine="a=ssrc:"+ssrcId+" msid:"+localStreamId+" "+trackId,mslabelLine="a=ssrc:"+ssrcId+" mslabel:"+trackLabel,labelLine="a=ssrc:"+ssrcId+" label:"+trackLabel;sdpLines.indexOf(msidLine)===-1&&(sdpLines.splice(i+1,0,msidLine),i++),sdpLines.indexOf(mslabelLine)===-1&&(sdpLines.splice(i+1,0,mslabelLine),i++),sdpLines.indexOf(labelLine)===-1&&(sdpLines.splice(i+1,0,labelLine),i++),Log.info(self._debugOptions.instanceId,[targetMid,"RTCSessionDesription",sessionDescription.type,"Updating MediaStreamTrack ssrc ("+ssrcId+') for "'+localStreamId+'" stream and "'+trackId+'" (label:"'+trackLabel+'")']);break}}else{if(hasReachedType)break;hasReachedType=!0}};if(parseFn("audio",localStream.getAudioTracks()),parseFn("video",localStream.getVideoTracks()),!this._enableIceTrickle){Log.info(this._debugOptions.instanceId,[targetMid,"RTCSessionDesription",sessionDescription.type,"Appending end-of-candidates signal for non-trickle ICE connection."]);for(var i=0;i<sdpLines.length;i++)0===sdpLines[i].indexOf("a=candidate:")&&(sdpLines[i+1]&&(0===sdpLines[i+1].indexOf("a=candidate:")||0===sdpLines[i+1].indexOf("a=end-of-candidates"))||(sdpLines.splice(i+1,0,"a=end-of-candidates"),i++))}if(sessionDescription.type===this.HANDSHAKE_PROGRESS.ANSWER&&this._sdpSessions[targetMid]){for(var mLineIndex=-1,j=0;j<sdpLines.length;j++)if(0===sdpLines[j].indexOf("a=group:BUNDLE")&&this._sdpSessions[targetMid].remote.bundleLine)sdpLines[j]=this._sdpSessions[targetMid].remote.bundleLine;else if(0===sdpLines[j].indexOf("m=")){mLineIndex++;var compareA=sdpLines[j].split(" "),compareB=(this._sdpSessions[targetMid].remote.mLines[mLineIndex]||"").split(" ");compareA[0]&&compareB[0]&&compareA[0]!==compareB[0]&&(compareB[1]=0,Log.info(this._debugOptions.instanceId,[targetMid,"RTCSessionDesription",sessionDescription.type,"Appending middle rejected m= line ->"],compareB.join(" ")),sdpLines.splice(j,0,compareB.join(" ")),j++,mLineIndex++)}for(;this._sdpSessions[targetMid].remote.mLines[mLineIndex+1];){mLineIndex++;var appendIndex=sdpLines.length;sdpLines[appendIndex-1].replace(/\s/gi,"")||(appendIndex-=1);var parts=(this._sdpSessions[targetMid].remote.mLines[mLineIndex]||"").split(" ");parts[1]=0,Log.info(this._debugOptions.instanceId,[targetMid,"RTCSessionDesription",sessionDescription.type,"Appending later rejected m= line ->"],parts.join(" ")),sdpLines.splice(appendIndex,0,parts.join(" "))}}return"edge"!==window.webrtcDetectedBrowser||sessionDescription.type!==this.HANDSHAKE_PROGRESS.OFFER||sdpLines[sdpLines.length-1].replace(/\s/gi,"")||(Log.info(this._debugOptions.instanceId,[targetMid,"RTCSessionDesription",sessionDescription.type,"Removing last empty space for Edge browsers"]),sdpLines.splice(sdpLines.length-1,1)),sdpLines.join("\r\n")},Skylink.prototype._removeSDPH264VP9AptRtxForOlderPlugin=function(targetMid,sessionDescription){var removeVP9AptRtxPayload=!1,agent=(this._peerInformations[targetMid]||{}).agent||{};if(agent.pluginVersion){var parts=agent.pluginVersion.split(".");removeVP9AptRtxPayload=parseInt(parts[0],10)>=0&&parseInt(parts[1],10)>=8&&parseInt(parts[2],10)>=870}return["chrome","opera"].indexOf(window.webrtcDetectedBrowser)>-1&&removeVP9AptRtxPayload&&(Log.info(this._debugOptions.instanceId,[targetMid,"RTCSessionDesription",sessionDescription.type,"Removing VP9/H264 apt= and rtx payload lines causing connectivity issues"]),sessionDescription.sdp=sessionDescription.sdp.replace(/a=rtpmap:\d+ rtx\/\d+\r\na=fmtp:\d+ apt=101\r\n/g,""),sessionDescription.sdp=sessionDescription.sdp.replace(/a=rtpmap:\d+ rtx\/\d+\r\na=fmtp:\d+ apt=107\r\n/g,"")),sessionDescription.sdp},Skylink.prototype._removeSDPCodecs=function(targetMid,sessionDescription){var self=this,audioSettings=this.getPeerInfo().settings.audio,parseFn=function(type,codec){var payloadList=sessionDescription.sdp.match(new RegExp("a=rtpmap:(\\d*)\\ "+codec+".*","gi"));if(!(Array.isArray(payloadList)&&payloadList.length>0))return void Log.warn(self._debugOptions.instanceId,[targetMid,"RTCSessionDesription",sessionDescription.type,'Not removing "'+codec+'" as it does not exists.']);for(var i=0;i<payloadList.length;i++){var payload=payloadList[i].split(" ")[0].split(":")[1];Log.info(self._debugOptions.instanceId,[targetMid,"RTCSessionDesription",sessionDescription.type,'Removing "'+codec+'" payload ->'],payload),sessionDescription.sdp=sessionDescription.sdp.replace(new RegExp("a=rtpmap:"+payload+"\\ .*\\r\\n","g"),""),sessionDescription.sdp=sessionDescription.sdp.replace(new RegExp("a=fmtp:"+payload+"\\ .*\\r\\n","g"),""),sessionDescription.sdp=sessionDescription.sdp.replace(new RegExp("a=rtpmap:\\d+ rtx\\/\\d+\\r\\na=fmtp:\\d+ apt="+payload+"\\r\\n","g"),"");for(var sdpLines=sessionDescription.sdp.split("\r\n"),j=0;j<sdpLines.length;j++)if(0===sdpLines[j].indexOf("m="+type)){var parts=sdpLines[j].split(" ");parts.indexOf(payload)>=3&&parts.splice(parts.indexOf(payload),1),sdpLines[j]=parts.join(" ");break}sessionDescription.sdp=sdpLines.join("\r\n")}};return this._disableVideoFecCodecs&&(this._hasMCU?Log.warn(this._debugOptions.instanceId,[targetMid,"RTCSessionDesription",sessionDescription.type,'Not removing "ulpfec" or "red" codecs as connected to MCU to prevent connectivity issues.']):(parseFn("video","red"),parseFn("video","ulpfec"))),this._disableComfortNoiseCodec&&audioSettings&&"object"==typeof audioSettings&&audioSettings.stereo&&parseFn("audio","CN"),sessionDescription.sdp},Skylink.prototype._removeSDPREMBPackets=function(targetMid,sessionDescription){return this._disableREMB?(Log.info(this._debugOptions.instanceId,[targetMid,"RTCSessionDesription",sessionDescription.type,"Removing REMB packets."]),sessionDescription.sdp.replace(/a=rtcp-fb:\d+ goog-remb\r\n/g,"")):sessionDescription.sdp},Skylink.prototype._getSDPSelectedCodec=function(targetMid,sessionDescription,type){if(!sessionDescription||!sessionDescription.sdp)return null;for(var sdpLines=sessionDescription.sdp.split("\r\n"),selectedCodecInfo={name:null,implementation:null,clockRate:null,channels:null,payloadType:null,params:null},i=0;i<sdpLines.length;i++)if(0===sdpLines[i].indexOf("m="+type)){var parts=sdpLines[i].split(" ");if(parts.length<4)break;selectedCodecInfo.payloadType=parseInt(parts[3],10)}else if(null!==selectedCodecInfo.payloadType){if(0===sdpLines[i].indexOf("m="))break;if(0===sdpLines[i].indexOf("a=rtpmap:"+selectedCodecInfo.payloadType+" ")){var params=(sdpLines[i].split(" ")[1]||"").split("/");selectedCodecInfo.name=params[0]||"",selectedCodecInfo.clockRate=params[1]?parseInt(params[1],10):null,selectedCodecInfo.channels=params[2]?parseInt(params[2],10):null}else 0===sdpLines[i].indexOf("a=fmtp:"+selectedCodecInfo.payloadType+" ")&&(selectedCodecInfo.params=sdpLines[i].split("a=fmtp:"+selectedCodecInfo.payloadType+" ")[1]||null)}return Log.debug(this._debugOptions.instanceId,[targetMid,"RTCSessionDesription",sessionDescription.type,'Parsing session description "'+type+'" codecs ->'],selectedCodecInfo),selectedCodecInfo},Skylink.prototype._removeSDPFilteredCandidates=function(targetMid,sessionDescription){return"MCU"===targetMid&&sessionDescription.type===this.HANDSHAKE_PROGRESS.ANSWER&&"firefox"===window.webrtcDetectedBrowser&&(sessionDescription.sdp=sessionDescription.sdp.replace(/ generation 0/g,""),sessionDescription.sdp=sessionDescription.sdp.replace(/ udp /g," UDP ")),this._forceTURN&&this._hasMCU?(Log.warn(this._debugOptions.instanceId,[targetMid,"RTCSessionDesription",sessionDescription.type,"Not filtering ICE candidates as TURN connections are enforced as MCU is present (and act as a TURN itself) so filtering of ICE candidate flags are not honoured"]),sessionDescription.sdp):(this._filterCandidatesType.host&&(Log.info(this._debugOptions.instanceId,[targetMid,"RTCSessionDesription",sessionDescription.type,'Removing "host" ICE candidates.']),sessionDescription.sdp=sessionDescription.sdp.replace(/a=candidate:.*host.*\r\n/g,"")),this._filterCandidatesType.srflx&&(Log.info(this._debugOptions.instanceId,[targetMid,"RTCSessionDesription",sessionDescription.type,'Removing "srflx" ICE candidates.']),sessionDescription.sdp=sessionDescription.sdp.replace(/a=candidate:.*srflx.*\r\n/g,"")),this._filterCandidatesType.relay&&(Log.info(this._debugOptions.instanceId,[targetMid,"RTCSessionDesription",sessionDescription.type,'Removing "relay" ICE candidates.']),sessionDescription.sdp=sessionDescription.sdp.replace(/a=candidate:.*relay.*\r\n/g,"")),sessionDescription.sdp)},Skylink.prototype._getCodecsSupport=function(callback){var self=this;self._currentCodecSupport&&callback(null),self._currentCodecSupport={audio:{},video:{}};try{if("edge"===window.webrtcDetectedBrowser){for(var codecs=RTCRtpSender.getCapabilities().codecs,i=0;i<codecs.length;i++)if(["audio","video"].indexOf(codecs[i].kind)>-1&&codecs[i].name){var codec=codecs[i].name.toLowerCase();self._currentCodecSupport[codecs[i].kind][codec]=codecs[i].clockRate+(codecs[i].numChannels>1?"/"+codecs[i].numChannels:"")}callback(null)}else{var pc=new RTCPeerConnection(null),offerConstraints={offerToReceiveAudio:!0,offerToReceiveVideo:!0};["IE","safari"].indexOf(window.webrtcDetectedBrowser)>-1&&(offerConstraints={mandatory:{OfferToReceiveVideo:!0,OfferToReceiveAudio:!0}}),pc.createOffer(function(offer){for(var sdpLines=offer.sdp.split("\r\n"),mediaType="",i=0;i<sdpLines.length;i++)if(0===sdpLines[i].indexOf("m="))mediaType=(sdpLines[i].split("m=")[1]||"").split(" ")[0];else if(0===sdpLines[i].indexOf("a=rtpmap:")){if(["audio","video"].indexOf(mediaType)===-1)continue;var parts=(sdpLines[i].split(" ")[1]||"").split("/"),codec=(parts[0]||"").toLowerCase(),info=parts[1]+(parts[2]?"/"+parts[2]:"");self._currentCodecSupport[mediaType][codec]=info}callback(null)},function(error){callback(error)},offerConstraints)}}catch(error){callback(error)}},Skylink.prototype._handleSDPConnectionSettings=function(targetMid,sessionDescription,direction){var self=this;if(!self._sdpSessions[targetMid])return sessionDescription.sdp;var sessionDescriptionStr=sessionDescription.sdp;"remote"!==direction||self.getPeerInfo(targetMid).config.enableIceTrickle||(sessionDescriptionStr=sessionDescriptionStr.replace(/a=end-of-candidates\r\n/g,""));var sdpLines=sessionDescriptionStr.split("\r\n"),peerAgent=((self._peerInformations[targetMid]||{}).agent||{}).name||"",mediaType="",bundleLineIndex=-1,bundleLineMids=[],mLineIndex=-1,settings=UtilsFactory.clone(self._sdpSettings);"MCU"===targetMid&&(settings.connection.audio=!0,settings.connection.video=!0,settings.connection.data=!0),settings.video&&(settings.connection.video="edge"===window.webrtcDetectedBrowser&&"edge"!==peerAgent||!(["IE","safari"].indexOf(window.webrtcDetectedBrowser)>-1&&"edge"===peerAgent)||!!self._currentCodecSupport.video.h264),self._hasMCU&&(settings.direction.audio.receive="MCU"!==targetMid,settings.direction.audio.send="MCU"===targetMid,settings.direction.video.receive="MCU"!==targetMid,settings.direction.video.send="MCU"===targetMid),self._sdpSessions[targetMid][direction].mLines=[],self._sdpSessions[targetMid][direction].bundleLine="";for(var i=0;i<sdpLines.length;i++){if(0===sdpLines[i].indexOf("a=group:BUNDLE"))self._sdpSessions[targetMid][direction].bundleLine=sdpLines[i],bundleLineIndex=i;else if(0===sdpLines[i].indexOf("m=")&&(mediaType=(sdpLines[i].split("m=")[1]||"").split(" ")[0]||"",mediaType="application"===mediaType?"data":mediaType,mLineIndex++,self._sdpSessions[targetMid][direction].mLines[mLineIndex]=sdpLines[i],!settings.connection[mediaType])){if(Log.log(self._debugOptions.instanceId,[targetMid,"RTCSessionDesription",sessionDescription.type,"Removing rejected m="+mediaType+" line ->"],sdpLines[i]),bundleLineIndex>-1&&0===mLineIndex&&("remote"===direction?sessionDescription.type===this.HANDSHAKE_PROGRESS.OFFER:sessionDescription.type===this.HANDSHAKE_PROGRESS.ANSWER)){Log.warn(self._debugOptions.instanceId,[targetMid,"RTCSessionDesription",sessionDescription.type,"Not removing rejected m="+mediaType+" line ->"],sdpLines[i]),settings.connection[mediaType]=!0,["audio","video"].indexOf(mediaType)>-1&&(settings.direction[mediaType].send=!1,settings.direction[mediaType].receive=!1);continue}if("remote"===direction||sessionDescription.type===this.HANDSHAKE_PROGRESS.ANSWER){var parts=sdpLines[i].split(" ");parts[1]=0,sdpLines[i]=parts.join(" ");continue}}"remote"!==direction||0!==sdpLines[i].indexOf("a=candidate:")||self.getPeerInfo(targetMid).config.enableIceTrickle||sdpLines[i+1]&&(0===sdpLines[i+1].indexOf("a=candidate:")||0===sdpLines[i+1].indexOf("a=end-of-candidates"))||(Log.info(self._debugOptions.instanceId,[targetMid,"RTCSessionDesription",sessionDescription.type,"Appending end-of-candidates signal for non-trickle ICE connection."]),sdpLines.splice(i+1,0,"a=end-of-candidates"),i++),mediaType&&(settings.connection[mediaType]?0===sdpLines[i].indexOf("a=mid:")?bundleLineMids.push(sdpLines[i].split("a=mid:")[1]||""):"local"===direction&&mediaType&&["audio","video"].indexOf(mediaType)>-1&&["a=sendrecv","a=sendonly","a=recvonly"].indexOf(sdpLines[i])>-1&&(settings.direction[mediaType].send&&!settings.direction[mediaType].receive?sdpLines[i]=sdpLines[i].indexOf("send")>-1?"a=sendonly":"a=inactive":!settings.direction[mediaType].send&&settings.direction[mediaType].receive?sdpLines[i]=sdpLines[i].indexOf("recv")>-1?"a=recvonly":"a=inactive":settings.direction[mediaType].send||settings.direction[mediaType].receive||(sdpLines[i]="a=inactive"),self._hasMCU||"firefox"===window.webrtcDetectedBrowser||"firefox"!==peerAgent||sessionDescription.type!==self.HANDSHAKE_PROGRESS.OFFER||"a=recvonly"!==sdpLines[i]||(Log.warn(self._debugOptions.instanceId,[targetMid,"RTCSessionDesription",sessionDescription.type,"Overriding any original settings to receive only to send and receive to resolve chrome BUNDLE errors."]),sdpLines[i]="a=sendrecv",settings.direction[mediaType].send=!0,settings.direction[mediaType].receive=!0)):(sdpLines.splice(i,1),i--)),(sdpLines[i]||"").replace(/\n|\r|\s|\ /gi,"")||(sdpLines.splice(i,1),i--)}return bundleLineIndex>-1&&(sdpLines[bundleLineIndex]="a=group:BUNDLE "+bundleLineMids.join(" ")),"edge"!==window.webrtcDetectedBrowser&&(sdpLines[sdpLines.length-1].replace(/\n|\r|\s/gi,"")?sdpLines.push(""):sdpLines[sdpLines.length-1]=""),Log.info(self._debugOptions.instanceId,[targetMid,"RTCSessionDesription",sessionDescription.type,"Handling connection lines and direction ->"],settings),sdpLines.join("\r\n")},Skylink.prototype._getSDPFingerprint=function(targetMid,sessionDescription){var fingerprint={fingerprint:null,fingerprintAlgorithm:null,derBase64:null};if(!sessionDescription||!sessionDescription.sdp)return fingerprint;for(var sdpLines=sessionDescription.sdp.split("\r\n"),i=0;i<sdpLines.length;i++)if(0===sdpLines[i].indexOf("a=fingerprint")){var parts=sdpLines[i].replace("a=fingerprint:","").split(" ");fingerprint.fingerprint=parts[1],fingerprint.fingerprintAlgorithm=parts[0];break}return fingerprint}}(this);