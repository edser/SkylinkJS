/*! skylinkjs - v0.6.17 - 2017-02-02 */
!function(globals){function Skylink(){this._options={},this._session=null,this._user={id:null,weight:0,data:"",mediaConnection:{},mediaDirection:{},bandwidth:{}},this._socket={server:"signaling.temasys.io",states:{},socket:null,ports:{},queue:{fn:null,interval:1e3,throughput:16,messages:[],timestamp:null,types:["muteAudioEvent","muteVideoEvent","public","stream"]}},this._dataChannels={},this._dataTransfers={},this._peerCandidatesQueue={},this._peerEndOfCandidatesCounter={},this._gatheredCandidates={},this._retryCounters={},this._peerConnections={},this._peerStats={},this._peerInformations={},this._peerList=null,this._EVENTS={},this._onceEvents={},this._timestamp={socketMessage:null,shareScreen:null,refreshConnection:null,getUserMedia:null,lastRestart:null},this._enableIceRestart="firefox"===window.webrtcDetectedBrowser?window.webrtcDetectedVersion>=48:!0,this._peerMessagesStamps={},this._streams={userMedia:null,screenshare:null},this._streamsDefaultSettings={userMedia:{audio:{stereo:!1},video:{resolution:{width:640,height:480},frameRate:50}},screenshare:{video:!0}},this._streamsMutedSettings={audioMuted:!1,videoMuted:!1},this._streamsBandwidthSettings={googleX:{},bAS:{}},this._streamsStoppedCbs={},this._streamsSession={},this._sdpSettings={connection:{audio:!0,video:!0,data:!0},direction:{audio:{send:!0,receive:!0},video:{send:!0,receive:!0}}},this._recordings={},this._currentRecordingId=!1,this._recordingStartInterval=null,this._currentCodecSupport=null,this._sdpSessions={}}Object.keys||(Object.keys=function(){var hasOwnProperty=Object.prototype.hasOwnProperty,hasDontEnumBug=!{toString:null}.propertyIsEnumerable("toString"),dontEnums=["toString","toLocaleString","valueOf","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","constructor"],dontEnumsLength=dontEnums.length;return function(obj){if("object"!=typeof obj&&"function"!=typeof obj||null===obj)throw new TypeError("Object.keys called on non-object");var result=[];for(var prop in obj)hasOwnProperty.call(obj,prop)&&result.push(prop);if(hasDontEnumBug)for(var i=0;dontEnumsLength>i;i++)hasOwnProperty.call(obj,dontEnums[i])&&result.push(dontEnums[i]);return result}}()),function(){function pad(number){return 10>number?"0"+number:number}Date.prototype.toISOString=function(){return this.getUTCFullYear()+"-"+pad(this.getUTCMonth()+1)+"-"+pad(this.getUTCDate())+"T"+pad(this.getUTCHours())+":"+pad(this.getUTCMinutes())+":"+pad(this.getUTCSeconds())+"."+(this.getUTCMilliseconds()/1e3).toFixed(3).slice(2,5)+"Z"}}(),function(win,doc){function docHijack(p){var old=doc[p];doc[p]=function(v){return addListen(old(v))}}function addEvent(on,fn,self){return(self=this).attachEvent("on"+on,function(e){var e=e||win.event;e.preventDefault=e.preventDefault||function(){e.returnValue=!1},e.stopPropagation=e.stopPropagation||function(){e.cancelBubble=!0},fn.call(self,e)})}function addListen(obj,i){if(i=obj.length)for(;i--;)obj[i].addEventListener=addEvent;else obj.addEventListener=addEvent;return obj}win.addEventListener||(addListen([doc,win]),"Element"in win?win.Element.prototype.addEventListener=addEvent:(doc.attachEvent("onreadystatechange",function(){addListen(doc.all)}),docHijack("getElementsByTagName"),docHijack("getElementById"),docHijack("createElement"),addListen(doc.all)))}(window,document);var clone=function(obj){if(!obj||"object"!=typeof obj)return obj;if(Array.isArray(obj))return obj.concat([]);try{return JSON.parse(JSON.stringify(obj))}catch(e){var copy={},fn=function(item){utils.forEach(item,function(subitem,prop){Array.isArray(subitem)?copy[prop]=subitem.concat([]):subitem&&"object"==typeof subitem?copy[prop]=fn(subitem):copy[prop]=subitem})};fn(obj)}return obj};"undefined"!=typeof exports?module.exports={Skylink:Skylink}:window&&(window.Skylink=Skylink),globals&&(globals.Skylink=Skylink),Skylink.prototype.DATA_CHANNEL_STATE={CONNECTING:"connecting",OPEN:"open",CLOSING:"closing",CLOSED:"closed",ERROR:"error",CREATE_ERROR:"createError",BUFFERED_AMOUNT_LOW:"bufferedAmountLow",SEND_MESSAGE_ERROR:"sendMessageError"},Skylink.prototype.DATA_CHANNEL_TYPE={MESSAGING:"messaging",DATA:"data"},Skylink.prototype.DATA_CHANNEL_MESSAGE_ERROR={MESSAGE:"message",TRANSFER:"transfer",STREAM_DATA:"data"},Skylink.prototype.DATA_TRANSFER_DATA_TYPE={BINARY_STRING:"binaryString",ARRAY_BUFFER:"arrayBuffer",BLOB:"blob",STRING:"string"},Skylink.prototype.DT_PROTOCOL_VERSION="0.1.1",Skylink.prototype.DATA_TRANSFER_TYPE={UPLOAD:"upload",DOWNLOAD:"download"},Skylink.prototype.DATA_TRANSFER_SESSION_TYPE={BLOB:"blob",DATA_URL:"dataURL"},Skylink.prototype.DATA_TRANSFER_STATE={UPLOAD_REQUEST:"request",UPLOAD_STARTED:"uploadStarted",DOWNLOAD_STARTED:"downloadStarted",REJECTED:"rejected",CANCEL:"cancel",ERROR:"error",UPLOADING:"uploading",DOWNLOADING:"downloading",UPLOAD_COMPLETED:"uploadCompleted",DOWNLOAD_COMPLETED:"downloadCompleted",USER_REJECTED:"userRejected",USER_UPLOAD_REQUEST:"userRequest"},Skylink.prototype.CANDIDATE_GENERATION_STATE={NEW:"new",GATHERING:"gathering",COMPLETED:"completed"},Skylink.prototype.CANDIDATE_PROCESSING_STATE={RECEIVED:"received",DROPPED:"dropped",BUFFERED:"buffered",PROCESSING:"processing",PROCESS_SUCCESS:"processSuccess",PROCESS_ERROR:"processError"},Skylink.prototype.ICE_CONNECTION_STATE={STARTING:"starting",CHECKING:"checking",CONNECTED:"connected",COMPLETED:"completed",CLOSED:"closed",FAILED:"failed",TRICKLE_FAILED:"trickleFailed",DISCONNECTED:"disconnected"},Skylink.prototype.TURN_TRANSPORT={UDP:"udp",TCP:"tcp",ANY:"any",NONE:"none",ALL:"all"},Skylink.prototype.PEER_CONNECTION_STATE={STABLE:"stable",HAVE_LOCAL_OFFER:"have-local-offer",HAVE_REMOTE_OFFER:"have-remote-offer",CLOSED:"closed"},Skylink.prototype.GET_CONNECTION_STATUS_STATE={RETRIEVING:0,RETRIEVE_SUCCESS:1,RETRIEVE_ERROR:-1},Skylink.prototype.SERVER_PEER_TYPE={MCU:"mcu"},Skylink.prototype.HANDSHAKE_PROGRESS={ENTER:"enter",WELCOME:"welcome",OFFER:"offer",ANSWER:"answer",ERROR:"error"},Skylink.prototype.GET_PEERS_STATE={ENQUIRED:"enquired",RECEIVED:"received"},Skylink.prototype.INTRODUCE_STATE={INTRODUCING:"introducing",ERROR:"error"},Skylink.prototype.SYSTEM_ACTION={WARNING:"warning",REJECT:"reject"},Skylink.prototype.SYSTEM_ACTION_REASON={CREDENTIALS_EXPIRED:"oldTimeStamp",CREDENTIALS_ERROR:"credentialError",DUPLICATED_LOGIN:"duplicatedLogin",ROOM_NOT_STARTED:"notStart",EXPIRED:"expired",ROOM_LOCKED:"locked",FAST_MESSAGE:"fastmsg",ROOM_CLOSING:"toclose",ROOM_CLOSED:"roomclose",SERVER_ERROR:"serverError",KEY_ERROR:"keyFailed"},Skylink.prototype.VERSION="0.6.17",Skylink.prototype.READY_STATE_CHANGE={INIT:0,LOADING:1,COMPLETED:2,ERROR:-1},Skylink.prototype.READY_STATE_CHANGE_ERROR={API_INVALID:4001,API_DOMAIN_NOT_MATCH:4002,API_CORS_DOMAIN_NOT_MATCH:4003,API_CREDENTIALS_INVALID:4004,API_CREDENTIALS_NOT_MATCH:4005,API_INVALID_PARENT_KEY:4006,API_NO_MEETING_RECORD_FOUND:4010,API_OVER_SEAT_LIMIT:4020,API_RETRIEVAL_FAILED:4021,API_WRONG_ACCESS_DOMAIN:5005,XML_HTTP_REQUEST_ERROR:-1,NO_SOCKET_IO:1,NO_XMLHTTPREQUEST_SUPPORT:2,NO_WEBRTC_SUPPORT:3,NO_PATH:4,ADAPTER_NO_LOADED:7,PARSE_CODECS:8},Skylink.prototype.REGIONAL_SERVER={APAC1:"",US1:""},Skylink.prototype.LOG_LEVEL={DEBUG:4,LOG:3,INFO:2,WARN:1,ERROR:0,NONE:-1},Skylink.prototype.SOCKET_ERROR={CONNECTION_FAILED:0,RECONNECTION_FAILED:-1,CONNECTION_ABORTED:-2,RECONNECTION_ABORTED:-3,RECONNECTION_ATTEMPT:-4},Skylink.prototype.SOCKET_FALLBACK={NON_FALLBACK:"nonfallback",FALLBACK_PORT:"fallbackPortNonSSL",FALLBACK_SSL_PORT:"fallbackPortSSL",LONG_POLLING:"fallbackLongPollingNonSSL",LONG_POLLING_SSL:"fallbackLongPollingSSL"},Skylink.prototype.SM_PROTOCOL_VERSION="0.1.2.3",Skylink.prototype.VIDEO_CODEC={AUTO:"auto",VP8:"VP8",H264:"H264",VP9:"VP9"},Skylink.prototype.AUDIO_CODEC={AUTO:"auto",ISAC:"ISAC",OPUS:"opus",G722:"G722"},Skylink.prototype.VIDEO_RESOLUTION={QQVGA:{width:160,height:120},HQVGA:{width:240,height:160},QVGA:{width:320,height:240},WQVGA:{width:384,height:240},HVGA:{width:480,height:320},VGA:{width:640,height:480},WVGA:{width:768,height:480},FWVGA:{width:854,height:480},SVGA:{width:800,height:600},DVGA:{width:960,height:640},WSVGA:{width:1024,height:576},HD:{width:1280,height:720},HDPLUS:{width:1600,height:900},FHD:{width:1920,height:1080},QHD:{width:2560,height:1440},WQXGAPLUS:{width:3200,height:1800},UHD:{width:3840,height:2160},UHDPLUS:{width:5120,height:2880},FUHD:{width:7680,height:4320},QUHD:{width:15360,height:8640}},Skylink.prototype.MEDIA_ACCESS_FALLBACK_STATE={FALLBACKING:0,FALLBACKED:1,ERROR:-1},Skylink.prototype.RECORDING_STATE={START:0,STOP:1,LINK:2,ERROR:-1},Skylink.prototype._createDataChannel=function(peerId,dataChannel,createAsMessagingChannel){var self=this;if(!self._user.room.connected)return void log.error([peerId,"RTCDataChannel",null,"Aborting of creating or initializing Datachannel as User does not have Room session"]);if(!self._peerConnections[peerId]||self._peerConnections[peerId].signalingState===self.PEER_CONNECTION_STATE.CLOSED)return void log.error([peerId,"RTCDataChannel",null,"Aborting of creating or initializing Datachannel as Peer connection does not exists"]);var channelName=self._user.id+"_"+peerId,channelType=createAsMessagingChannel?self.DATA_CHANNEL_TYPE.MESSAGING:self.DATA_CHANNEL_TYPE.DATA;if(dataChannel&&"object"==typeof dataChannel?channelName=dataChannel.label:"string"==typeof dataChannel&&(channelName=dataChannel,dataChannel=null),!dataChannel)try{dataChannel=self._peerConnections[peerId].createDataChannel(channelName,{reliable:!0,ordered:!0})}catch(error){return log.error([peerId,"RTCDataChannel",channelName,"Failed creating Datachannel ->"],error),void self._trigger("dataChannelState",self.DATA_CHANNEL_STATE.CREATE_ERROR,peerId,error,channelName,channelType,null)}self._dataChannels[peerId]?self._dataChannels[peerId].main&&self._dataChannels[peerId].main.channel.label===channelName&&(channelType=self.DATA_CHANNEL_TYPE.MESSAGING):(log.debug([peerId,"RTCDataChannel",channelName,"initializing main DataChannel"]),channelType=self.DATA_CHANNEL_TYPE.MESSAGING,self._dataChannels[peerId]={}),dataChannel.onerror=function(evt){var channelError=evt.error||evt;log.error([peerId,"RTCDataChannel",channelName,"Datachannel has an exception ->"],channelError),self._trigger("dataChannelState",self.DATA_CHANNEL_STATE.ERROR,peerId,channelError,channelName,channelType,null)},dataChannel.onbufferedamountlow=function(){log.debug([peerId,"RTCDataChannel",channelName,"Datachannel buffering data transfer low"]),self._trigger("dataChannelState",self.DATA_CHANNEL_STATE.BUFFERED_AMOUNT_LOW,peerId,null,channelName,channelType,null)},dataChannel.onmessage=function(event){self._processDataChannelData(event.data,peerId,channelName,channelType)};var onOpenHandlerFn=function(){log.debug([peerId,"RTCDataChannel",channelName,"Datachannel has opened"]),self._trigger("dataChannelState",self.DATA_CHANNEL_STATE.OPEN,peerId,null,channelName,channelType,null)};dataChannel.readyState===self.DATA_CHANNEL_STATE.OPEN?setTimeout(onOpenHandlerFn,500):(self._trigger("dataChannelState",dataChannel.readyState,peerId,null,channelName,channelType,null),dataChannel.onopen=onOpenHandlerFn);var onCloseHandlerFn=function(){log.debug([peerId,"RTCDataChannel",channelName,"Datachannel has closed"]),self._trigger("dataChannelState",self.DATA_CHANNEL_STATE.CLOSED,peerId,null,channelName,channelType,null),self._peerConnections[peerId]&&self._peerConnections[peerId].remoteDescription&&self._peerConnections[peerId].remoteDescription.sdp&&(-1===self._peerConnections[peerId].remoteDescription.sdp.indexOf("m=application")||self._peerConnections[peerId].remoteDescription.sdp.indexOf("m=application 0")>0)||channelType===self.DATA_CHANNEL_TYPE.MESSAGING&&setTimeout(function(){self._peerConnections[peerId]&&self._peerConnections[peerId].signalingState!==self.PEER_CONNECTION_STATE.CLOSED&&self._peerConnections[peerId].localDescription&&self._peerConnections[peerId].localDescription.type===self.HANDSHAKE_PROGRESS.OFFER&&(log.debug([peerId,"RTCDataChannel",channelName,"Reviving Datachannel connection"]),self._createDataChannel(peerId,channelName,!0))},100)};if("firefox"===window.webrtcDetectedBrowser){var hasTriggeredClose=!1,timeBlockAfterClosing=0;dataChannel.onclose=function(){hasTriggeredClose||(hasTriggeredClose=!0,onCloseHandlerFn())};var onFFClosed=setInterval(function(){dataChannel.readyState===self.DATA_CHANNEL_STATE.CLOSED||hasTriggeredClose||5===timeBlockAfterClosing?(clearInterval(onFFClosed),hasTriggeredClose||(hasTriggeredClose=!0,onCloseHandlerFn())):dataChannel.readyState===self.DATA_CHANNEL_STATE.CLOSING&&timeBlockAfterClosing++},1e3)}else dataChannel.onclose=onCloseHandlerFn;channelType===self.DATA_CHANNEL_TYPE.MESSAGING?self._dataChannels[peerId].main={channelName:channelName,channelType:channelType,transferId:null,channel:dataChannel}:self._dataChannels[peerId][channelName]={channelName:channelName,channelType:channelType,transferId:channelName,channel:dataChannel}},Skylink.prototype._sendMessageToDataChannel=function(peerId,data,channelProp,doNotConvert){var self=this;if(channelProp&&channelProp!==peerId||(channelProp="main"),!("object"==typeof data&&data||data&&"string"==typeof data))return void log.warn([peerId,"RTCDataChannel","prop:"+channelProp,"Dropping invalid data ->"],data);if(!self._peerConnections[peerId]||self._peerConnections[peerId].signalingState===self.PEER_CONNECTION_STATE.CLOSED)return void log.warn([peerId,"RTCDataChannel","prop:"+channelProp,"Dropping for sending message as Peer connection does not exists or is closed ->"],data);if(!self._dataChannels[peerId]||!self._dataChannels[peerId][channelProp])return void log.warn([peerId,"RTCDataChannel","prop:"+channelProp,"Dropping for sending message as Datachannel connection does not exists ->"],data);var channelName=self._dataChannels[peerId][channelProp].channelName,channelType=self._dataChannels[peerId][channelProp].channelType,readyState=self._dataChannels[peerId][channelProp].channel.readyState,messageType="object"==typeof data&&data.type===self._DC_PROTOCOL_TYPE.MESSAGE?self.DATA_CHANNEL_MESSAGE_ERROR.MESSAGE:self.DATA_CHANNEL_MESSAGE_ERROR.TRANSFER;if(messageType===self.DATA_CHANNEL_MESSAGE_ERROR.TRANSFER){var transferId=self._dataChannels[peerId][channelProp].transferId;!(transferId&&self._dataTransfers[transferId]&&([self.DATA_TRANSFER_DATA_TYPE.BINARY_STRING,self.DATA_TRANSFER_DATA_TYPE.STRING].indexOf(self._dataTransfers[transferId].chunkType)>-1||Array.isArray(self._dataTransfers[transferId].enforceBSPeers)&&self._dataTransfers[transferId].enforceBSPeers.indexOf(peerId)>-1))||data instanceof Blob||data.type||(messageType=self.DATA_CHANNEL_MESSAGE_ERROR.STREAM_DATA)}if(readyState!==self.DATA_CHANNEL_STATE.OPEN){var notOpenError='Failed sending message as Datachannel connection state is not opened. Current readyState is "'+readyState+'"';throw log.error([peerId,"RTCDataChannel","prop:"+channelProp,notOpenError+" ->"],data),self._trigger("dataChannelState",self.DATA_CHANNEL_STATE.SEND_MESSAGE_ERROR,peerId,new Error(notOpenError),channelName,channelType,messageType),new Error(notOpenError)}try{doNotConvert||"object"!=typeof data?(log.debug([peerId,"RTCDataChannel","prop:"+channelProp,"Sending data with size ->"],data.size||data.length||data.byteLength),self._dataChannels[peerId][channelProp].channel.send(data)):(log.debug([peerId,"RTCDataChannel","prop:"+channelProp,"Sending message ->"],data),self._dataChannels[peerId][channelProp].channel.send(JSON.stringify(data)))}catch(error){throw log.error([peerId,"RTCDataChannel","prop:"+channelProp,"Failed sending message ->"],error),self._trigger("dataChannelState",self.DATA_CHANNEL_STATE.SEND_MESSAGE_ERROR,peerId,error,channelName,channelType,messageType),error}},Skylink.prototype._closeDataChannel=function(peerId,channelProp){var self=this;if(!self._dataChannels[peerId])return void log.warn([peerId,"RTCDataChannel",channelProp||null,"Aborting closing Datachannels as Peer connection does not have Datachannel sessions"]);var closeFn=function(rChannelProp){var channelName=self._dataChannels[peerId][rChannelProp].channelName,channelType=self._dataChannels[peerId][rChannelProp].channelType;self._dataChannels[peerId][rChannelProp].readyState!==self.DATA_CHANNEL_STATE.CLOSED&&(log.debug([peerId,"RTCDataChannel",channelName,"Closing Datachannel"]),self._trigger("dataChannelState",self.DATA_CHANNEL_STATE.CLOSING,peerId,null,channelName,channelType,null),self._dataChannels[peerId][rChannelProp].channel.close(),delete self._dataChannels[peerId][rChannelProp])};if(channelProp){if(!self._dataChannels[peerId][channelProp])return void log.warn([peerId,"RTCDataChannel",channelProp,"Aborting closing Datachannel as it does not exists"]);closeFn(channelProp)}else for(var channelNameProp in self._dataChannels)self._dataChannels[peerId].hasOwnProperty(channelNameProp)&&self._dataChannels[peerId][channelNameProp]&&closeFn(channelNameProp)},Skylink.prototype._CHUNK_FILE_SIZE=49152,Skylink.prototype._MOZ_CHUNK_FILE_SIZE=12288,Skylink.prototype._BINARY_FILE_SIZE=65456,Skylink.prototype._MOZ_BINARY_FILE_SIZE=16384,Skylink.prototype._CHUNK_DATAURL_SIZE=1212,Skylink.prototype._base64ToBlob=function(dataURL){for(var byteString=atob(dataURL),ab=new ArrayBuffer(byteString.length),ia=new Uint8Array(ab),j=0;j<byteString.length;j++)ia[j]=byteString.charCodeAt(j);return new Blob([ab])},Skylink.prototype._blobToBase64=function(data,callback){var fileReader=new FileReader;fileReader.onload=function(){var base64BinaryString=fileReader.result.split(",")[1];callback(base64BinaryString)},fileReader.readAsDataURL(data)},Skylink.prototype._blobToArrayBuffer=function(data,callback){var self=this,fileReader=new FileReader;fileReader.onload=function(){callback(self._isUsingPlugin?new Int8Array(fileReader.result):fileReader.result)},fileReader.readAsArrayBuffer(data)},Skylink.prototype._chunkBlobData=function(blob,chunkSize){var chunksArray=[],startCount=0,endCount=0,blobByteSize=blob.size;if(blobByteSize>chunkSize){for(;blobByteSize-1>endCount;)endCount=startCount+chunkSize,chunksArray.push(blob.slice(startCount,endCount)),startCount+=chunkSize;blobByteSize-(startCount+1)>0&&chunksArray.push(blob.slice(startCount,blobByteSize-1))}else chunksArray.push(blob);return chunksArray},Skylink.prototype._chunkDataURL=function(dataURL,chunkSize){var outputStr=dataURL,dataURLArray=[],startCount=0,endCount=0,dataByteSize=dataURL.size||dataURL.length;if(dataByteSize>chunkSize){for(;dataByteSize-1>endCount;)endCount=startCount+chunkSize,dataURLArray.push(outputStr.slice(startCount,endCount)),startCount+=chunkSize;dataByteSize-(startCount+1)>0&&chunksArray.push(outputStr.slice(startCount,dataByteSize-1))}else dataURLArray.push(outputStr);return dataURLArray},Skylink.prototype._DC_PROTOCOL_TYPE={WRQ:"WRQ",ACK:"ACK",ERROR:"ERROR",CANCEL:"CANCEL",MESSAGE:"MESSAGE"},Skylink.prototype._startDataTransfer=function(chunks,transferInfo,sessionType,sessionChunkType,listOfPeers,callback){var self=this,transferId=self._user.id+"_"+(new Date).getTime(),transferErrors={},transferCompleted=[];if(transferInfo.name||(transferInfo.name=transferId),self._dataTransfers[transferId]=clone(transferInfo),self._dataTransfers[transferId].peers={},self._dataTransfers[transferId].peers.main={},self._dataTransfers[transferId].peers[transferId]={},self._dataTransfers[transferId].sessions={},self._dataTransfers[transferId].chunks=chunks,self._dataTransfers[transferId].enforceBSPeers=[],self._dataTransfers[transferId].enforcedBSInfo={},self._dataTransfers[transferId].sessionType=sessionType,self._dataTransfers[transferId].sessionChunkType=sessionChunkType,self._dataTransfers[transferId].senderPeerId=self._user.id,"blob"===sessionType&&"binary"===sessionChunkType){for(var p=0;p<listOfPeers.length;p++){var protocolVer=((self._peerInformations[listOfPeers[p]]||{}).agent||{}).DTProtocolVersion||"0.1.0";self._isLowerThanVersion(protocolVer,"0.1.1")&&self._dataTransfers[transferId].enforceBSPeers.push(listOfPeers[p])}if(self._dataTransfers[transferId].enforceBSPeers.length>0){var bsChunkSize="firefox"===window.webrtcDetectedBrowser?self._MOZ_CHUNK_FILE_SIZE:self._CHUNK_FILE_SIZE,bsChunks=self._chunkBlobData(new Blob(chunks),bsChunkSize);self._dataTransfers[transferId].enforceBSInfo={chunkSize:4*Math.ceil(bsChunkSize/3),chunkType:self.DATA_TRANSFER_DATA_TYPE.BINARY_STRING,size:4*Math.ceil(transferInfo.originalSize/3),chunks:bsChunks}}}for(var completeFn=function(peerId,error){transferCompleted.indexOf(peerId)>-1||(log.debug([peerId,"RTCDataChannel",transferId,"Data transfer result. Is errors present? ->"],error),transferCompleted.push(peerId),error&&(transferErrors[peerId]=new Error(error)),listOfPeers.length===transferCompleted.length&&(log.log([null,"RTCDataChannel",transferId,"Data transfer request completed"]),"function"==typeof callback&&(Object.keys(transferErrors).length>0?callback({transferId:transferId,transferInfo:self._getTransferInfo(transferId,peerId,!1,!0,!1),transferErrors:transferErrors,listOfPeers:listOfPeers},null):callback(null,{transferId:transferId,transferInfo:self._getTransferInfo(transferId,peerId,!1,!0,!1),listOfPeers:listOfPeers}))))},i=0;i<listOfPeers.length;i++){var MCUInteropStatus=self._startDataTransferToPeer(transferId,listOfPeers[i],completeFn,null,null);"boolean"==typeof MCUInteropStatus&&(MCUInteropStatus===!0?self._dataTransfers[transferId].peers.main[listOfPeers[i]]=!0:self._dataTransfers[transferId].peers[transferId][listOfPeers[i]]=!0)}self._hasMCU&&(Object.keys(self._dataTransfers[transferId].peers.main).length>0&&self._startDataTransferToPeer(transferId,"MCU",completeFn,"main",Object.keys(self._dataTransfers[transferId].peers.main)),Object.keys(self._dataTransfers[transferId].peers[transferId]).length>0&&self._startDataTransferToPeer(transferId,"MCU",completeFn,transferId,Object.keys(self._dataTransfers[transferId].peers[transferId])))},Skylink.prototype._startDataTransferToPeer=function(transferId,peerId,callback,channelProp,targetPeers){var self=this,peerConnectionStateCbFn=null,dataChannelStateCbFn=null,emitEventFn=function(cb){for(var peers=targetPeers||[peerId],i=0;i<peers.length;i++)cb(peers[i])},returnErrorBeforeTransferFn=function(error){var updatedError="MCU"===peerId?error.replace(/Peer/g,"MCU Peer"):error;emitEventFn(function(evtPeerId){self._trigger("dataTransferState",self.DATA_TRANSFER_STATE.ERROR,transferId,evtPeerId,self._getTransferInfo(transferId,peerId,!0,!0,!1),{message:new Error(updatedError),transferType:self.DATA_TRANSFER_TYPE.UPLOAD})})},sendWRQFn=function(){var size=self._dataTransfers[transferId].size,chunkSize=self._dataTransfers[transferId].chunkSize,chunkType=self._dataTransfers[transferId].sessionChunkType;self._dataTransfers[transferId].enforceBSPeers.indexOf(peerId)>-1&&(log.warn([peerId,"RTCDataChannel",transferId,"Binary data chunks transfer is not yet supported with Peer connecting from Android, iOS and C++ SDK. Fallbacking to binary string data chunks transfer."]),size=self._dataTransfers[transferId].enforceBSInfo.size,chunkSize=self._dataTransfers[transferId].enforceBSInfo.chunkSize,chunkType="string"),self._sendMessageToDataChannel(peerId,{type:self._DC_PROTOCOL_TYPE.WRQ,transferId:transferId,name:self._dataTransfers[transferId].name,size:size,originalSize:self._dataTransfers[transferId].originalSize,dataType:self._dataTransfers[transferId].sessionType,mimeType:self._dataTransfers[transferId].mimeType,chunkType:chunkType,chunkSize:chunkSize,timeout:self._dataTransfers[transferId].timeout,isPrivate:self._dataTransfers[transferId].isPrivate,sender:self._user.id,agent:window.webrtcDetectedBrowser,version:window.webrtcDetectedVersion,target:targetPeers?targetPeers:peerId},channelProp),emitEventFn(function(evtPeerId){self._trigger("incomingDataRequest",transferId,evtPeerId,self._getTransferInfo(transferId,peerId,!1,!1,!1),!0),self._trigger("dataTransferState",self.DATA_TRANSFER_STATE.USER_UPLOAD_REQUEST,transferId,evtPeerId,self._getTransferInfo(transferId,peerId,!0,!1,!1),null)})};if("MCU"!==peerId){var dataTransferStateCbFn=function(state,evtTransferId,evtPeerId,transferInfo,error){if(peerConnectionStateCbFn&&self.off("peerConnectionState",peerConnectionStateCbFn),dataChannelStateCbFn&&self.off("dataChannelState",dataChannelStateCbFn),channelProp&&delete self._dataTransfers[transferId].peers[channelProp][peerId],state===self.DATA_TRANSFER_STATE.UPLOAD_COMPLETED?callback(peerId,null):callback(peerId,error.message.message||error.message.toString()),self._hasMCU&&self._dataTransfers[transferId].direction===self.DATA_TRANSFER_TYPE.UPLOAD){if(0!==Object.keys(self._dataTransfers[transferId].peers.main).length||0!==Object.keys(self._dataTransfers[transferId].peers[transferId]).length)return;delete self._dataTransfers[transferId]}else delete self._dataTransfers[transferId].sessions[peerId],0===Object.keys(self._dataTransfers[transferId].sessions).length&&delete self._dataTransfers[transferId]};self.once("dataTransferState",dataTransferStateCbFn,function(state,evtTransferId,evtPeerId){return self._dataTransfers[transferId]&&(self._hasMCU?self._dataTransfers[transferId].peers.main[peerId]||self._dataTransfers[transferId].peers[transferId][peerId]:self._dataTransfers[transferId].sessions[peerId])?evtTransferId===transferId&&evtPeerId===peerId&&[self.DATA_TRANSFER_STATE.UPLOAD_COMPLETED,self.DATA_TRANSFER_STATE.ERROR,self.DATA_TRANSFER_STATE.CANCEL,self.DATA_TRANSFER_STATE.REJECTED].indexOf(state)>-1:(dataTransferStateCbFn&&self.off("dataTransferState",dataTransferStateCbFn),peerConnectionStateCbFn&&self.off("peerConnectionState",peerConnectionStateCbFn),void(dataChannelStateCbFn&&self.off("dataChannelState",dataChannelStateCbFn)))})}if(!self._peerConnections[peerId])return void returnErrorBeforeTransferFn("Unable to start data transfer as Peer connection does not exists.");if(!self._peerInformations[peerId])return void returnErrorBeforeTransferFn("Unable to start data transfer as Peer connection does not exists.");if(self._peerConnections[peerId].signalingState!==self.PEER_CONNECTION_STATE.STABLE)return void returnErrorBeforeTransferFn("Unable to start data transfer as Peer connection is not stable.");if(!self._dataTransfers[transferId])return void returnErrorBeforeTransferFn("Unable to start data transfer as data transfer session is not in order.");if(!self._dataChannels[peerId]||!self._dataChannels[peerId].main)return void returnErrorBeforeTransferFn("Unable to start data transfer as Peer Datachannel connection does not exists.");if(self._dataChannels[peerId].main.channel.readyState!==self.DATA_CHANNEL_STATE.OPEN)return void returnErrorBeforeTransferFn("Unable to start data transfer as Peer Datachannel connection is not opened.");var protocolVer=(self._peerInformations[peerId].agent||{}).DTProtocolVersion||"0.1.0",requireInterop=self._isLowerThanVersion(protocolVer,"0.1.0.1");return self._isLowerThanVersion(protocolVer,"0.1.1")&&"data"===self._dataTransfers[transferId].sessionType&&"string"===self._dataTransfers[transferId].sessionChunkType?void returnErrorBeforeTransferFn("Unable to start data transfer as Peer do not support DATA_URL type of data transfers"):"MCU"!==peerId&&self._hasMCU?(channelProp=requireInterop?"main":transferId,peerConnectionStateCbFn=function(){returnErrorBeforeTransferFn("Data transfer terminated as Peer connection is not stable.")},self.once("peerConnectionState",peerConnectionStateCbFn,function(state,evtPeerId){return self._dataTransfers[transferId]?state!==self.PEER_CONNECTION_STATE.STABLE&&evtPeerId===peerId:void self.off("peerConnectionState",peerConnectionStateCbFn)}),requireInterop):(requireInterop||"main"===channelProp)&&self._dataChannels[peerId].main.transferId?void returnErrorBeforeTransferFn("Unable to start data transfer as Peer Datachannel has a data transfer in-progress."):(self._dataTransfers[transferId].sessions[peerId]={timer:null,ackN:0},dataChannelStateCbFn=function(state,evtPeerId,error){self._dataTransfers[transferId].sessions[peerId].ackN>=self._dataTransfers[transferId].chunks.length-1||returnErrorBeforeTransferFn(error?error.message||error.toString():"Data transfer terminated as Peer Datachannel connection closed abruptly.")},self.once("dataChannelState",dataChannelStateCbFn,function(state,evtPeerId,error,channelName,channelType){return self._dataTransfers[transferId]&&self._dataTransfers[transferId].sessions[peerId]?evtPeerId!==peerId||(channelType===self.DATA_CHANNEL_TYPE.DATA?channelName!==transferId:0)?void 0:state===self.DATA_CHANNEL_STATE.OPEN&&channelType===self.DATA_CHANNEL_TYPE.DATA&&channelName===transferId?(sendWRQFn(),!1):[self.DATA_CHANNEL_STATE.CREATE_ERROR,self.DATA_CHANNEL_STATE.ERROR,self.DATA_CHANNEL_STATE.CLOSING,self.DATA_CHANNEL_STATE.CLOSED].indexOf(state)>-1:void self.off("dataChannelState",dataChannelStateCbFn)}),void(requireInterop&&"MCU"!==peerId||"main"===channelProp?(self._dataChannels[peerId].main.transferId=transferId,sendWRQFn()):(channelProp=transferId,self._createDataChannel(peerId,transferId))))},Skylink.prototype._getTransferInfo=function(transferId,peerId,returnDataProp,hidePercentage,returnDataAtStart){if(!this._dataTransfers[transferId])return{};var transferInfo={name:this._dataTransfers[transferId].name,size:this._dataTransfers[transferId].size,dataType:this._dataTransfers[transferId].dataType||this.DATA_TRANSFER_SESSION_TYPE.BLOB,mimeType:this._dataTransfers[transferId].mimeType||null,chunkSize:this._dataTransfers[transferId].chunkSize,chunkType:this._dataTransfers[transferId].chunkType,timeout:this._dataTransfers[transferId].timeout,isPrivate:this._dataTransfers[transferId].isPrivate,direction:this._dataTransfers[transferId].direction};if(this._dataTransfers[transferId].originalSize?transferInfo.size=this._dataTransfers[transferId].originalSize:this._dataTransfers[transferId].chunkType===this.DATA_TRANSFER_DATA_TYPE.BINARY_STRING&&(transferInfo.size=Math.ceil(3*transferInfo.size/4)),!hidePercentage){if(transferInfo.percentage=0,!this._dataTransfers[transferId].sessions[peerId])return returnDataProp&&(transferInfo.data=null),transferInfo;if(this._dataTransfers[transferId].direction===this.DATA_TRANSFER_TYPE.DOWNLOAD)this._dataTransfers[transferId].sessions[peerId].receivedSize===this._dataTransfers[transferId].sessions[peerId].size?transferInfo.percentage=100:transferInfo.percentage=parseFloat((this._dataTransfers[transferId].sessions[peerId].receivedSize/this._dataTransfers[transferId].size*100).toFixed(2),10);else{var chunksLength=this._dataTransfers[transferId].enforceBSPeers.indexOf(peerId)>-1?this._dataTransfers[transferId].enforceBSInfo.chunks.length:this._dataTransfers[transferId].chunks.length;this._dataTransfers[transferId].sessions[peerId].ackN===chunksLength?transferInfo.percentage=100:transferInfo.percentage=parseFloat((this._dataTransfers[transferId].sessions[peerId].ackN/chunksLength*100).toFixed(2),10)}returnDataProp&&("number"!=typeof returnDataAtStart?100===transferInfo.percentage?transferInfo.data=this._getTransferData(transferId):transferInfo.data=null:(transferInfo.percentage=returnDataAtStart,0===returnDataAtStart&&(transferInfo.data=this._getTransferData(transferId))))}return transferInfo},Skylink.prototype._getTransferData=function(transferId){if(!this._dataTransfers[transferId])return null;if(this._dataTransfers[transferId].dataType===this.DATA_TRANSFER_SESSION_TYPE.BLOB){var mimeType={name:this._dataTransfers[transferId].name};return this._dataTransfers[transferId].mimeType&&(mimeType.type=this._dataTransfers[transferId].mimeType),new Blob(this._dataTransfers[transferId].chunks,mimeType)}return this._dataTransfers[transferId].chunks.join("")},Skylink.prototype._handleDataTransferTimeoutForPeer=function(transferId,peerId,setPeerTO){var self=this;return self._dataTransfers[transferId]&&self._dataTransfers[transferId].sessions[peerId]?(log.debug([peerId,"RTCDataChannel",transferId,"Clearing data transfer timer for Peer."]),self._dataTransfers[transferId].sessions[peerId].timer&&clearTimeout(self._dataTransfers[transferId].sessions[peerId].timer),self._dataTransfers[transferId].sessions[peerId].timer=null,void(setPeerTO&&(log.debug([peerId,"RTCDataChannel",transferId,"Setting data transfer timer for Peer."]),
self._dataTransfers[transferId].sessions[peerId].timer=setTimeout(function(){if(!self._dataTransfers[transferId]||!self._dataTransfers[transferId].sessions[peerId])return void log.debug([peerId,"RTCDataChannel",transferId,"Data transfer already ended for Peer. Ignoring expired timeout."]);if(!self._user.room.connected)return void log.debug([peerId,"RTCDataChannel",transferId,"User is not in Room. Ignoring expired timeout."]);if(!self._dataChannels[peerId])return void log.debug([peerId,"RTCDataChannel",transferId,"Datachannel connection does not exists. Ignoring expired timeout."]);log.error([peerId,"RTCDataChannel",transferId,"Data transfer response has timed out."]);var emitEventFn=function(cb){if("MCU"===peerId){for(var broadcastedPeers=[self._dataTransfers[transferId].peers.main,self._dataTransfers[transferId].peers[transferId]],i=0;i<broadcastedPeers.length;i++)if(broadcastedPeers[i])for(var bcPeerId in broadcastedPeers[i])broadcastedPeers[i].hasOwnProperty(bcPeerId)&&broadcastedPeers[i][bcPeerId]&&cb(bcPeerId)}else cb(peerId)},errorMsg="Connection Timeout. Longer than "+self._dataTransfers[transferId].timeout+" seconds. Connection is abolished.";self._sendMessageToDataChannel(peerId,{type:self._DC_PROTOCOL_TYPE.ERROR,content:errorMsg,isUploadError:self._dataTransfers[transferId].direction===self.DATA_TRANSFER_TYPE.UPLOAD,sender:self._user.id,name:self._dataTransfers[transferId].name},self._dataChannels[peerId][transferId]?transferId:"main"),emitEventFn(function(evtPeerId){self._trigger("dataTransferState",self.DATA_TRANSFER_STATE.ERROR,transferId,peerId,self._getTransferInfo(transferId,peerId,!0,!1,!1),{transferType:self.DATA_TRANSFER_TYPE.DOWNLOAD,message:new Error(errorMsg)})})},1e3*self._dataTransfers[transferId].timeout)))):void log.debug([peerId,"RTCDataChannel",transferId,"Data transfer does not exists for Peer. Ignoring timeout."])},Skylink.prototype._processDataChannelData=function(rawData,peerId,channelName,channelType){var self=this,channelProp=channelType===self.DATA_CHANNEL_TYPE.MESSAGING?"main":channelName,transferId="main"===channelProp?self._dataChannels[peerId].main.transferId:channelName;if(!self._peerConnections[peerId])return void log.warn([peerId,"RTCDataChannel",channelName,"Dropping data received from Peer as connection is not present ->"],rawData);if(!self._dataChannels[peerId]||!self._dataChannels[peerId][channelProp])return void log.warn([peerId,"RTCDataChannel",channelName,"Dropping data received from Peer as Datachannel connection is not present ->"],rawData);if("string"==typeof rawData)try{var protocolData=JSON.parse(rawData);if(log.debug([peerId,"RTCDataChannel",channelProp,"Received protocol message ->"],protocolData),[self._DC_PROTOCOL_TYPE.ACK,self._DC_PROTOCOL_TYPE.ERROR,self._DC_PROTOCOL_TYPE.CANCEL].indexOf(protocolData.type)>-1&&!(transferId&&self._dataTransfers[transferId]&&self._dataTransfers[transferId].sessions[peerId]))return void log.warn([peerId,"RTCDataChannel",channelProp,"Discarded protocol message as data transfer session is not present ->"],protocolData);switch(protocolData.type){case self._DC_PROTOCOL_TYPE.WRQ:if(transferId&&self._dataTransfers[transferId]&&self._dataTransfers[transferId].sessions[peerId])return log.warn([peerId,"RTCDataChannel",channelProp,"Rejecting bidirectional data transfer request as it is currently not supported in the SDK"]),void self._sendMessageToDataChannel(peerId,{type:self._DC_PROTOCOL_TYPE.ACK,ackN:-1,sender:self._user.id},channelProp);self._WRQProtocolHandler(peerId,protocolData,channelProp);break;case self._DC_PROTOCOL_TYPE.ACK:self._ACKProtocolHandler(peerId,protocolData,channelProp);break;case self._DC_PROTOCOL_TYPE.ERROR:self._ERRORProtocolHandler(peerId,protocolData,channelProp);break;case self._DC_PROTOCOL_TYPE.CANCEL:self._CANCELProtocolHandler(peerId,protocolData,channelProp);break;case self._DC_PROTOCOL_TYPE.MESSAGE:self._MESSAGEProtocolHandler(peerId,protocolData,channelProp);break;default:log.warn([peerId,"RTCDataChannel",channelProp,"Discarded unknown protocol message ->"],protocolData)}}catch(error){if(rawData.indexOf("{")>-1&&rawData.indexOf("}")>0)return log.error([peerId,"RTCDataChannel",channelProp,"Received error ->"],error),void self._trigger("dataChannelState",self.DATA_CHANNEL_STATE.ERROR,peerId,error,channelName,channelType,null);if(!(transferId&&self._dataTransfers[transferId]&&self._dataTransfers[transferId].sessions[peerId]))return void log.warn([peerId,"RTCDataChannel",channelProp,"Discarded data chunk as data transfer session is not present ->"],rawData);if(self._dataTransfers[transferId].chunks[self._dataTransfers[transferId].sessions[peerId].ackN])return void log.warn([peerId,"RTCDataChannel",transferId,"Dropping data chunk as it has already been added ->"],rawData);self.DATA_TRANSFER_DATA_TYPE.BINARY_STRING;if(self._dataTransfers[transferId].dataType===self.DATA_TRANSFER_SESSION_TYPE.DATA_URL)log.debug([peerId,"RTCDataChannel",channelProp,"Received string data chunk @"+self._dataTransfers[transferId].sessions[peerId].ackN+" with size ->"],rawData.length||rawData.size),self._DATAProtocolHandler(peerId,rawData,self.DATA_TRANSFER_DATA_TYPE.STRING,rawData.length||rawData.size||0,channelProp);else{var removeSpaceData=rawData.replace(/\s|\r|\n/g,"");log.debug([peerId,"RTCDataChannel",channelProp,"Received binary string data chunk @"+self._dataTransfers[transferId].sessions[peerId].ackN+" with size ->"],removeSpaceData.length||removeSpaceData.size),self._DATAProtocolHandler(peerId,self._base64ToBlob(removeSpaceData),self.DATA_TRANSFER_DATA_TYPE.BINARY_STRING,removeSpaceData.length||removeSpaceData.size||0,channelProp)}}else if(rawData instanceof Blob)transferId&&self._dataTransfers[transferId]?log.debug([peerId,"RTCDataChannel",channelProp,"Received blob data chunk @"+self._dataTransfers[transferId].sessions[peerId].ackN+" with size ->"],rawData.size):log.debug([peerId,"RTCDataChannel",channelProp,"Received blob stream data chunk with size ->"],rawData.size),self._DATAProtocolHandler(peerId,rawData,self.DATA_TRANSFER_DATA_TYPE.BLOB,rawData.size,channelProp);else{var byteArray=rawData;rawData.constructor&&"Array"===rawData.constructor.name&&(byteArray=new Int8Array(rawData));var blob=new Blob([byteArray]);transferId&&self._dataTransfers[transferId]?log.debug([peerId,"RTCDataChannel",channelProp,"Received arraybuffer data chunk @"+self._dataTransfers[transferId].sessions[peerId].ackN+" with size ->"],blob.size):log.debug([peerId,"RTCDataChannel",channelProp,"Received arraybuffer stream data chunk with size ->"],blob.size),self._DATAProtocolHandler(peerId,blob,self.DATA_TRANSFER_DATA_TYPE.ARRAY_BUFFER,blob.size,channelProp)}},Skylink.prototype._WRQProtocolHandler=function(peerId,data,channelProp){var self=this,transferId="main"===channelProp?data.transferId||peerId+"_"+(new Date).getTime():channelProp,senderPeerId=data.sender||peerId;"data"===data.dataType&&"blob"===data.chunkType||(self._dataTransfers[transferId]={name:data.name||transferId,size:data.size||0,chunkSize:data.chunkSize,originalSize:data.originalSize||0,timeout:data.timeout||60,isPrivate:!!data.isPrivate,senderPeerId:data.sender||peerId,dataType:self.DATA_TRANSFER_SESSION_TYPE.BLOB,mimeType:data.mimeType||null,chunkType:self.DATA_TRANSFER_DATA_TYPE.BINARY_STRING,direction:self.DATA_TRANSFER_TYPE.DOWNLOAD,chunks:[],sessions:{},sessionType:data.dataType||"blob",sessionChunkType:data.chunkType||"string"},"data"===self._dataTransfers[transferId].sessionType&&"string"===self._dataTransfers[transferId].sessionChunkType?(self._dataTransfers[transferId].dataType=self.DATA_TRANSFER_SESSION_TYPE.DATA_URL,self._dataTransfers[transferId].chunkType=self.DATA_TRANSFER_DATA_TYPE.STRING):"blob"===self._dataTransfers[transferId].sessionType&&"binary"===self._dataTransfers[transferId].sessionChunkType&&(self._dataTransfers[transferId].chunkType=self.DATA_TRANSFER_DATA_TYPE.ARRAY_BUFFER),self._dataChannels[peerId][channelProp].transferId=transferId,self._dataTransfers[transferId].sessions[peerId]={timer:null,ackN:0,receivedSize:0},self._trigger("incomingDataRequest",transferId,senderPeerId,self._getTransferInfo(transferId,peerId,!1,!1,!1),!1),self._trigger("dataTransferState",self.DATA_TRANSFER_STATE.UPLOAD_REQUEST,transferId,senderPeerId,self._getTransferInfo(transferId,peerId,!0,!1,!1),null))},Skylink.prototype._ACKProtocolHandler=function(peerId,data,channelProp){var self=this,transferId=channelProp,senderPeerId=data.sender||peerId;"main"===channelProp&&(transferId=self._dataChannels[peerId].main.transferId),self._handleDataTransferTimeoutForPeer(transferId,peerId,!1);var emitEventFn=function(cb){if("MCU"===peerId){if(!self._dataTransfers[transferId].peers[channelProp])return void log.warn([peerId,"RTCDataChannel",channelProp,"Dropping triggering of ACK event as Peers list does not exists"]);for(var evtPeerId in self._dataTransfers[transferId].peers[channelProp])self._dataTransfers[transferId].peers[channelProp].hasOwnProperty(evtPeerId)&&self._dataTransfers[transferId].peers[channelProp][evtPeerId]&&cb(evtPeerId)}else cb(senderPeerId)};if(data.ackN>-1){if(0===data.ackN)emitEventFn(function(evtPeerId){self._trigger("dataTransferState",self.DATA_TRANSFER_STATE.UPLOAD_STARTED,transferId,evtPeerId,self._getTransferInfo(transferId,peerId,!0,!1,0),null)});else if(self._dataTransfers[transferId].enforceBSPeers.indexOf(peerId)>-1?data.ackN===self._dataTransfers[transferId].enforceBSInfo.chunks.length:data.ackN===self._dataTransfers[transferId].chunks.length)return self._dataTransfers[transferId].sessions[peerId].ackN=data.ackN,emitEventFn(function(evtPeerId){self._trigger("incomingData",self._getTransferData(transferId),transferId,evtPeerId,self._getTransferInfo(transferId,peerId,!1,!1,!1),!0),self._trigger("dataTransferState",self.DATA_TRANSFER_STATE.UPLOAD_COMPLETED,transferId,evtPeerId,self._getTransferInfo(transferId,peerId,!0,!1,100),null)}),void(self._dataChannels[peerId][channelProp]&&(self._dataChannels[peerId][channelProp].transferId=null,"main"!==channelProp&&self._closeDataChannel(peerId,channelProp)));var uploadFn=function(chunk){self._sendMessageToDataChannel(peerId,chunk,channelProp,!0),data.ackN<self._dataTransfers[transferId].chunks.length&&emitEventFn(function(evtPeerId){self._trigger("dataTransferState",self.DATA_TRANSFER_STATE.UPLOADING,transferId,evtPeerId,self._getTransferInfo(transferId,peerId,!0,!1,!1),null)}),self._handleDataTransferTimeoutForPeer(transferId,peerId,!0)};self._dataTransfers[transferId].sessions[peerId].ackN=data.ackN,self._dataTransfers[transferId].enforceBSPeers.indexOf(peerId)>-1?self._blobToBase64(self._dataTransfers[transferId].enforceBSInfo.chunks[data.ackN],uploadFn):self._dataTransfers[transferId].chunkType===self.DATA_TRANSFER_DATA_TYPE.BINARY_STRING?self._blobToBase64(self._dataTransfers[transferId].chunks[data.ackN],uploadFn):self._dataTransfers[transferId].chunkType===self.DATA_TRANSFER_DATA_TYPE.ARRAY_BUFFER?self._blobToArrayBuffer(self._dataTransfers[transferId].chunks[data.ackN],uploadFn):uploadFn(self._dataTransfers[transferId].chunks[data.ackN])}else self._trigger("dataTransferState",self.DATA_TRANSFER_STATE.REJECTED,transferId,senderPeerId,self._getTransferInfo(transferId,peerId,!0,!1,!1),{message:new Error("Data transfer terminated as Peer has rejected data transfer request"),transferType:self.DATA_TRANSFER_TYPE.UPLOAD})},Skylink.prototype._MESSAGEProtocolHandler=function(peerId,data,channelProp){var senderPeerId=data.sender||peerId;log.log([senderPeerId,"RTCDataChannel",channelProp,"Received P2P message from peer:"],data),this._trigger("incomingMessage",{content:data.data,isPrivate:data.isPrivate,isDataChannel:!0,targetPeerId:this._user.id,senderPeerId:senderPeerId},senderPeerId,this.getPeerInfo(senderPeerId),!1)},Skylink.prototype._ERRORProtocolHandler=function(peerId,data,channelProp){var self=this,transferId=channelProp,senderPeerId=data.sender||peerId;"main"===channelProp&&(transferId=self._dataChannels[peerId].main.transferId),self._handleDataTransferTimeoutForPeer(transferId,peerId,!1);var emitEventFn=function(cb){if("MCU"===peerId){if(!self._dataTransfers[transferId].peers[channelProp])return void log.warn([peerId,"RTCDataChannel",channelProp,"Dropping triggering of ERROR event as Peers list does not exists"]);for(var evtPeerId in self._dataTransfers[transferId].peers[channelProp])self._dataTransfers[transferId].peers[channelProp].hasOwnProperty(evtPeerId)&&self._dataTransfers[transferId].peers[channelProp][evtPeerId]&&cb(evtPeerId)}else cb(senderPeerId)};log.error([peerId,"RTCDataChannel",channelProp,"Received an error from peer ->"],data),emitEventFn(function(evtPeerId){self._trigger("dataTransferState",self.DATA_TRANSFER_STATE.ERROR,transferId,evtPeerId,self._getTransferInfo(transferId,peerID,!0,!1,!1),{message:new Error(data.content),transferType:self._dataTransfers[transferId].direction})})},Skylink.prototype._CANCELProtocolHandler=function(peerId,data,channelProp){var self=this,transferId=channelProp;"main"===channelProp&&(transferId=self._dataChannels[peerId].main.transferId),self._handleDataTransferTimeoutForPeer(transferId,peerId,!1);var emitEventFn=function(cb){if("MCU"===peerId){if(!self._dataTransfers[transferId].peers[channelProp])return void log.warn([peerId,"RTCDataChannel",channelProp,"Dropping triggering of CANCEL event as Peers list does not exists"]);for(var evtPeerId in self._dataTransfers[transferId].peers[channelProp])self._dataTransfers[transferId].peers[channelProp].hasOwnProperty(evtPeerId)&&self._dataTransfers[transferId].peers[channelProp][evtPeerId]&&cb(evtPeerId)}else cb(peerId)};log.error([peerId,"RTCDataChannel",channelProp,"Received data transfer termination from peer ->"],data),emitEventFn(function(evtPeerId){self._trigger("dataTransferState",self.DATA_TRANSFER_STATE.CANCEL,transferId,evtPeerId,self._getTransferInfo(transferId,peerId,!0,!1,!1),{message:new Error(data.content||"Peer has terminated data transfer."),transferType:self._dataTransfers[transferId].direction})})},Skylink.prototype._DATAProtocolHandler=function(peerId,chunk,chunkType,chunkSize,channelProp){var self=this,transferId=channelProp,senderPeerId=peerId;if("main"===channelProp&&(transferId=self._dataChannels[peerId].main.transferId),[self.DATA_TRANSFER_DATA_TYPE.ARRAY_BUFFER,self.DATA_TRANSFER_DATA_TYPE.BLOB].indexOf(chunkType)>-1){if(!transferId||!self._dataTransfers[transferId]||self._dataTransfers[transferId].direction!==self.DATA_TRANSFER_TYPE.DOWNLOAD||"binary"!==self._dataTransfers[transferId].sessionChunkType)return void self._trigger("incomingDataStream",{content:chunk,chunkSize:chunkSize,chunkType:chunkType,isPrivate:!1,listOfPeers:null,targetPeerId:(self._user?self._user.id:null)||null,senderPeerId:peerId},peerId,self.getPeerInfo(peerId),!1);if(!transferId)return}else if(!transferId)return;return self._dataTransfers[transferId].senderPeerId&&(senderPeerId=self._dataTransfers[transferId].senderPeerId),self._handleDataTransferTimeoutForPeer(transferId,peerId,!1),self._dataTransfers[transferId].chunkType=chunkType,self._dataTransfers[transferId].sessions[peerId].receivedSize+=chunkSize,self._dataTransfers[transferId].chunks[self._dataTransfers[transferId].sessions[peerId].ackN]=chunk,self._dataTransfers[transferId].sessions[peerId].receivedSize>=self._dataTransfers[transferId].size?(log.log([peerId,"RTCDataChannel",channelProp,"Data transfer has been completed. Computed size ->"],self._dataTransfers[transferId].sessions[peerId].receivedSize),self._sendMessageToDataChannel(peerId,{type:self._DC_PROTOCOL_TYPE.ACK,sender:self._user.id,ackN:self._dataTransfers[transferId].sessions[peerId].ackN+1},channelProp),self._trigger("incomingData",self._getTransferData(transferId),transferId,senderPeerId,self._getTransferInfo(transferId,peerId,!1,!1,!1),null),void self._trigger("dataTransferState",self.DATA_TRANSFER_STATE.DOWNLOAD_COMPLETED,transferId,senderPeerId,self._getTransferInfo(transferId,peerId,!0,!1,!1),null)):(self._dataTransfers[transferId].sessions[peerId].ackN+=1,self._sendMessageToDataChannel(peerId,{type:self._DC_PROTOCOL_TYPE.ACK,sender:self._user.id,ackN:self._dataTransfers[transferId].sessions[peerId].ackN},channelProp),self._handleDataTransferTimeoutForPeer(transferId,peerId,!0),void self._trigger("dataTransferState",self.DATA_TRANSFER_STATE.DOWNLOADING,transferId,senderPeerId,self._getTransferInfo(transferId,peerId,!0,!1,!1),null))};Skylink.prototype._trigger=function(eventName){var args=Array.prototype.slice.call(arguments),arr=this._EVENTS[eventName],once=this._onceEvents[eventName]||null;if(args.shift(),arr)for(var i=0;i<arr.length;i++)try{if(log.log([null,"Event",eventName,"Event is fired"]),arr[i].apply(this,args)===!1)break}catch(error){throw log.error([null,"Event",eventName,"Exception occurred in event:"],error),error}if(once)for(var j=0;j<once.length;j++)if(once[j][1].apply(this,args)===!0){if(log.log([null,"Event",eventName,"Condition is met. Firing event"]),once[j][0].apply(this,args)===!1)break;once[j]&&!once[j][2]&&(log.log([null,"Event",eventName,"Removing event after firing once"]),once.splice(j,1),j--)}else log.log([null,"Event",eventName,"Condition is still not met. Holding event from being fired"]);log.log([null,"Event",eventName,"Event is triggered"])},Skylink.prototype._condition=function(eventName,callback,checkFirst,condition,fireAlways){if("boolean"==typeof condition&&(fireAlways=condition,condition=null),"function"==typeof callback&&"function"==typeof checkFirst){if(checkFirst())return log.log([null,"Event",eventName,"First condition is met. Firing callback"]),void callback();log.log([null,"Event",eventName,"First condition is not met. Subscribing to event"]),this.once(eventName,callback,condition,fireAlways)}else log.error([null,"Event",eventName,"Provided callback or checkFirst is not a function"])},Skylink.prototype._wait=function(callback,condition,intervalTime,fireAlways){if(fireAlways="undefined"==typeof fireAlways?!1:fireAlways,"function"==typeof callback&&"function"==typeof condition){if(condition())return log.log([null,"Event",null,"Condition is met. Firing callback"]),void callback();log.log([null,"Event",null,"Condition is not met. Doing a check."]),intervalTime="number"==typeof intervalTime?intervalTime:50;var doWait=setInterval(function(){condition()&&(log.log([null,"Event",null,"Condition is met after waiting. Firing callback"]),fireAlways||clearInterval(doWait),callback())},intervalTime)}else"function"!=typeof callback&&log.error([null,"Event",null,"Provided callback is not a function"]),"function"!=typeof condition&&log.error([null,"Event",null,"Provided condition is not a function"])},Skylink.prototype._throttle=function(func,prop,wait){var self=this,now=(new Date).getTime();self._timestamp[prop]&&now-self._timestamp[prop]<wait?func(!1):(func(!0),self._timestamp[prop]=now)};var _LOG_KEY="SkylinkJS",_LOG_LEVELS=["error","warn","info","log","debug"],_logLevel=0,_enableDebugMode=!1,_enableDebugStack=!1,_enableDebugTrace=!1,_storedLogs=[],_logFn=function(logLevel,message,debugObject){var outputLog=_LOG_KEY;if("object"==typeof message){if(outputLog+=message[0]?" ["+message[0]+"] -":" -",outputLog+=message[1]?" <<"+message[1]+">>":"",message[2])if(outputLog+=" ","object"==typeof message[2])for(var i=0;i<message[2].length;i++)outputLog+="("+message[2][i]+")";else outputLog+="("+message[2]+")";outputLog+=" "+message[3]}else outputLog+=" - "+message;if(_enableDebugMode&&_enableDebugStack){var logItem=[new Date,_LOG_LEVELS[logLevel],outputLog];"undefined"!=typeof debugObject&&logItem.push(debugObject),_storedLogs.push(logItem)}if(_logLevel>=logLevel&&(logLevel="undefined"==typeof console[_LOG_LEVELS[logLevel]]?3:logLevel,_enableDebugMode&&_enableDebugTrace)){"undefined"==typeof console.trace?logLevel[3]:"trace";"undefined"!=typeof debugObject?"undefined"!=typeof console.trace:"undefined"!=typeof console.trace}},log={debug:function(message,object){_logFn(4,message,object)},log:function(message,object){_logFn(3,message,object)},info:function(message,object){_logFn(2,message,object)},warn:function(message,object){_logFn(1,message,object)},error:function(message,object){_logFn(0,message,object)}};Skylink.prototype.sendBlobData=function(data,timeout,targetPeerId,sendChunksAsBinary,callback){var self=this,listOfPeers=Object.keys(self._peerConnections),sessionType="blob",sessionChunkType="string",transferInfo={name:null,size:null,chunkSize:self._CHUNK_FILE_SIZE,chunkType:self.DATA_TRANSFER_DATA_TYPE.BINARY_STRING,dataType:self.DATA_TRANSFER_SESSION_TYPE.BLOB,mimeType:null,direction:self.DATA_TRANSFER_TYPE.UPLOAD,timeout:60,isPrivate:!1,percentage:0},emitErrorBeforeDataTransferFn=function(error){if(log.error(error),"function"==typeof callback){var transferErrors={};if(0===listOfPeers.length)transferErrors.self=new Error(error);else for(var i=0;i<listOfPeers.length;i++)transferErrors[listOfPeers[i]]=new Error(error);callback({transferId:null,transferInfo:transferInfo,listOfPeers:listOfPeers,transferErrors:transferErrors},null)}};if(listOfPeers.indexOf("MCU")>-1&&listOfPeers.splice(listOfPeers.indexOf("MCU"),1),"number"==typeof timeout?transferInfo.timeout=timeout:Array.isArray(timeout)?listOfPeers=timeout:timeout&&"string"==typeof timeout?listOfPeers=[timeout]:timeout&&"boolean"==typeof timeout?(transferInfo.chunkType=self.DATA_TRANSFER_DATA_TYPE.ARRAY_BUFFER,transferInfo.chunkSize=self._BINARY_FILE_SIZE,sessionChunkType="binary"):"function"==typeof timeout&&(callback=timeout),Array.isArray(targetPeerId)?listOfPeers=targetPeerId:targetPeerId&&"string"==typeof targetPeerId?listOfPeers=[targetPeerId]:targetPeerId&&"boolean"==typeof targetPeerId?(transferInfo.chunkType=self.DATA_TRANSFER_DATA_TYPE.ARRAY_BUFFER,transferInfo.chunkSize=self._BINARY_FILE_SIZE,sessionChunkType="binary"):"function"==typeof targetPeerId&&(callback=targetPeerId),sendChunksAsBinary&&"boolean"==typeof sendChunksAsBinary?(transferInfo.chunkType=self.DATA_TRANSFER_DATA_TYPE.ARRAY_BUFFER,transferInfo.chunkSize=self._BINARY_FILE_SIZE,sessionChunkType="binary"):"function"==typeof sendChunksAsBinary&&(callback=sendChunksAsBinary),"firefox"===window.webrtcDetectedBrowser&&transferInfo.chunkType===self.DATA_TRANSFER_DATA_TYPE.BINARY_STRING&&(transferInfo.chunkSize=self._MOZ_CHUNK_FILE_SIZE),self._hasMCU&&transferInfo.chunkType===self.DATA_TRANSFER_DATA_TYPE.ARRAY_BUFFER&&(log.warn("Binary data chunks transfer is not yet supported with MCU environment. Fallbacking to binary string data chunks transfer."),transferInfo.chunkType=self.DATA_TRANSFER_DATA_TYPE.BINARY_STRING,transferInfo.chunkSize=self._CHUNK_FILE_SIZE,sessionChunkType="string"),transferInfo.chunkType===self.DATA_TRANSFER_DATA_TYPE.ARRAY_BUFFER&&"firefox"===window.webrtcDetectedBrowser&&(transferInfo.chunkType=self.DATA_TRANSFER_DATA_TYPE.BLOB,transferInfo.chunkSize=self._MOZ_BINARY_FILE_SIZE,sessionChunkType="binary"),!(data&&"object"==typeof data&&data instanceof Blob))return void emitErrorBeforeDataTransferFn("Provided data is not a Blob data");if(transferInfo.name=data.name||null,transferInfo.mimeType=data.type||null,data.size<1)return void emitErrorBeforeDataTransferFn("Provided data is not a valid Blob data.");if(transferInfo.size=data.size,!self._user.room.connected)return void emitErrorBeforeDataTransferFn("Unable to send any blob data. User is not in Room.");if(0===listOfPeers.length)return void emitErrorBeforeDataTransferFn("Unable to send any blob data. There are no Peers to start data transfer with");if(!self._options.enableDataChannel)return void emitErrorBeforeDataTransferFn("Unable to send any blob data. Datachannel is disabled");var chunks=self._chunkBlobData(data,transferInfo.chunkSize);transferInfo.originalSize=transferInfo.size,transferInfo.chunkType===self.DATA_TRANSFER_DATA_TYPE.BINARY_STRING&&(transferInfo.size=4*Math.ceil(transferInfo.size/3),transferInfo.chunkSize=4*Math.ceil(transferInfo.chunkSize/3)),self._startDataTransfer(chunks,transferInfo,sessionType,sessionChunkType,listOfPeers,callback)},Skylink.prototype.sendURLData=function(data,timeout,targetPeerId,callback){var self=this,listOfPeers=Object.keys(self._peerConnections),sessionType="data",sessionChunkType="string",transferInfo={name:null,size:null,chunkSize:self._CHUNK_FILE_SIZE,chunkType:self.DATA_TRANSFER_DATA_TYPE.STRING,dataType:self.DATA_TRANSFER_SESSION_TYPE.DATA_URL,mimeType:null,direction:self.DATA_TRANSFER_TYPE.UPLOAD,timeout:60,isPrivate:!1,percentage:0},emitErrorBeforeDataTransferFn=function(error){if(log.error(error),"function"==typeof callback){var transferErrors={};if(0===listOfPeers.length)transferErrors.self=new Error(error);else for(var i=0;i<listOfPeers.length;i++)transferErrors[listOfPeers[i]]=new Error(error);callback({transferId:null,transferInfo:transferInfo,listOfPeers:listOfPeers,transferErrors:transferErrors},null)}};if(listOfPeers.indexOf("MCU")>-1&&listOfPeers.splice(listOfPeers.indexOf("MCU"),1),"number"==typeof timeout?transferInfo.timeout=timeout:Array.isArray(timeout)?listOfPeers=timeout:timeout&&"string"==typeof timeout?listOfPeers=[timeout]:"function"==typeof timeout&&(callback=timeout),Array.isArray(targetPeerId)?listOfPeers=targetPeerId:targetPeerId&&"string"==typeof targetPeerId?listOfPeers=[targetPeerId]:"function"==typeof targetPeerId&&(callback=targetPeerId),!data||"string"!=typeof data)return void emitErrorBeforeDataTransferFn("Provided data is not a dataURL");if(transferInfo.size=data.length||data.size,!self._user.room.connected)return void emitErrorBeforeDataTransferFn("Unable to send any dataURL. User is not in Room.");if(0===listOfPeers.length)return void emitErrorBeforeDataTransferFn("Unable to send any dataURL. There are no Peers to start data transfer with");if(!self._options.enableDataChannel)return void emitErrorBeforeDataTransferFn("Unable to send any dataURL. Datachannel is disabled");var chunks=self._chunkDataURL(data,transferInfo.chunkSize);transferInfo.originalSize=transferInfo.size,self._startDataTransfer(chunks,transferInfo,sessionType,sessionChunkType,listOfPeers,callback)},Skylink.prototype.respondBlobRequest=Skylink.prototype.acceptDataTransfer=function(peerId,transferId,accept){var self=this;if("string"!=typeof transferId&&"string"!=typeof peerId)return void log.error([peerId,"RTCDataChannel",transferId,"Aborting accept data transfer as data transfer ID or peer ID is not provided"]);if(!self._dataChannels[peerId])return void log.error([peerId,"RTCDataChannel",transferId,"Aborting accept data transfer as Peer does not have any Datachannel connections"]);if(!self._dataTransfers[transferId])return void log.error([peerId,"RTCDataChannel",transferId,"Aborting accept data transfer as invalid transfer ID is provided"]);var channelProp="main";if(self._dataChannels[peerId][transferId]&&(channelProp=transferId),accept){log.debug([peerId,"RTCDataChannel",transferId,"Accepted data transfer and starting ..."]);var dataChannelStateCbFn=function(state,evtPeerId,error,cN,cT){self._trigger("dataTransferState",self.DATA_TRANSFER_STATE.ERROR,transferId,peerId,self._getTransferInfo(transferId,peerId,!0,!1,!1),{transferType:self.DATA_TRANSFER_TYPE.DOWNLOAD,message:new Error("Data transfer terminated as Peer Datachannel connection closed abruptly.")})};self.once("dataChannelState",dataChannelStateCbFn,function(state,evtPeerId,error,channelName,channelType){return self._dataTransfers[transferId]&&self._dataTransfers[transferId].sessions[peerId]?evtPeerId===peerId&&("main"===channelProp?channelType===self.DATA_CHANNEL_STATE.MESSAGING:channelName===transferId)&&[self.DATA_CHANNEL_STATE.CLOSING,self.DATA_CHANNEL_STATE.CLOSED,self.DATA_CHANNEL_STATE.ERROR].indexOf(state)>-1:void self.off("dataChannelState",dataChannelStateCbFn)}),self.once("dataTransferState",function(){dataChannelStateCbFn&&self.off("dataChannelState",dataChannelStateCbFn),delete self._dataTransfers[transferId],self._dataChannels[peerId]&&("main"===channelProp&&self._dataChannels[peerId].main&&(self._dataChannels[peerId].main.transferId=null),channelProp===transferId&&self._closeDataChannel(peerId,transferId))},function(state,evtTransferId,evtPeerId){return evtTransferId===transferId&&evtPeerId===peerId&&[self.DATA_TRANSFER_STATE.ERROR,self.DATA_TRANSFER_STATE.CANCEL,self.DATA_TRANSFER_STATE.DOWNLOAD_COMPLETED].indexOf(state)>-1}),self._sendMessageToDataChannel(peerId,{type:self._DC_PROTOCOL_TYPE.ACK,sender:self._user.id,ackN:0},channelProp),self._trigger("dataTransferState",self.DATA_TRANSFER_STATE.DOWNLOAD_STARTED,transferId,peerId,self._getTransferInfo(transferId,peerId,!0,!1,!1),null)}else log.warn([peerId,"RTCDataChannel",transferId,"Rejected data transfer and data transfer request has been aborted"]),self._sendMessageToDataChannel(peerId,{type:self._DC_PROTOCOL_TYPE.ACK,sender:self._user.id,ackN:-1},channelProp),"main"===channelProp&&self._dataChannels[peerId].main&&(self._dataChannels[peerId].main.transferId=null),self._trigger("dataTransferState",self.DATA_TRANSFER_STATE.USER_REJECTED,transferId,peerId,self._getTransferInfo(transferId,peerId,!0,!1,!1),{message:new Error("Data transfer terminated as User has rejected data transfer request."),transferType:self.DATA_TRANSFER_TYPE.DOWNLOAD}),delete self._dataTransfers[transferId]},Skylink.prototype.cancelBlobTransfer=Skylink.prototype.cancelDataTransfer=function(peerId,transferId){var self=this;if(!transferId||"string"!=typeof transferId)return void log.error([peerId,"RTCDataChannel",transferId,"Aborting cancel data transfer as data transfer ID is not provided"]);if(!peerId||"string"!=typeof peerId)return void log.error([peerId,"RTCDataChannel",transferId,"Aborting cancel data transfer as peer ID is not provided"]);if(!self._dataTransfers[transferId])return void log.error([peerId,"RTCDataChannel",transferId,"Aborting cancel data transfer as data transfer session does not exists."]);log.debug([peerId,"RTCDataChannel",transferId,"Canceling data transfer ..."]);var emitEventFn=function(peers,transferInfoPeerId){for(var i=0;i<peers.length;i++)self._trigger("dataTransferState",self.DATA_TRANSFER_STATE.CANCEL,transferId,peers[i],self._getTransferInfo(transferId,transferInfoPeerId,!1,!1,!1),{transferType:self._dataTransfers[transferId].direction,message:new Error("User cancelled download transfer")})};if(self._hasMCU&&self._dataTransfers[transferId].direction===self.DATA_TRANSFER_TYPE.UPLOAD){if(!self._dataChannels.MCU)return void log.error([peerId,"RTCDataChannel",transferId,"Aborting cancel data transfer as Peer does not have any Datachannel connections"]);log.warn([peerId,"RTCDataChannel",transferId,"Aborting all data transfers to Peers"]),Object.keys(self._dataTransfers[transferId].peers.main).length>0&&self._sendMessageToDataChannel("MCU",{type:self._DC_PROTOCOL_TYPE.CANCEL,sender:self._user.id,content:"Peer cancelled download transfer",name:self._dataTransfers[transferId].name,ackN:0},"main"),Object.keys(self._dataTransfers[transferId].peers[transferId]).length>0&&self._sendMessageToDataChannel("MCU",{type:self._DC_PROTOCOL_TYPE.CANCEL,sender:self._user.id,content:"Peer cancelled download transfer",name:self._dataTransfers[transferId].name,ackN:0},transferId),emitEventFn(Object.keys(self._dataTransfers[transferId].peers.main).concat(Object.keys(self._dataTransfers[transferId].peers[transferId])))}else{var channelProp="main";if(!self._dataChannels[peerId])return void log.error([peerId,"RTCDataChannel",transferId,"Aborting cancel data transfer as Peer does not have any Datachannel connections"]);self._dataChannels[peerId][transferId]&&(channelProp=transferId),self._sendMessageToDataChannel(peerId,{type:self._DC_PROTOCOL_TYPE.CANCEL,sender:self._user.id,content:"Peer cancelled download transfer",name:self._dataTransfers[transferId].name,ackN:0},channelProp),emitEventFn([peerId],peerId)}},Skylink.prototype.sendP2PMessage=function(message,targetPeerId){var listOfPeers=Object.keys(this._dataChannels),isPrivate=!1;if(Array.isArray(targetPeerId)?(listOfPeers=targetPeerId,isPrivate=!0):targetPeerId&&"string"==typeof targetPeerId&&(listOfPeers=[targetPeerId],isPrivate=!0),!this._user.room.connected)return void log.error("Unable to send message as User is not in Room. ->",message);
if(!this._options.enableDataChannel)return void log.error("Unable to send message as User does not have Datachannel enabled. ->",message);for(var i=0;i<listOfPeers.length;i++){var peerId=listOfPeers[i];this._dataChannels[peerId]?"MCU"===peerId?(listOfPeers.splice(i,1),i--):this._hasMCU||(log.debug([peerId,"RTCDataChannel",null,"Sending "+(isPrivate?"private":"")+" P2P message to Peer"]),this._sendMessageToDataChannel(peerId,{type:this._DC_PROTOCOL_TYPE.MESSAGE,isPrivate:isPrivate,sender:this._user.id,target:peerId,data:message},"main")):(log.error([peerId,"RTCDataChannel",null,"Dropping of sending message to Peer as Datachannel connection does not exists"]),listOfPeers.splice(i,1),i--)}0===listOfPeers.length&&log.warn("Currently there are no Peers to send P2P message to (unless the message is queued and there are Peer connected by then)."),this._hasMCU&&(log.debug(["MCU","RTCDataChannel",null,"Broadcasting "+(isPrivate?"private":"")+" P2P message to Peers"]),this._sendMessageToDataChannel("MCU",{type:this._DC_PROTOCOL_TYPE.MESSAGE,isPrivate:isPrivate,sender:this._user.id,target:listOfPeers,data:message},"main")),this._trigger("incomingMessage",{content:message,isPrivate:isPrivate,targetPeerId:targetPeerId||null,listOfPeers:listOfPeers,isDataChannel:!0,senderPeerId:this._user.id},this._user.id,this.getPeerInfo(),!0)},Skylink.prototype.streamData=function(data,targetPeerId){var self=this,listOfPeers=Object.keys(self._dataChannels),isPrivate=!1;return Array.isArray(targetPeerId)?(listOfPeers=targetPeerId,isPrivate=!0):targetPeerId&&"string"==typeof targetPeerId&&(listOfPeers=[targetPeerId],isPrivate=!0),data&&data instanceof Blob?data.size>65456?void log.error("Unable to stream data chunk greater that specified maximum size (65456) ->",data):self._options.enableDataChannel?self._hasMCU?void log.error("Unable to stream data chunk as MCU does not support this functionality. ->",data):void self._blobToArrayBuffer(data,function(arrayBufferData){if(!self._user.room.connected)return void log.error("Unable to stream data chunk as User is not in Room. ->",data);for(var i=0;i<listOfPeers.length;i++){var peerId=listOfPeers[i];if(self._dataChannels[peerId]){var transferId=self._dataChannels[peerId].main.transferId;if(transferId&&self._dataTransfers[transferId]&&self._dataTransfers[transferId].direction===self.DATA_TRANSFER_TYPE.UPLOAD?"binary"===self._dataTransfers[transferId].sessionChunkType&&-1===self._dataTransfers[transferId].enforceBSPeers.indexOf(peerId):!1){log.error([peerId,"RTCDataChannel",null,"Dropping of streaming data chunk to Peer as Datachannel connection is streaming binary data chunks for blob transfer"]),listOfPeers.splice(i,1),i--;continue}log.debug([peerId,"RTCDataChannel",null,"Streaming "+(isPrivate?"private":"")+" data chunk to Peer"]),self._sendMessageToDataChannel(peerId,arrayBufferData,"main",!0)}else log.error([peerId,"RTCDataChannel",null,"Dropping of streaming data chunk to Peer as Datachannel connection does not exists"]),listOfPeers.splice(i,1),i--}0===listOfPeers.length&&log.warn("Currently there are no Peers to stream data chunk."),self._trigger("incomingDataStream",{content:data,chunkSize:data.size,chunkType:self.DATA_TRANSFER_DATA_TYPE.ARRAY_BUFFER,isPrivate:isPrivate,targetPeerId:targetPeerId||null,listOfPeers:listOfPeers,senderPeerId:self._user.id},self._user.id,self.getPeerInfo(),!0)}):void log.error("Unable to stream data chunk as User does not have Datachannel enabled. ->",data):void log.error("Unable to stream invalid data chunk ->",data)},Skylink.prototype.refreshConnection=function(targetPeerId,iceRestart,callback){var self=this,listOfPeers=Object.keys(self._peerConnections),doIceRestart=!1;Array.isArray(targetPeerId)?listOfPeers=targetPeerId:"string"==typeof targetPeerId?listOfPeers=[targetPeerId]:"boolean"==typeof targetPeerId?doIceRestart=targetPeerId:"function"==typeof targetPeerId&&(callback=targetPeerId),"boolean"==typeof iceRestart?doIceRestart=iceRestart:"function"==typeof iceRestart&&(callback=iceRestart);var emitErrorForPeersFn=function(error){if(log.error(error),"function"==typeof callback){var listOfPeerErrors={};if(0===listOfPeers.length)listOfPeerErrors.self=new Error(error);else for(var i=0;i<listOfPeers.length;i++)listOfPeerErrors[listOfPeers[i]]=new Error(error);callback({refreshErrors:listOfPeerRestartErrors,listOfPeers:listOfPeers},null)}};return 0!==listOfPeers.length||self._hasMCU&&!self._mcuUseRenegoRestart?"edge"===window.webrtcDetectedBrowser?void emitErrorForPeersFn("Edge browser currently does not support renegotiation."):void self._throttle(function(runFn){return runFn||!self._hasMCU||self._mcuUseRenegoRestart?void self._refreshPeerConnection(listOfPeers,doIceRestart,callback):void(self._options.throttlingShouldThrowError&&emitErrorForPeersFn("Unable to run as throttle interval has not reached ("+self._options.throttleIntervals.refreshConnection+"ms)."))},"refreshConnection",self._options.throttleIntervals.refreshConnection):void emitErrorForPeersFn("There is currently no peer connections to restart")},Skylink.prototype.getConnectionStatus=function(targetPeerId,callback){var self=this,listOfPeers=Object.keys(self._peerConnections),listOfPeerStats={},listOfPeerErrors={};if(Array.isArray(targetPeerId)?listOfPeers=targetPeerId:"string"==typeof targetPeerId&&targetPeerId?listOfPeers=[targetPeerId]:"function"==typeof targetPeerId&&(callback=targetPeerId,targetPeerId=void 0),0===listOfPeers.length)return listOfPeerErrors.self=new Error("There is currently no peer connections to retrieve connection status"),log.error([null,"RTCStatsReport",null,"Retrieving request failure ->"],listOfPeerErrors.self),void("function"==typeof callback&&callback({listOfPeers:listOfPeers,retrievalErrors:listOfPeerErrors,connectionStats:listOfPeerStats},null));"edge"===window.webrtcDetectedBrowser&&log.warn("Edge browser does not have well support for stats.");for(var completedTaskCounter=[],checkCompletedFn=function(peerId){-1===completedTaskCounter.indexOf(peerId)&&completedTaskCounter.push(peerId),completedTaskCounter.length===listOfPeers.length&&"function"==typeof callback&&(Object.keys(listOfPeerErrors).length>0?callback({listOfPeers:listOfPeers,retrievalErrors:listOfPeerErrors,connectionStats:listOfPeerStats},null):callback(null,{listOfPeers:listOfPeers,connectionStats:listOfPeerStats}))},statsFn=function(peerId){var retrieveFn=function(firstRetrieval,nextCb){return function(err,result){return err?(log.error([peerId,"RTCStatsReport",null,"Retrieval failure ->"],error),listOfPeerErrors[peerId]=error,self._trigger("getConnectionStatusStateChange",self.GET_CONNECTION_STATUS_STATE.RETRIEVE_ERROR,peerId,null,error),checkCompletedFn(peerId),void(firstRetrieval&&delete self._peerStats[peerId])):void(firstRetrieval?nextCb():(listOfPeerStats[peerId]=result,self._trigger("getConnectionStatusStateChange",self.GET_CONNECTION_STATUS_STATE.RETRIEVE_SUCCESS,peerId,listOfPeerStats[peerId],null),checkCompletedFn(peerId)))}};return self._peerStats[peerId]?void self._retrieveStats(peerId,retrieveFn()):(self._peerStats[peerId]={},log.debug([peerId,"RTCStatsReport",null,"Retrieving first report to tabulate results"]),void self._retrieveStats(peerId,retrieveFn(!0,function(){self._retrieveStats(peerId,retrieveFn())})))},i=0;i<listOfPeers.length;i++){var peerId=listOfPeers[i];self._trigger("getConnectionStatusStateChange",self.GET_CONNECTION_STATUS_STATE.RETRIEVING,peerId,null,null),self._peerConnections.hasOwnProperty(peerId)&&self._peerConnections[peerId]?statsFn(peerId):(listOfPeerErrors[peerId]=new Error("The peer connection object does not exists"),log.error([peerId,"RTCStatsReport",null,"Retrieval failure ->"],listOfPeerErrors[peerId]),self._trigger("getConnectionStatusStateChange",self.GET_CONNECTION_STATUS_STATE.RETRIEVE_ERROR,peerId,null,listOfPeerErrors[peerId]),checkCompletedFn(peerId))}},Skylink.prototype.setUserData=function(userData){var self=this,updatedUserData="";"undefined"!=typeof userData&&null!==userData&&(updatedUserData=userData),self._user.data=updatedUserData,self._user.room.connected?(log.log("Updated userData -> ",updatedUserData),self._socketSendMessage({type:self._SIG_MESSAGE_TYPE.UPDATE_USER,mid:self._user.id,rid:self._user.room.session.rid,userData:updatedUserData,stamp:(new Date).getTime()}),self._trigger("peerUpdated",self._user.id,self.getPeerInfo(),!0)):log.warn("User is not in the room. Broadcast of updated information will be dropped")},Skylink.prototype.getUserData=function(peerId){if(peerId&&this._peerInformations[peerId]){var userData=this._peerInformations[peerId].userData;return null!==userData&&"undefined"==typeof userData||(userData=""),userData}return this._user.data},Skylink.prototype.getPeerInfo=function(peerId){var peerInfo=null;return"string"==typeof peerId&&"object"==typeof this._peerInformations[peerId]?(peerInfo=clone(this._peerInformations[peerId]),peerInfo.room=clone(this._selectedRoom),peerInfo.settings.bandwidth=peerInfo.settings.bandwidth||{},peerInfo.settings.googleXBandwidth=peerInfo.settings.googleXBandwidth||{},"boolean"==typeof peerInfo.settings.video||peerInfo.settings.video&&"object"==typeof peerInfo.settings.video||(peerInfo.settings.video=!1,peerInfo.mediaStatus.audioMuted=!0),"boolean"==typeof peerInfo.settings.audio||peerInfo.settings.audio&&"object"==typeof peerInfo.settings.audio||(peerInfo.settings.audio=!1,peerInfo.mediaStatus.audioMuted=!0),"boolean"!=typeof peerInfo.mediaStatus.audioMuted&&(peerInfo.mediaStatus.audioMuted=!0),"boolean"!=typeof peerInfo.mediaStatus.videoMuted&&(peerInfo.mediaStatus.videoMuted=!0),peerInfo.settings.maxBandwidth&&(peerInfo.settings.bandwidth=clone(peerInfo.settings.maxBandwidth),delete peerInfo.settings.maxBandwidth),peerInfo.settings.video&&"object"==typeof peerInfo.settings.video&&peerInfo.settings.video.customSettings&&"object"==typeof peerInfo.settings.video.customSettings&&(peerInfo.settings.video.customSettings.frameRate&&(peerInfo.settings.video.frameRate=clone(peerInfo.settings.video.customSettings.frameRate)),peerInfo.settings.video.customSettings.facingMode&&(peerInfo.settings.video.facingMode=clone(peerInfo.settings.video.customSettings.facingMode)),peerInfo.settings.video.customSettings.width&&(peerInfo.settings.video.resolution=peerInfo.settings.video.resolution||{},peerInfo.settings.video.resolution.width=clone(peerInfo.settings.video.customSettings.width)),peerInfo.settings.video.customSettings.height&&(peerInfo.settings.video.resolution=peerInfo.settings.video.resolution||{},peerInfo.settings.video.resolution.height=clone(peerInfo.settings.video.customSettings.height)),peerInfo.settings.video.customSettings.facingMode&&(peerInfo.settings.video.facingMode=clone(peerInfo.settings.video.customSettings.facingMode))),peerInfo.settings.audio&&"object"==typeof peerInfo.settings.audio&&(peerInfo.settings.audio.stereo=peerInfo.settings.audio.stereo===!0),null!==peerInfo.userData&&"undefined"!=typeof peerInfo.userData||(peerInfo.userData=""),peerInfo.parentId=peerInfo.parentId||null,"MCU"===peerId?(peerInfo.config.receiveOnly=!0,peerInfo.config.publishOnly=!1):this._hasMCU&&(peerInfo.config.receiveOnly=!1,peerInfo.config.publishOnly=!0),("edge"!==window.webrtcDetectedBrowser&&"edge"===peerInfo.agent.name?["IE","safari"].indexOf(window.webrtcDetectedBrowser)>-1&&!this._currentCodecSupport.video.h264:"edge"===window.webrtcDetectedBrowser&&"edge"!==peerInfo.agent.name&&!this._currentCodecSupport.video.h264)&&(peerInfo.settings.video=!1,peerInfo.mediaStatus.videoMuted=!0)):(peerInfo={userData:clone(this._user.data),settings:{audio:!1,video:!1},mediaStatus:clone(this._streamsMutedSettings),agent:{name:window.webrtcDetectedBrowser,version:window.webrtcDetectedVersion,os:window.navigator.platform,pluginVersion:AdapterJS.WebRTCPlugin.plugin?AdapterJS.WebRTCPlugin.plugin.VERSION:null,SMProtocolVersion:this.SMProtocolVersion,DTProtocolVersion:this.DTProtocolVersion},room:clone(this._user.room.name),config:{enableDataChannel:this._options.enableDataChannel,enableIceTrickle:this._options.enableIceTrickle,enableIceRestart:this._enableIceRestart,priorityWeight:this._user.priorityWeight,receiveOnly:!1,publishOnly:!!this._user.connection.publishOnly}},null!==peerInfo.userData&&"undefined"!=typeof peerInfo.userData||(peerInfo.userData=""),this._streams.screenshare?peerInfo.settings=clone(this._streams.screenshare.settings):this._streams.userMedia&&(peerInfo.settings=clone(this._streams.userMedia.settings)),peerInfo.settings.bandwidth=clone(this._user.connection.bandwidth.max),peerInfo.settings.googleXBandwidth=clone(this._user.connection.bandwidth.xVideoCodec),peerInfo.parentId=this._user.parentId?this._user.parentId:null,peerInfo.config.receiveOnly=!peerInfo.settings.video&&!peerInfo.settings.audio),peerInfo.settings.audio||(peerInfo.mediaStatus.audioMuted=!0),peerInfo.settings.video||(peerInfo.mediaStatus.videoMuted=!0),peerInfo.settings.audio||peerInfo.settings.video||(peerInfo.config.receiveOnly=!0,peerInfo.config.publishOnly=!1),peerInfo},Skylink.prototype.getPeersInRoom=function(){for(var listOfPeersInfo={},listOfPeers=Object.keys(this._peerInformations),i=0;i<listOfPeers.length;i++)listOfPeersInfo[listOfPeers[i]]=clone(this.getPeerInfo(listOfPeers[i])),listOfPeersInfo[listOfPeers[i]].isSelf=!1;return this._user&&this._user.id&&(listOfPeersInfo[this._user.id]=clone(this.getPeerInfo()),listOfPeersInfo[this._user.id].isSelf=!0),listOfPeersInfo},Skylink.prototype.getPeersStream=function(){for(var listOfPeersStreams={},listOfPeers=Object.keys(this._peerConnections),i=0;i<listOfPeers.length;i++){var stream=null;if(this._peerConnections[listOfPeers[i]]&&this._peerConnections[listOfPeers[i]].remoteDescription&&this._peerConnections[listOfPeers[i]].remoteDescription.sdp&&(this._sdpSettings.direction.audio.receive||this._sdpSettings.direction.video.receive))for(var streams=this._peerConnections[listOfPeers[i]].getRemoteStreams(),j=0;j<streams.length;j++)if(this._peerConnections[listOfPeers[i]].remoteDescription.sdp.indexOf("msid:"+(streams[j].id||streams[j].label))>0){stream=streams[j];break}listOfPeersStreams[listOfPeers[i]]={streamId:stream?stream.id||stream.label||null:null,stream:stream,isSelf:!1}}if(this._user&&this._user.id){var selfStream=null;this._streams.screenshare&&this._streams.screenshare.stream?selfStream=this._streams.screenshare.stream:this._streams.userMedia&&this._streams.userMedia.stream&&(selfStream=this._streams.userMedia.stream),listOfPeersStreams[this._user.id]={streamId:selfStream?selfStream.id||selfStream.label||null:null,stream:selfStream,isSelf:!0}}return listOfPeersStreams},Skylink.prototype.getCurrentDataTransfers=function(){var listOfDataTransfers={};if(!this._user||!this._user.id)return{};for(var prop in this._dataTransfers)this._dataTransfers.hasOwnProperty(prop)&&this._dataTransfers[prop]&&(listOfDataTransfers[prop]={transferInfo:this._getTransferInfo(prop,this._user.id,!0,!0,!0),isSelf:this._dataTransfers[prop].senderPeerId===this._user.id,peerId:this._dataTransfers[prop].senderPeerId||this._user.id});return listOfDataTransfers},Skylink.prototype.getPeers=function(showAll,callback){var self=this;return self._user.room.session.isPrivileged?self._options.appKey?("function"==typeof showAll&&(callback=showAll,showAll=!1),self._socketSendMessage({type:self._SIG_MESSAGE_TYPE.GET_PEERS,showAll:showAll||!1}),self._trigger("getPeersStateChange",self.GET_PEERS_STATE.ENQUIRED,self._user.id,null),log.log("Enquired server for peers within the realm"),void("function"==typeof callback&&self.once("getPeersStateChange",function(state,privilegedPeerId,peerList){callback(null,peerList)},function(state,privilegedPeerId,peerList){return state===self.GET_PEERS_STATE.RECEIVED}))):void log.warn("App key is not defined. Please authenticate again."):void log.warn("Please upgrade your key to privileged to use this function")},Skylink.prototype.introducePeer=function(sendingPeerId,receivingPeerId){var self=this;return self._user.room.session.isPrivileged?(self._socketSendMessage({type:self._SIG_MESSAGE_TYPE.INTRODUCE,sendingPeerId:sendingPeerId,receivingPeerId:receivingPeerId}),self._trigger("introduceStateChange",self.INTRODUCE_STATE.INTRODUCING,self._user.id,sendingPeerId,receivingPeerId,null),void log.log("Introducing",sendingPeerId,"to",receivingPeerId)):(log.warn("Please upgrade your key to privileged to use this function"),void self._trigger("introduceStateChange",self.INTRODUCE_STATE.ERROR,self._user.id,sendingPeerId,receivingPeerId,"notPrivileged"))},Skylink.prototype.joinRoom=function(room,options,callback){var self=this;return"function"==typeof room?(callback=room,room=void 0):room&&"object"==typeof room&&(options=room,room=void 0),"function"==typeof options&&(callback=options,options=void 0),null===room||["number","boolean"].indexOf(typeof room)>-1?self._joinRoomCallback({error:new Error("Invalid room name is provided"),room:room},callback):null===options||["number","boolean"].indexOf(typeof options)>-1?self._joinRoomCallback({error:new Error("Invalid mediaOptions is provided"),room:room},callback):(options=options||{},void self.leaveRoom(options&&(options.audio||"boolean"==typeof options.audio)||options.video||"boolean"==typeof options.video,function(){var updatedRoom=self._options.credentials||!room||"string"!=typeof room?self._options.defaultRoom:room;self._initFetchAPIData(updatedRoom,function(authErr){return authErr?self._joinRoomCallback({error:err.error,room:updatedRoom},callback):void self._socketOpen(function(socketErr){if(socketErr)return self._joinRoomCallback({error:new Error("Failed opening Signaling server connection"),room:updatedRoom},callback);if(self._user.data=void 0!==typeof options.userData?options.userData:"",self._user.connection={mediaConnection:{audio:!0,video:!0,data:!0},mediaDirection:{audio:{send:!0,receive:!0},video:{send:!0,receive:!0}},bandwidth:{max:{},xVideoCodec:{}}},options.bandwidth&&"object"==typeof options.bandwidth&&("number"==typeof options.bandwidth.audio&&(self._user.connection.bandwidth.max.audio=options.bandwidth.audio),"number"==typeof options.bandwidth.video&&(self._user.connection.bandwidth.max.video=options.bandwidth.video),"number"==typeof options.bandwidth.data&&(self._user.connection.bandwidth.max.data=options.bandwidth.data)),options.googleXBandwidth&&"object"==typeof options.googleXBandwidth&&("number"==typeof options.googleXBandwidth.min&&(self._user.connection.bandwidth.xVideoCodec.min=options.googleXBandwidth.min),"number"==typeof mediaOptions.googleXBandwidth.max&&(self._user.connection.bandwidth.xVideoCodec.max=options.googleXBandwidth.max)),options.sdpSettings&&"object"==typeof options.sdpSettings&&(options.sdpSettings.direction&&"object"==typeof options.sdpSettings.direction&&(options.sdpSettings.direction.audio&&(self._user.connection.mediaDirection.audio.receive=options.sdpSettings.direction.audio.receive!==!1,self._user.connection.mediaDirection.audio.send=options.sdpSettings.direction.audio.send!==!1),options.sdpSettings.direction.video&&(self._user.connection.mediaDirection.video.receive=options.sdpSettings.direction.video.receive!==!1,self._user.connection.mediaDirection.video.send=options.sdpSettings.direction.video.send!==!1)),options.sdpSettings.connection&&"object"==typeof options.sdpSettings.connection&&(self._user.connection.mediaConnection.audio=options.sdpSettings.connection.audio!==!1,self._user.connection.mediaConnection.video=options.sdpSettings.connection.video!==!1,self._user.connection.mediaConnection.data=options.sdpSettings.connection.data!==!1)),!options.publishOnly||"object"!=typeof options.publishOnly&&options.publishOnly!==!0||(self._user.connection.publishOnly=!0,self._user.connection.mediaDirection.audio.send=!0,self._user.connection.mediaDirection.audio.receive=!1,self._user.connection.mediaDirection.video.send=!0,self._user.connection.mediaDirection.video.receive=!1,"object"==typeof options.publishOnly&&options.publishOnly.parentId&&"string"==typeof options.publishOnly.parentId&&(self._user.parentId=options.publishOnly.parentId)),options.parentId&&"string"==typeof options.parentId&&(self._user.parentId=options.parentId),options.manualGetUserMedia===!0){self._trigger("mediaAccessRequired");var currentBlock=0,requireStreamInterval=setInterval(function(){self._streams.userMedia.stream||self._streams.userMedia.screenshare?(clearInterval(requireStreamInterval),self._joinRoomCallback({startConnection:!0})):600===currentBlock&&(clearInterval(requireStreamInterval),self.once("mediaAccessError",function(error){self._joinRoomCallback({error:error},callback)}),self._onUserMediaError(new Error("Waiting for stream timeout"),!1,!1)),currentBlock++},50)}else options.audio&&(options.audio===!0||"object"==typeof options.audio)||options.video&&(options.video===!0||"object"==typeof options.video)?self.getUserMedia(options,function(err){return err?self._joinRoomCallback({error:err},callback):void self._joinRoomCallback({startConnection:!0})}):self._joinRoomCallback({startConnection:!0})})})}))},Skylink.prototype.leaveRoom=function(stopOptions,callback){var self=this,currentRoom=self._user.room.name,currentPeerId=self._user.id,stopMedia={userMedia:!0,screenshare:!0},isConnected=self._user.room.connected===!0;"boolean"==typeof stopOptions?stopOptions===!1&&(stopMedia.userMedia=!1,stopMedia.screenshare=!1):stopOptions&&"object"==typeof stopOptions?(stopMedia.userMedia=stopOptions.userMedia!==!1,stopMedia.screenshare=stopOptions.screenshare!==!1):"function"==typeof stopOptions&&(callback=stopOptions);for(var peerId in self._peerInformations)self._peerInformations.hasOwnProperty(peerId)&&(self._peerInformations[peerId]&&self._removePeer(peerId),delete self._peerInformations[peerId]);return self._user.room.connected=!1,self._socketClose(),isConnected&&currentPeerId&&currentRoom?((stopMedia.userMedia||stopMedia.screenshare)&&self._stopStreams(stopMedia),self._trigger("peerLeft",currentPeerId,self.getPeerInfo(),!0),void self._leaveRoomCallback({},callback)):self._leaveRoomCallback({error:"Unable to leave room as user is not in any room"},callback)},Skylink.prototype.lockRoom=function(){var self=this;return self._user.room.connected?(log.log("Locking Room ..."),self._socketSendMessage({type:"roomLockEvent",mid:self._user.id,rid:self._user.room.session.rid,lock:!0}),self._user.room.locked=!0,void self._trigger("roomLock",!0,self._user.id,self.getPeerInfo(),!0)):void log.error("Unable to lock Room as User is not in Room.")},Skylink.prototype.unlockRoom=function(){return self._user.room.connected?(log.log("Unlocking Room ..."),self._socketSendMessage({type:"roomLockEvent",mid:self._user.id,rid:self._user.room.session.rid,lock:!1}),self._user.room.locked=!1,void self._trigger("roomLock",!1,self._user.id,self.getPeerInfo(),!0)):void log.error("Unable to unlock Room as User is not in Room.")},Skylink.prototype.generateUUID=function(){var d=(new Date).getTime(),uuid="xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(c){var r=(d+16*Math.random())%16|0;return d=Math.floor(d/16),("x"===c?r:r&&15).toString(16)});return uuid},Skylink.prototype.init=function(options,callback){var self=this;if(self._options={appKey:null,defaultRoom:null,credentials:null,roomServer:"//api.temasys.io",iceServer:null,socketServer:null,enableSTUNServer:!0,enableTURNServer:!0,enableDataChannel:!0,enableIceTrickle:!0,usePublicSTUN:!0,TURNServerTransport:self.TURN_TRANSPORT.ANY,videoCodec:self.AUDIO_CODEC.AUTO,audioCodec:self.VIDEO_CODEC.AUTO,forceSSL:!1,forceTURN:!1,forceTURNSSL:!1,audioFallback:!1,throttleShouldThrowError:!1,mcuUseRenegoRestart:!1,disableREMB:!1,disableVideoFecCodecs:!1,disableComfortNoiseCodec:!1,socketTimeout:2e4,filterCandidatesType:{host:!1,srflx:!1,relay:!1},throttleIntervals:{shareScreen:1e4,refreshConnection:5e3,getUserMedia:0}},"function"==typeof options)callback=options,options=void 0;else if(options&&"string"==typeof options)self._options.appKey=options,self._options.defaultRoom=options;else if(options&&"object"==typeof options){if(options.appKey&&"string"==typeof options.appKey?(self._options.appKey=options.appKey,self._options.defaultRoom=options.appKey):options.apiKey&&"string"==typeof options.apiKey&&(self._options.appKey=options.apiKey,self._options.defaultRoom=options.apiKey),options.defaultRoom&&"string"==typeof options.defaultRoom&&(self._options.defaultRoom=options.defaultRoom),options.roomServer&&"string"==typeof options.roomServer&&options.roomServer.indexOf("temasys")>-1&&0===options.roomServer.indexOf("//")&&(self._options.roomServer=options.roomServer.lastIndexOf("/")===options.roomServer.length-1?options.roomServer.substring(0,options.roomServer.length-1):options.roomServer),options.iceServer&&"string"==typeof options.iceServer&&options.iceServer.indexOf("temasys")>-1&&(self._options.iceServer=options.iceServer),options.socketServer&&"string"==typeof options.socketServer&&options.socketServer.indexOf("temasys")>-1&&(self._options.socketServer=options.socketServer),options.credentials&&"object"==typeof options.credentials&&options.credentials.credentials&&"string"==typeof options.credentials.credentials&&"number"==typeof options.credentials.duration&&options.credentials.startDateTime&&"string"==typeof options.credentials.startDateTime&&(self._options.credentials={startDateTime:options.credentials.startDateTime,duration:options.credentials.duration,credentials:options.credentials.credentials}),"number"==typeof options.socketTimeout&&options.socketTimeout>=5e3&&(self._options.socketTimeout=options.socketTimeout),options.audioCodec&&"string"==typeof options.audioCodec)for(var aprop in self.AUDIO_CODEC)self.AUDIO_CODEC.hasOwnProperty(aprop)&&self.AUDIO_CODEC[aprop]===options.audioCodec&&(self._options.audioCodec=options.audioCodec);if(options.videoCodec&&"string"==typeof options.videoCodec)for(var vprop in self.VIDEO_CODEC)self.VIDEO_CODEC.hasOwnProperty(vprop)&&self.VIDEO_CODEC[vprop]===options.videoCodec&&(self._options.videoCodec=options.videoCodec);if(options.TURNServerTransport&&"string"==typeof options.TURNServerTransport)for(var tprop in self.TURN_TRANSPORT)self.TURN_TRANSPORT.hasOwnProperty(tprop)&&self.TURN_TRANSPORT[tprop]===options.TURNServerTransport&&(self._options.TURNServerTransport=options.TURNServerTransport);options.filterCandidatesType&&"object"==typeof options.filterCandidatesType&&(self._options.filterCandidatesType.host=options.filterCandidatesType.host===!0,self._options.filterCandidatesType.srflx=options.filterCandidatesType.srflx===!0,self._options.filterCandidatesType.relay=options.filterCandidatesType.relay===!0),options.throttleIntervals&&"object"==typeof options.throttleIntervals&&("number"==typeof options.throttleIntervals.getUserMedia&&(self._options.throttleIntervals.getUserMedia=options.throttleIntervals.getUserMedia),"number"==typeof options.throttleIntervals.refreshConnection&&(self._options.throttleIntervals.refreshConnection=options.throttleIntervals.refreshConnection),"number"==typeof options.throttleIntervals.shareScreen&&(self._options.throttleIntervals.shareScreen=options.throttleIntervals.shareScreen)),self._options.enableSTUNServer=options.enableSTUNServer!==!1,self._options.enableTURNServer=options.enableTURNServer!==!1,self._options.enableIceTrickle=options.enableIceTrickle!==!1,self._options.enableDataChannel=options.enableDataChannel!==!1,self._options.usePublicSTUN=options.usePublicSTUN!==!1,self._options.forceSSL=options.forceSSL===!0,self._options.forceTURNSSL=options.forceTURNSSL===!0,self._options.audioFallback=options.audioFallback===!0,self._options.disableVideoFecCodecs=options.disableVideoFecCodecs===!0,self._options.disableComfortNoiseCodec=options.disableComfortNoiseCodec===!0,self._options.disableREMB=options.disableREMB===!0,self._options.mcuUseRenegoRestart=options.mcuUseRenegoRestart===!0,self._options.throttleShouldThrowError=options.throttleShouldThrowError===!0,options.forceTURN===!0&&(self._options.filterCandidatesType.host=!0,self._options.filterCandidatesType.srflx=!0,self._options.filterCandidatesType.relay=!1,self._options.enableTURNServer=!0,self._options.enableSTUNServer=!1,self._options.usePublicSTUN=!1,self._options.forceTURN=!0)}return"edge"===window.webrtcDetectedBrowser&&(log.warn("init() overriding any configuration for Edge connection case."),self._options.filterCandidatesType.host=!0,self._options.filterCandidatesType.srflx=!0,self._options.filterCandidatesType.relay=!1,self._options.enableTURNServer=!0,self._options.enableSTUNServer=!1,self._options.usePublicSTUN=!1,self._options.audioCodec=self.AUDIO_CODEC.OPUS,self._options.videoCodec=self.AUDIO_CODEC.H264,self._options.TURNServerTransport=self.TURN_TRANSPORT.UDP),self._options.appKey?window.XMLHttpRequest||window.XDomainRequest?window.io||io?!window.AdapterJS&&!AdapterJS||"function"!=typeof AdapterJS.webRTCReady?self._initCallback({state:self.READY_STATE_CHANGE.ERROR,content:"AdapterJS dependency is not loaded or incorrect AdapterJS dependency is used",errorCode:self.READY_STATE_CHANGE_ERROR.ADAPTER_NO_LOADED,room:self._options.defaultRoom},callback):void AdapterJS.webRTCReady(function(){return window.RTCPeerConnection?void self._getCodecsSupport(function(error){return error?self._initCallback({state:self.READY_STATE_CHANGE.ERROR,content:error.message||error.toString(),errorCode:self.READY_STATE_CHANGE_ERROR.PARSE_CODECS,room:self._options.defaultRoom},callback):0===Object.keys(self._currentCodecSupport.audio).length&&0===Object.keys(self._currentCodecSupport.video).length?self._initCallback({state:self.READY_STATE_CHANGE.ERROR,content:"No audio/video codecs available to start connection",errorCode:self.READY_STATE_CHANGE_ERROR.PARSE_CODECS,room:self._options.defaultRoom},callback):void self._initFetchAPIData(self._options.defaultRoom,callback)}):self._initCallback({state:self.READY_STATE_CHANGE.ERROR,content:"WebRTC not available",errorCode:self.READY_STATE_CHANGE_ERROR.NO_WEBRTC_SUPPORT,room:self._options.defaultRoom},callback)}):self._initCallback({state:self.READY_STATE_CHANGE.ERROR,content:"Socket.io not found",errorCode:self.READY_STATE_CHANGE_ERROR.NO_SOCKET_IO,room:self._options.defaultRoom},callback):self._initCallback({state:self.READY_STATE_CHANGE.ERROR,content:"XMLHttpRequest not available",errorCode:self.READY_STATE_CHANGE_ERROR.NO_XMLHTTPREQUEST_SUPPORT,room:self._options.defaultRoom},callback):self._initCallback({state:self.READY_STATE_CHANGE.ERROR,content:"No API key provided.",errorCode:self.READY_STATE_CHANGE_ERROR.NO_PATH,room:self._options.defaultRoom},callback)},Skylink.prototype.setLogLevel=function(logLevel){void 0===logLevel&&(logLevel=Skylink.LOG_LEVEL.WARN);for(var level in this.LOG_LEVEL)if(this.LOG_LEVEL[level]===logLevel)return _logLevel=logLevel,void log.log([null,"Log",level,"Log level exists. Level is set"]);log.error([null,"Log",level,"Log level does not exist. Level is not set"])},Skylink.prototype.setDebugMode=function(isDebugMode){return"object"==typeof isDebugMode&&(Object.keys(isDebugMode).length>0?(_enableDebugTrace=!!isDebugMode.trace,_enableDebugStack=!!isDebugMode.storeLogs):(_enableDebugMode=!1,_enableDebugTrace=!1,_enableDebugStack=!1)),isDebugMode===!1?(_enableDebugMode=!1,_enableDebugTrace=!1,void(_enableDebugStack=!1)):(_enableDebugMode=!0,_enableDebugTrace=!0,void(_enableDebugStack=!0))},Skylink.prototype.on=function(eventName,callback){"function"==typeof callback?(this._EVENTS[eventName]=this._EVENTS[eventName]||[],this._EVENTS[eventName].push(callback),log.log([null,"Event",eventName,"Event is subscribed"])):log.error([null,"Event",eventName,"Provided parameter is not a function"])},Skylink.prototype.once=function(eventName,callback,condition,fireAlways){"boolean"==typeof condition&&(fireAlways=condition,condition=null),fireAlways="undefined"==typeof fireAlways?!1:fireAlways,condition="function"!=typeof condition?function(){return!0}:condition,"function"==typeof callback?(this._onceEvents[eventName]=this._onceEvents[eventName]||[],this._onceEvents[eventName].push([callback,condition,fireAlways]),log.log([null,"Event",eventName,"Event is subscribed on condition"])):log.error([null,"Event",eventName,"Provided callback is not a function"]);
},Skylink.prototype.off=function(eventName,callback){if(eventName&&"string"==typeof eventName){if(void 0===callback)return this._EVENTS[eventName]=[],this._onceEvents[eventName]=[],void log.log([null,"Event",eventName,"All events are unsubscribed"]);for(var arr=this._EVENTS[eventName],once=this._onceEvents[eventName],i=0;i<arr.length;i++)if(arr[i]===callback){log.log([null,"Event",eventName,"Event is unsubscribed"]),arr.splice(i,1);break}if(void 0!==once)for(var j=0;j<once.length;j++)if(once[j][0]===callback){log.log([null,"Event",eventName,"One-time Event is unsubscribed"]),once.splice(j,1);break}}else this._EVENTS={},this._onceEvents={}},Skylink.prototype.sendMessage=function(message,targetPeerId){var listOfPeers=Object.keys(this._peerInformations),isPrivate=!1;if(Array.isArray(targetPeerId)?(listOfPeers=targetPeerId,isPrivate=!0):targetPeerId&&"string"==typeof targetPeerId&&(listOfPeers=[targetPeerId],isPrivate=!0),!this._user.room.connected)return void log.error("Unable to send message as User is not in Room. ->",message);for(var i=0;i<listOfPeers.length;i++){var peerId=listOfPeers[i];this._peerInformations[peerId]?"MCU"===peerId?(listOfPeers.splice(i,1),i--):isPrivate&&(log.debug([peerId,"Socket",null,"Sending private message to Peer"]),this._socketSendMessage({data:message,mid:this._user.id,rid:this._user.room.session.rid,target:peerId,type:this._SIG_MESSAGE_TYPE.PRIVATE_MESSAGE})):(log.error([peerId,"Socket",null,"Dropping of sending message to Peer as Peer session does not exists"]),listOfPeers.splice(i,1),i--)}0===listOfPeers.length&&log.warn("Currently there are no Peers to send message to (unless the message is queued and there are Peer connected by then)."),isPrivate?this._trigger("incomingMessage",{content:message,isPrivate:isPrivate,targetPeerId:targetPeerId||null,listOfPeers:listOfPeers,isDataChannel:!1,senderPeerId:this._user.id},this._user.id,this.getPeerInfo(),!0):(log.debug([null,"Socket",null,"Broadcasting message to Peers"]),this._socketSendMessage({data:message,mid:this._user.id,rid:this._user.room.session.rid,type:this._SIG_MESSAGE_TYPE.PUBLIC_MESSAGE}))},Skylink.prototype.startRecording=function(callback){var self=this;if(!self._hasMCU){var noMCUError="Unable to start recording as MCU is not connected";return log.error(noMCUError),void("function"==typeof callback&&callback(new Error(noMCUError),null))}if(self._currentRecordingId){var hasRecordingSessionError="Unable to start recording as there is an existing recording in-progress";return log.error(hasRecordingSessionError),void("function"==typeof callback&&callback(new Error(hasRecordingSessionError),null))}"function"==typeof callback&&self.once("recordingState",function(state,recordingId){callback(null,recordingId)},function(state){return state===self.RECORDING_STATE.START}),self._socketSendMessage({type:self._SIG_MESSAGE_TYPE.START_RECORDING,rid:self._user.room.session.rid,target:"MCU"}),log.debug(["MCU","Recording",null,"Starting recording"])},Skylink.prototype.stopRecording=function(callback,callbackSuccessWhenLink){var self=this;if(!self._hasMCU){var noMCUError="Unable to stop recording as MCU is not connected";return log.error(noMCUError),void("function"==typeof callback&&callback(new Error(noMCUError),null))}if(!self._currentRecordingId){var noRecordingSessionError="Unable to stop recording as there is no recording in-progress";return log.error(noRecordingSessionError),void("function"==typeof callback&&callback(new Error(noRecordingSessionError),null))}if(self._recordingStartInterval){var recordingSecsRequiredError="Unable to stop recording as 4 seconds has not been recorded yet";return log.error(recordingSecsRequiredError),void("function"==typeof callback&&callback(new Error(recordingSecsRequiredError),null))}if("function"==typeof callback){var expectedRecordingId=self._currentRecordingId;self.once("recordingState",function(state,recordingId,link,error){return callbackSuccessWhenLink?error?void callback(error,null):void callback(null,{link:link,recordingId:recordingId}):void callback(null,recordingId)},function(state,recordingId){return expectedRecordingId===recordingId?callbackSuccessWhenLink?[self.RECORDING_STATE.LINK,self.RECORDING_STATE.ERROR].indexOf(state)>-1:state===self.RECORDING_STATE.STOP:void 0})}self._socketSendMessage({type:self._SIG_MESSAGE_TYPE.STOP_RECORDING,rid:self._user.room.session.rid,target:"MCU"}),log.debug(["MCU","Recording",null,"Stopping recording"])},Skylink.prototype.getRecordings=function(){return clone(this._recordings)},Skylink.prototype.getUserMedia=function(options,callback){var self=this;if("function"==typeof options)callback=options,options={audio:!0,video:!0};else if("object"!=typeof options||null===options){if("undefined"!=typeof options){var invalidOptionsError="Please provide a valid options";return log.error(invalidOptionsError,options),void("function"==typeof callback&&callback(new Error(invalidOptionsError),null))}options={audio:!0,video:!0}}else if(!options.audio&&!options.video){var noConstraintOptionsSelectedError="Please select audio or video";return log.error(noConstraintOptionsSelectedError,options),void("function"==typeof callback&&callback(new Error(noConstraintOptionsSelectedError),null))}self._throttle(function(runFn){if(runFn){if("function"==typeof callback){var mediaAccessSuccessFn=function(stream){self.off("mediaAccessError",mediaAccessErrorFn),callback(null,stream)},mediaAccessErrorFn=function(error){self.off("mediaAccessSuccess",mediaAccessSuccessFn),callback(error,null)};self.once("mediaAccessSuccess",mediaAccessSuccessFn,function(stream,isScreensharing){return!isScreensharing}),self.once("mediaAccessError",mediaAccessErrorFn,function(error,isScreensharing){return!isScreensharing})}var settings=self._parseStreamSettings(options);navigator.getUserMedia(settings.getUserMediaSettings,function(stream){settings.mutedSettings.shouldAudioMuted&&(self._streamsMutedSettings.audioMuted=!0),settings.mutedSettings.shouldVideoMuted&&(self._streamsMutedSettings.videoMuted=!0),self._onStreamAccessSuccess(stream,settings,!1,!1)},function(error){self._onStreamAccessError(error,settings,!1,!1)})}else if(self._options.throttlingShouldThrowError){var throttleLimitError="Unable to run as throttle interval has not reached ("+self._options.throttleIntervals.getUserMedia+"ms).";log.error(throttleLimitError),"function"==typeof callback&&callback(new Error(throttleLimitError),null)}},"getUserMedia",self._options.throttleIntervals.getUserMedia)},Skylink.prototype.sendStream=function(options,callback){var self=this,restartFn=function(stream){if(self._user.room.connected)self._streams.screenshare||(self._trigger("incomingStream",self._user.id,stream,!0,self.getPeerInfo(),!1,stream.id||stream.label),self._trigger("peerUpdated",self._user.id,self.getPeerInfo(),!0)),Object.keys(self._peerConnections).length>0||self._hasMCU?self._refreshPeerConnection(Object.keys(self._peerConnections),!1,function(err,success){return err?(log.error("Failed refreshing connections for sendStream() ->",err),void("function"==typeof callback&&callback(new Error("Failed refreshing connections."),null))):void("function"==typeof callback&&callback(null,stream))}):"function"==typeof callback&&callback(null,stream);else{var notInRoomAgainError="Unable to send stream as user is not in the Room.";log.error(notInRoomAgainError,stream),"function"==typeof callback&&callback(new Error(notInRoomAgainError),null)}};if("object"!=typeof options||null===options){var invalidOptionsError="Provided stream settings is invalid";return log.error(invalidOptionsError,options),void("function"==typeof callback&&callback(new Error(invalidOptionsError),null))}if(!self._user.room.connected){var notInRoomError="Unable to send stream as user is not in the Room.";return log.error(notInRoomError,options),void("function"==typeof callback&&callback(new Error(notInRoomError),null))}if("edge"===window.webrtcDetectedBrowser){var edgeNotSupportError="Edge browser currently does not support renegotiation.";return log.error(edgeNotSupportError,options),void("function"==typeof callback&&callback(new Error(edgeNotSupportError),null))}if("function"==typeof options.getAudioTracks||"function"==typeof options.getVideoTracks){var checkActiveTracksFn=function(tracks){for(var t=0;t<tracks.length;t++)if(!tracks[t].ended&&("string"==typeof tracks[t].readyState?"live"===tracks[t].readyState:1))return!0;return!1};if(!checkActiveTracksFn(options.getAudioTracks())&&!checkActiveTracksFn(options.getVideoTracks())){var invalidStreamError="Provided stream object does not have audio or video tracks.";return log.error(invalidStreamError,options),void("function"==typeof callback&&callback(new Error(invalidStreamError),null))}self._onStreamAccessSuccess(options,{settings:{audio:!0,video:!0},getUserMediaSettings:{audio:!0,video:!0}},!1,!1),restartFn(options)}else self.getUserMedia(options,function(err,stream){return err?void("function"==typeof callback&&callback(err,null)):void restartFn(stream)})},Skylink.prototype.stopStream=function(){this._streams.userMedia&&this._stopStreams({userMedia:!0})},Skylink.prototype.muteStream=function(options){var self=this;if("object"!=typeof options)return void log.error("Provided settings is not an object");if(!(self._streams.userMedia&&self._streams.userMedia.stream||self._streams.screenshare&&self._streams.screenshare.stream))return void log.warn("No streams are available to mute / unmute!");var audioMuted="boolean"==typeof options.audioMuted?options.audioMuted:!0,videoMuted="boolean"==typeof options.videoMuted?options.videoMuted:!0,hasToggledAudio=!1,hasToggledVideo=!1;if(self._streamsMutedSettings.audioMuted!==audioMuted&&(self._streamsMutedSettings.audioMuted=audioMuted,hasToggledAudio=!0),self._streamsMutedSettings.videoMuted!==videoMuted&&(self._streamsMutedSettings.videoMuted=videoMuted,hasToggledVideo=!0),hasToggledVideo||hasToggledAudio){var streamTracksAvailability=self._muteStreams();hasToggledVideo&&self._user.room.connected&&self._socketSendMessage({type:self._SIG_MESSAGE_TYPE.MUTE_VIDEO,mid:self._user.id,rid:self._user.room.session.rid,muted:self._streamsMutedSettings.videoMuted,stamp:(new Date).getTime()}),hasToggledAudio&&self._user.room.connected&&setTimeout(function(){self._socketSendMessage({type:self._SIG_MESSAGE_TYPE.MUTE_AUDIO,mid:self._user.id,rid:self._user.room.session.rid,muted:self._streamsMutedSettings.audioMuted,stamp:(new Date).getTime()})},hasToggledVideo?1050:0),(streamTracksAvailability.hasVideo&&hasToggledVideo||streamTracksAvailability.hasAudio&&hasToggledAudio)&&(self._trigger("localMediaMuted",{audioMuted:streamTracksAvailability.hasAudio?self._streamsMutedSettings.audioMuted:!0,videoMuted:streamTracksAvailability.hasVideo?self._streamsMutedSettings.videoMuted:!0}),self._user.room.connected&&(self._trigger("streamMuted",self._user.id,self.getPeerInfo(),!0,self._streams.screenshare&&self._streams.screenshare.stream),self._trigger("peerUpdated",self._user.id,self.getPeerInfo(),!0)))}},Skylink.prototype.enableAudio=function(){this.muteStream({audioMuted:!1,videoMuted:this._streamsMutedSettings.videoMuted})},Skylink.prototype.disableAudio=function(){this.muteStream({audioMuted:!0,videoMuted:this._streamsMutedSettings.videoMuted})},Skylink.prototype.enableVideo=function(){this.muteStream({videoMuted:!1,audioMuted:this._streamsMutedSettings.audioMuted})},Skylink.prototype.disableVideo=function(){this.muteStream({videoMuted:!0,audioMuted:this._streamsMutedSettings.audioMuted})},Skylink.prototype.shareScreen=function(enableAudio,callback){var self=this,enableAudioSettings={stereo:!0};"function"==typeof enableAudio?(callback=enableAudio,enableAudio=!0):enableAudio&&"object"==typeof enableAudio&&(enableAudioSettings.usedtx="boolean"==typeof enableAudio.usedtx?enableAudio.usedtx:null,enableAudioSettings.useinbandfec="boolean"==typeof enableAudio.useinbandfec?enableAudio.useinbandfec:null,enableAudioSettings.stereo=enableAudio.stereo===!0,enableAudioSettings.echoCancellation=enableAudio.echoCancellation===!0),self._throttle(function(runFn){if(runFn){var settings={settings:{audio:enableAudio===!0||enableAudio&&"object"==typeof enableAudio?enableAudioSettings:!1,video:{screenshare:!0,exactConstraints:!1}},getUserMediaSettings:{video:{mediaSource:"window"}}},mediaAccessSuccessFn=function(stream){self.off("mediaAccessError",mediaAccessErrorFn),self._user.room.connected?(self._trigger("incomingStream",self._user.id,stream,!0,self.getPeerInfo(),!0,stream.id||stream.label),self._trigger("peerUpdated",self._user.id,self.getPeerInfo(),!0),Object.keys(self._peerConnections).length>0||self._hasMCU?self._refreshPeerConnection(Object.keys(self._peerConnections),!1,function(err,success){return err?(log.error("Failed refreshing connections for shareScreen() ->",err),void("function"==typeof callback&&callback(new Error("Failed refreshing connections."),null))):void("function"==typeof callback&&callback(null,stream))}):"function"==typeof callback&&callback(null,stream)):"function"==typeof callback&&callback(null,stream)},mediaAccessErrorFn=function(error){self.off("mediaAccessSuccess",mediaAccessSuccessFn),"function"==typeof callback&&callback(error,null)};self.once("mediaAccessSuccess",mediaAccessSuccessFn,function(stream,isScreensharing){return isScreensharing}),self.once("mediaAccessError",mediaAccessErrorFn,function(error,isScreensharing){return isScreensharing});try{enableAudio&&"firefox"===window.webrtcDetectedBrowser&&(settings.getUserMediaSettings.audio=!0),navigator.getUserMedia(settings.getUserMediaSettings,function(stream){return"firefox"!==window.webrtcDetectedBrowser&&enableAudio?void navigator.getUserMedia({audio:!0},function(audioStream){try{audioStream.addTrack(stream.getVideoTracks()[0]),self.once("mediaAccessSuccess",function(){self._streams.screenshare.streamClone=stream},function(stream,isScreensharing){return isScreensharing}),self._onStreamAccessSuccess(audioStream,settings,!0,!1)}catch(error){log.error("Failed retrieving audio stream for screensharing stream",error),self._onStreamAccessSuccess(stream,settings,!0,!1)}},function(error){log.error("Failed retrieving audio stream for screensharing stream",error),self._onStreamAccessSuccess(stream,settings,!0,!1)}):void self._onStreamAccessSuccess(stream,settings,!0,!1)},function(error){self._onStreamAccessError(error,settings,!0,!1)})}catch(error){self._onStreamAccessError(error,settings,!0,!1)}}else if(self._options.throttlingShouldThrowError){var throttleLimitError="Unable to run as throttle interval has not reached ("+self._options.throttleIntervals.shareScreen+"ms).";log.error(throttleLimitError),"function"==typeof callback&&callback(new Error(throttleLimitError),null)}},"shareScreen",self._options.throttleIntervals.shareScreen)},Skylink.prototype.stopScreen=function(){this._streams.screenshare&&(this._stopStreams({screenshare:!0}),this._user.room.connected&&(this._streams.userMedia&&this._streams.userMedia.stream&&(this._trigger("incomingStream",this._user.id,this._streams.userMedia.stream,!0,this.getPeerInfo(),!1,this._streams.userMedia.stream.id||this._streams.userMedia.stream.label),this._trigger("peerUpdated",this._user.id,this.getPeerInfo(),!0)),this._refreshPeerConnection(Object.keys(this._peerConnections),!1)))},Skylink.prototype._getUserInfo=function(peerId){var userInfo=clone(this.getPeerInfo()),peerInfo=clone(this.getPeerInfo(peerId));return userInfo.settings.video&&"object"==typeof userInfo.settings.video&&(userInfo.settings.video.customSettings={},userInfo.settings.video.frameRate&&"object"==typeof userInfo.settings.video.frameRate&&(userInfo.settings.video.customSettings.frameRate=clone(userInfo.settings.video.frameRate),userInfo.settings.video.frameRate=-1),userInfo.settings.video.facingMode&&"object"==typeof userInfo.settings.video.facingMode&&(userInfo.settings.video.customSettings.facingMode=clone(userInfo.settings.video.facingMode),userInfo.settings.video.facingMode="-1"),userInfo.settings.video.resolution&&"object"==typeof userInfo.settings.video.resolution&&(userInfo.settings.video.resolution.width&&"object"==typeof userInfo.settings.video.resolution.width&&(userInfo.settings.video.customSettings.width=clone(userInfo.settings.video.width),userInfo.settings.video.resolution.width=-1),userInfo.settings.video.resolution.height&&"object"==typeof userInfo.settings.video.resolution.height&&(userInfo.settings.video.customSettings.height=clone(userInfo.settings.video.height),userInfo.settings.video.resolution.height=-1))),userInfo.settings.bandwidth&&(userInfo.settings.maxBandwidth=clone(userInfo.settings.bandwidth),delete userInfo.settings.bandwidth),(peerId?"edge"!==window.webrtcDetectedBrowser&&"edge"===peerInfo.agent.name?["IE","safari"].indexOf(window.webrtcDetectedBrowser)>-1&&!this._currentCodecSupport.video.h264:"edge"===window.webrtcDetectedBrowser&&"edge"!==peerInfo.agent.name&&!this._currentCodecSupport.video.h264:"edge"===window.webrtcDetectedBrowser&&!this._currentCodecSupport.video.h264)&&(userInfo.settings.video=!1,userInfo.mediaStatus.videoMuted=!0),delete userInfo.agent,delete userInfo.room,delete userInfo.config,delete userInfo.parentId,userInfo},Skylink.prototype._refreshPeerConnection=function(listOfPeers,doIceRestart,callback){var self=this,listOfPeerRestarts=[],error="",listOfPeerRestartErrors={},refreshSinglePeerCallback=function(peerId){return function(error){-1===listOfPeerRestarts.indexOf(peerId)&&(error&&(log.error([peerId,"RTCPeerConnection",null,"Failed restarting for peer"],error),listOfPeerRestartErrors[peerId]=error),listOfPeerRestarts.push(peerId)),listOfPeerRestarts.length===listOfPeers.length&&"function"==typeof callback&&(log.log([null,"PeerConnection",null,"Invoked all peers to restart. Firing callback"]),Object.keys(listOfPeerRestartErrors).length>0?callback({refreshErrors:listOfPeerRestartErrors,listOfPeers:listOfPeers},null):callback(null,{listOfPeers:listOfPeers}))}},refreshSinglePeer=function(peerId,peerCallback){return self._peerConnections[peerId]?(log.log([peerId,"PeerConnection",null,"Restarting peer connection"]),void self._restartPeerConnection(peerId,doIceRestart,peerCallback)):(error="There is currently no existing peer connection made with the peer. Unable to restart connection",log.error([peerId,null,null,error]),void peerCallback(error))};if(self._hasMCU)self._restartMCUConnection(callback,doIceRestart);else{var i;for(i=0;i<listOfPeers.length;i++){var peerId=listOfPeers[i];Object.keys(self._peerConnections).indexOf(peerId)>-1?refreshSinglePeer(peerId,refreshSinglePeerCallback(peerId)):(error="Peer connection with peer does not exists. Unable to restart",log.error([peerId,"PeerConnection",null,error]),refreshSinglePeerCallback(peerId)(error))}}},Skylink.prototype._retrieveStats=function(peerId,callback){var self=this;log.debug([peerId,"RTCStatsReport",null,"Retrieivng connection status"]);var pc=self._peerConnections[peerId],result={raw:null,connection:{iceConnectionState:pc.iceConnectionState,iceGatheringState:pc.iceGatheringState,signalingState:pc.signalingState,remoteDescription:{type:pc.remoteDescription?pc.remoteDescription.type||null:null,sdp:pc.remoteDescription?pc.remoteDescription.sdp||null:null},localDescription:{type:pc.localDescription?pc.localDescription.type||null:null,sdp:pc.localDescription?pc.localDescription.sdp||null:null},candidates:clone(self._gatheredCandidates[peerId]||{sending:{host:[],srflx:[],relay:[]},receiving:{host:[],srflx:[],relay:[]}}),dataChannels:{}},audio:{sending:{ssrc:null,bytes:0,packets:0,packetsLost:0,rtt:0,jitter:0,jitterBufferMs:null,codec:self._getSDPSelectedCodec(peerId,pc.remoteDescription,"audio"),nacks:null,inputLevel:null,echoReturnLoss:null,echoReturnLossEnhancement:null,totalBytes:0,totalPackets:0,totalPacketsLost:0,totalNacks:null},receiving:{ssrc:null,bytes:0,packets:0,packetsLost:0,packetsDiscarded:0,fractionLost:0,nacks:null,jitter:0,jitterBufferMs:null,codec:self._getSDPSelectedCodec(peerId,pc.remoteDescription,"audio"),outputLevel:null,totalBytes:0,totalPackets:0,totalPacketsLost:0,totalNacks:null}},video:{sending:{ssrc:null,bytes:0,packets:0,packetsLost:0,rtt:0,jitter:0,jitterBufferMs:null,codec:self._getSDPSelectedCodec(peerId,pc.remoteDescription,"video"),frameWidth:null,frameHeight:null,framesDecoded:null,framesCorrupted:null,framesDropped:null,framesPerSecond:null,framesInput:null,frames:null,frameRateEncoded:null,frameRate:null,frameRateInput:null,frameRateMean:null,frameRateStdDev:null,nacks:null,plis:null,firs:null,slis:null,qpSum:null,totalBytes:0,totalPackets:0,totalPacketsLost:0,totalNacks:null,totalPlis:null,totalFirs:null,totalSlis:null,totalFrames:null},receiving:{ssrc:null,bytes:0,packets:0,packetsDiscarded:0,packetsLost:0,fractionLost:0,jitter:0,jitterBufferMs:null,codec:self._getSDPSelectedCodec(peerId,pc.remoteDescription,"video"),frameWidth:null,frameHeight:null,framesDecoded:null,framesCorrupted:null,framesPerSecond:null,framesDropped:null,framesOutput:null,frames:null,frameRateMean:null,frameRateStdDev:null,nacks:null,plis:null,firs:null,slis:null,e2eDelay:null,totalBytes:0,totalPackets:0,totalPacketsLost:0,totalNacks:null,totalPlis:null,totalFirs:null,totalSlis:null,totalFrames:null}},selectedCandidate:{local:{ipAddress:null,candidateType:null,portNumber:null,transport:null,turnMediaTransport:null},remote:{ipAddress:null,candidateType:null,portNumber:null,transport:null},consentResponses:{received:null,sent:null,totalReceived:null,totalSent:null},consentRequests:{received:null,sent:null,totalReceived:null,totalSent:null},responses:{received:null,sent:null,totalReceived:null,totalSent:null},requests:{received:null,sent:null,totalReceived:null,totalSent:null}},certificate:{local:self._getSDPFingerprint(peerId,pc.localDescription),remote:self._getSDPFingerprint(peerId,pc.remoteDescription),dtlsCipher:null,srtpCipher:null}};for(var channelProp in self._dataChannels[peerId])self._dataChannels[peerId].hasOwnProperty(channelProp)&&self._dataChannels[peerId][channelProp]&&(result.connection.dataChannels[self._dataChannels[peerId][channelProp].channel.label]={label:self._dataChannels[peerId][channelProp].channel.label,readyState:self._dataChannels[peerId][channelProp].channel.readyState,channelType:"main"===channelProp?self.DATA_CHANNEL_TYPE.MESSAGING:self.DATA_CHANNEL_TYPE.DATA,currentTransferId:self._dataChannels[peerId][channelProp].transferId||null});var loopFn=function(obj,fn){for(var prop in obj)obj.hasOwnProperty(prop)&&obj[prop]&&fn(obj[prop],prop)},formatCandidateFn=function(candidateDirType,candidate){result.selectedCandidate[candidateDirType].ipAddress=candidate.ipAddress,result.selectedCandidate[candidateDirType].candidateType=candidate.candidateType,result.selectedCandidate[candidateDirType].portNumber="number"!=typeof candidate.portNumber?parseInt(candidate.portNumber,10)||null:candidate.portNumber,result.selectedCandidate[candidateDirType].transport=candidate.transport};pc.getStats(null,function(stats){if(log.debug([peerId,"RTCStatsReport",null,"Retrieval success ->"],stats),result.raw=stats,"firefox"===window.webrtcDetectedBrowser)loopFn(stats,function(obj,prop){var dirType="";0===prop.indexOf("inbound_rtp")||0===prop.indexOf("outbound_rtp")?(dirType=0===prop.indexOf("inbound_rtp")?"receiving":"sending",self._peerStats[peerId][prop]||(self._peerStats[peerId][prop]=obj),result[obj.mediaType][dirType].bytes=self._parseConnectionStats(self._peerStats[peerId][prop],obj,"receiving"===dirType?"bytesReceived":"bytesSent"),result[obj.mediaType][dirType].totalBytes=parseInt(("receiving"===dirType?obj.bytesReceived:obj.bytesSent)||"0",10),result[obj.mediaType][dirType].packets=self._parseConnectionStats(self._peerStats[peerId][prop],obj,"receiving"===dirType?"packetsReceived":"packetsSent"),result[obj.mediaType][dirType].totalPackets=parseInt(("receiving"===dirType?obj.packetsReceived:obj.packetsSent)||"0",10),result[obj.mediaType][dirType].ssrc=obj.ssrc,"video"===obj.mediaType&&(result.video[dirType].frameRateMean=obj.framerateMean||0,result.video[dirType].frameRateStdDev=obj.framerateStdDev||0,result.video[dirType].framesDropped="number"==typeof obj.framesDropped?obj.framesDropped:"number"==typeof obj.droppedFrames?obj.droppedFrames:null,result.video[dirType].framesCorrupted="number"==typeof obj.framesCorrupted?obj.framesCorrupted:null,result.video[dirType].framesPerSecond="number"==typeof obj.framesPerSecond?obj.framesPerSecond:null,"sending"===dirType?(result.video[dirType].framesEncoded="number"==typeof obj.framesEncoded?obj.framesEncoded:null,result.video[dirType].frames="number"==typeof obj.framesSent?obj.framesSent:null):(result.video[dirType].framesDecoded="number"==typeof obj.framesDecoded?obj.framesDecoded:null,result.video[dirType].frames="number"==typeof obj.framesReceived?obj.framesReceived:null)),"receiving"===dirType&&(obj.packetsDiscarded=("number"==typeof obj.packetsDiscarded?obj.packetsDiscarded:obj.discardedPackets)||0,obj.packetsLost="number"==typeof obj.packetsLost?obj.packetsLost:0,result[obj.mediaType].receiving.packetsLost=self._parseConnectionStats(self._peerStats[peerId][prop],obj,"packetsLost"),result[obj.mediaType].receiving.packetsDiscarded=self._parseConnectionStats(self._peerStats[peerId][prop],obj,"packetsDiscarded"),result[obj.mediaType].receiving.totalPacketsDiscarded=obj.packetsDiscarded,result[obj.mediaType].receiving.totalPacketsLost=obj.packetsLost),self._peerStats[peerId][prop]=obj):0===prop.indexOf("inbound_rtcp")||0===prop.indexOf("outbound_rtcp")?(dirType=0===prop.indexOf("inbound_rtp")?"receiving":"sending",self._peerStats[peerId][prop]||(self._peerStats[peerId][prop]=obj),"sending"===dirType?(result[obj.mediaType].sending.rtt=obj.mozRtt||0,result[obj.mediaType].sending.targetBitrate="number"==typeof obj.targetBitrate?obj.targetBitrate:0):result[obj.mediaType].receiving.jitter=obj.jitter||0,self._peerStats[peerId][prop]=obj):obj.nominated&&obj.selected&&(formatCandidateFn("remote",stats[obj.remoteCandidateId]),formatCandidateFn("local",stats[obj.localCandidateId]))});else if("edge"===window.webrtcDetectedBrowser){var tracks=[];pc.getRemoteStreams().length>0&&(tracks=tracks.concat(pc.getRemoteStreams()[0].getTracks())),pc.getLocalStreams().length>0&&(tracks=tracks.concat(pc.getLocalStreams()[0].getTracks())),loopFn(tracks,function(track){loopFn(stats,function(obj,prop){if("track"===obj.type&&obj.trackIdentifier===track.id){var dirType=obj.remoteSource?"receiving":"sending",mediaType=track.kind;"audio"===mediaType?(result[mediaType][dirType]["sending"===dirType?"inputLevel":"outputLevel"]=obj.audioLevel,"sending"===dirType&&(result[mediaType][dirType].echoReturnLoss=obj.echoReturnLoss,result[mediaType][dirType].echoReturnLossEnhancement=obj.echoReturnLossEnhancement)):(result[mediaType][dirType].frames=self._parseConnectionStats(self._peerStats[peerId][subprop],streamObj,"sending"===dirType?obj.framesSent:obj.framesReceived),result[mediaType][dirType].framesDropped=obj.framesDropped,result[mediaType][dirType].framesDecoded=obj.framesDecoded,result[mediaType][dirType].framesCorrupted=obj.framesCorrupted,result[mediaType][dirType].framesPerSecond=obj.framesPerSecond,result[mediaType][dirType].frameHeight=obj.frameHeight||null,result[mediaType][dirType].frameWidth=obj.frameWidth||null,result[mediaType][dirType].totalFrames="sending"===dirType?obj.framesSent:obj.framesReceived),loopFn(stats,function(streamObj,subprop){streamObj.mediaTrackId===obj.id&&["outboundrtp","inboundrtp"].indexOf(streamObj.type)>-1&&(self._peerStats[peerId][subprop]||(self._peerStats[peerId][subprop]=streamObj),result[mediaType][dirType].ssrc=parseInt(streamObj.ssrc||"0",10),result[mediaType][dirType].nacks=self._parseConnectionStats(self._peerStats[peerId][subprop],streamObj,"nackCount"),result[mediaType][dirType].totalNacks=streamObj.nackCount,"video"===mediaType&&(result[mediaType][dirType].firs=self._parseConnectionStats(self._peerStats[peerId][subprop],streamObj,"firCount"),result[mediaType][dirType].plis=self._parseConnectionStats(self._peerStats[peerId][subprop],streamObj,"pliCount"),result[mediaType][dirType].slis=self._parseConnectionStats(self._peerStats[peerId][subprop],streamObj,"sliCount"),result[mediaType][dirType].totalFirs=streamObj.firCount,result[mediaType][dirType].totalPlis=streamObj.plisCount,result[mediaType][dirType].totalSlis=streamObj.sliCount),result[mediaType][dirType].bytes=self._parseConnectionStats(self._peerStats[peerId][subprop],streamObj,"receiving"===dirType?"bytesReceived":"bytesSent"),result[mediaType][dirType].packets=self._parseConnectionStats(self._peerStats[peerId][subprop],streamObj,"receiving"===dirType?"packetsReceived":"packetsSent"),result[mediaType][dirType].totalBytes="receiving"===dirType?streamObj.bytesReceived:streamObj.bytesSent,result[mediaType][dirType].totalPackets="receiving"===dirType?streamObj.packetsReceived:streamObj.packetsSent,"receiving"===dirType?(result[mediaType][dirType].jitter=streamObj.jitter||0,result[mediaType].receiving.fractionLost=streamObj.fractionLost,result[mediaType][dirType].packetsLost=self._parseConnectionStats(self._peerStats[peerId][subprop],streamObj,"packetsLost"),result[mediaType][dirType].packetsDiscarded=self._parseConnectionStats(self._peerStats[peerId][subprop],streamObj,"packetsDiscarded"),result[mediaType][dirType].totalPacketsLost=streamObj.packetsLost,result[mediaType][dirType].totalPacketsDiscarded=streamObj.packetsDiscarded||0):(result[mediaType].sending.rtt=streamObj.roundTripTime||0,result[mediaType].sending.targetBitrate=streamObj.targetBitrate||0),result[mediaType][dirType].codec&&streamObj.codecId&&(result[mediaType][dirType].codec.name=streamObj.codecId))})}})})}else{var reportedCandidate=!1,reportedCertificate=!1;loopFn(stats,function(obj,prop){if(0===prop.indexOf("ssrc_")){var dirType=prop.indexOf("_recv")>0?"receiving":"sending";obj.mediaType||(obj.mediaType=obj.hasOwnProperty("audioOutputLevel")||obj.hasOwnProperty("audioInputLevel")||obj.hasOwnProperty("googEchoCancellationReturnLoss")||obj.hasOwnProperty("googEchoCancellation")?"audio":"video"),self._peerStats[peerId][prop]||(self._peerStats[peerId][prop]=obj);try{if("video"===obj.mediaType&&"receiving"===dirType){var captureStartNtpTimeMs=parseInt(obj.googCaptureStartNtpTimeMs||"0",10);if(captureStartNtpTimeMs>0&&pc.getRemoteStreams().length>0&&document&&"function"==typeof document.getElementsByTagName){var streamId=pc.getRemoteStreams()[0].id||pc.getRemoteStreams()[0].label,elements=[];self._isUsingPlugin?elements=document.getElementsByTagName("object"):(elements=document.getElementsByTagName("video"),0===elements.length&&(elements=document.getElementsByTagName("audio")));for(var e=0;e<elements.length;e++){var videoElmStreamId=null;if(self._isUsingPlugin){if(!(elements[e].children&&"object"==typeof elements[e].children&&"number"==typeof elements[e].children.length&&elements[e].children.length>0))break;for(var ec=0;ec<elements[e].children.length;ec++)if("streamId"===elements[e].children[ec].name){videoElmStreamId=elements[e].children[ec].value||null;break}}else videoElmStreamId=elements[e].srcObject?elements[e].srcObject.id||elements[e].srcObject.label:null;if(videoElmStreamId&&videoElmStreamId===streamId){result[obj.mediaType][dirType].e2eDelay=(new Date).getTime()+22089888e5-captureStartNtpTimeMs-1e3*elements[e].currentTime;break}}}}}catch(error){log.warn([peerId,"RTCStatsReport",null,"Failed retrieving e2e delay ->"],error)}if(result[obj.mediaType][dirType].ssrc=parseInt(obj.ssrc||"0",10),result[obj.mediaType][dirType].bytes=self._parseConnectionStats(self._peerStats[peerId][prop],obj,"receiving"===dirType?"bytesReceived":"bytesSent"),result[obj.mediaType][dirType].packets=self._parseConnectionStats(self._peerStats[peerId][prop],obj,"receiving"===dirType?"packetsReceived":"packetsSent"),result[obj.mediaType][dirType].nacks=self._parseConnectionStats(self._peerStats[peerId][prop],obj,"receiving"===dirType?"googNacksReceived":"googNacksSent"),result[obj.mediaType][dirType].totalPackets=parseInt(("receiving"===dirType?obj.packetsReceived:obj.packetsSent)||"0",10),
result[obj.mediaType][dirType].totalBytes=parseInt(("receiving"===dirType?obj.bytesReceived:obj.bytesSent)||"0",10),result[obj.mediaType][dirType].totalNacks=parseInt(("receiving"===dirType?obj.googNacksReceived:obj.googNacksSent)||"0",10),result[obj.mediaType][dirType].codec&&(obj.googCodecName&&"unknown"!==obj.googCodecName&&(result[obj.mediaType][dirType].codec.name=obj.googCodecName),obj.codecImplementationName&&"unknown"!==obj.codecImplementationName&&(result[obj.mediaType][dirType].codec.implementation=obj.codecImplementationName)),"sending"===dirType?(result[obj.mediaType].sending.rtt=parseFloat(obj.googRtt||"0",10),result[obj.mediaType].sending.targetBitrate=obj.targetBitrate?parseInt(obj.targetBitrate,10):null):(result[obj.mediaType].receiving.packetsLost=self._parseConnectionStats(self._peerStats[peerId][prop],obj,"packetsLost"),result[obj.mediaType].receiving.packetsDiscarded=self._parseConnectionStats(self._peerStats[peerId][prop],obj,"packetsDiscarded"),result[obj.mediaType].receiving.jitter=parseFloat(obj.googJitterReceived||"0",10),result[obj.mediaType].receiving.jitterBufferMs=obj.googJitterBufferMs?parseFloat(obj.googJitterBufferMs||"0",10):null,result[obj.mediaType].receiving.totalPacketsLost=parseInt(obj.packetsLost||"0",10),result[obj.mediaType].receiving.totalPacketsDiscarded=parseInt(obj.packetsDiscarded||"0",10)),"video"===obj.mediaType?(result.video[dirType].framesCorrupted=obj.framesCorrupted?parseInt(obj.framesCorrupted,10):null,result.video[dirType].framesPerSecond=obj.framesPerSecond?parseFloat(obj.framesPerSecond,10):null,result.video[dirType].framesDropped=obj.framesDropped?parseInt(obj.framesDropped,10):null,"sending"===dirType?(result.video[dirType].frameWidth=obj.googFrameWidthSent?parseInt(obj.googFrameWidthSent,10):null,result.video[dirType].frameHeight=obj.googFrameHeightSent?parseInt(obj.googFrameHeightSent,10):null,result.video[dirType].plis=obj.googPlisSent?self._parseConnectionStats(self._peerStats[peerId][prop],obj,"googPlisSent"):null,result.video[dirType].firs=obj.googFirsSent?self._parseConnectionStats(self._peerStats[peerId][prop],obj,"googFirsSent"):null,result[obj.mediaType][dirType].totalPlis=obj.googPlisSent?parseInt(obj.googPlisSent,10):null,result[obj.mediaType][dirType].totalFirs=obj.googFirsSent?parseInt(obj.googFirsSent,10):null,result.video[dirType].framesEncoded=obj.framesEncoded?parseInt(obj.framesEncoded,10):null,result.video[dirType].frameRateEncoded=obj.googFrameRateEncoded?parseInt(obj.googFrameRateEncoded,10):null,result.video[dirType].frameRateInput=obj.googFrameRateInput?parseInt(obj.googFrameRateInput,10):null,result.video[dirType].frameRate=obj.googFrameRateSent?parseInt(obj.googFrameRateSent,10):null,result.video[dirType].qpSum=obj.qpSum?parseInt(obj.qpSum,10):null,result.video[dirType].frames=obj.framesSent?self._parseConnectionStats(self._peerStats[peerId][prop],obj,"framesSent"):null,result.video[dirType].totalFrames=obj.framesSent?parseInt(obj.framesSent,10):null):(result.video[dirType].frameWidth=obj.googFrameWidthReceived?parseInt(obj.googFrameWidthReceived,10):null,result.video[dirType].frameHeight=obj.googFrameHeightReceived?parseInt(obj.googFrameHeightReceived,10):null,result.video[dirType].plis=obj.googPlisReceived?self._parseConnectionStats(self._peerStats[peerId][prop],obj,"googPlisReceived"):null,result.video[dirType].firs=obj.googFirsReceived?self._parseConnectionStats(self._peerStats[peerId][prop],obj,"googFirsReceived"):null,result[obj.mediaType][dirType].totalPlis=obj.googPlisReceived?parseInt(obj.googPlisReceived,10):null,result[obj.mediaType][dirType].totalFirs=obj.googFirsReceived?parseInt(obj.googFirsReceived,10):null,result.video[dirType].framesDecoded=obj.framesDecoded?parseInt(obj.framesDecoded,10):null,result.video[dirType].frameRateDecoded=obj.googFrameRateDecoded?parseInt(obj.googFrameRateDecoded,10):null,result.video[dirType].frameRateOutput=obj.googFrameRateOutput?parseInt(obj.googFrameRateOutput,10):null,result.video[dirType].frameRate=obj.googFrameRateReceived?parseInt(obj.googFrameRateReceived,10):null,result.video[dirType].frames=obj.framesReceived?self._parseConnectionStats(self._peerStats[peerId][prop],obj,"framesReceived"):null,result.video[dirType].totalFrames=obj.framesReceived?parseInt(obj.framesReceived,10):null)):"receiving"===dirType?result.audio[dirType].outputLevel=parseFloat(obj.audioOutputLevel||"0",10):(result.audio[dirType].inputLevel=parseFloat(obj.audioInputLevel||"0",10),result.audio[dirType].echoReturnLoss=parseFloat(obj.googEchoCancellationReturnLoss||"0",10),result.audio[dirType].echoReturnLossEnhancement=parseFloat(obj.googEchoCancellationReturnLossEnhancement||"0",10)),self._peerStats[peerId][prop]=obj,reportedCandidate||loopFn(stats,function(canObj,canProp){reportedCandidate||0!==canProp.indexOf("Conn-")||obj.transportId===canObj.googChannelId&&(self._peerStats[peerId][canProp]||(self._peerStats[peerId][canProp]=canObj),formatCandidateFn("local",stats[canObj.localCandidateId]),formatCandidateFn("remote",stats[canObj.remoteCandidateId]),result.selectedCandidate.writable=canObj.googWritable?"true"===canObj.googWritable:null,result.selectedCandidate.readable=canObj.googReadable?"true"===canObj.googReadable:null,result.selectedCandidate.rtt=canObj.googRtt?self._parseConnectionStats(self._peerStats[peerId][canProp],canObj,"googRtt"):null,result.selectedCandidate.totalRtt=canObj.googRtt?parseInt(canObj.googRtt,10):null,result.selectedCandidate.requests={received:canObj.requestsReceived?self._parseConnectionStats(self._peerStats[peerId][canProp],canObj,"requestsReceived"):null,sent:canObj.requestsSent?self._parseConnectionStats(self._peerStats[peerId][canProp],canObj,"requestsSent"):null,totalReceived:canObj.requestsReceived?parseInt(canObj.requestsReceived,10):null,totalSent:canObj.requestsSent?parseInt(canObj.requestsSent,10):null},result.selectedCandidate.responses={received:canObj.responsesReceived?self._parseConnectionStats(self._peerStats[peerId][canProp],canObj,"responsesReceived"):null,sent:canObj.responsesSent?self._parseConnectionStats(self._peerStats[peerId][canProp],canObj,"responsesSent"):null,totalReceived:canObj.responsesReceived?parseInt(canObj.responsesReceived,10):null,totalSent:canObj.responsesSent?parseInt(canObj.responsesSent,10):null},result.selectedCandidate.consentRequests={received:canObj.consentRequestsReceived?self._parseConnectionStats(self._peerStats[peerId][canProp],canObj,"consentRequestsReceived"):null,sent:canObj.consentRequestsSent?self._parseConnectionStats(self._peerStats[peerId][canProp],canObj,"consentRequestsSent"):null,totalReceived:canObj.consentRequestsReceived?parseInt(canObj.consentRequestsReceived,10):null,totalSent:canObj.consentRequestsSent?parseInt(canObj.consentRequestsSent,10):null},result.selectedCandidate.consentResponses={received:canObj.consentResponsesReceived?self._parseConnectionStats(self._peerStats[peerId][canProp],canObj,"consentResponsesReceived"):null,sent:canObj.consentResponsesSent?self._parseConnectionStats(self._peerStats[peerId][canProp],canObj,"consentResponsesSent"):null,totalReceived:canObj.consentResponsesReceived?parseInt(canObj.consentResponsesReceived,10):null,totalSent:canObj.consentResponsesSent?parseInt(canObj.consentResponsesSent,10):null},self._peerStats[peerId][canProp]=canObj,reportedCandidate=!0)}),!reportedCertificate&&stats[obj.transportId]){result.certificate.srtpCipher=stats[obj.transportId].srtpCipher||null,result.certificate.dtlsCipher=stats[obj.transportId].dtlsCipher||null;var localCertId=stats[obj.transportId].localCertificateId,remoteCertId=stats[obj.transportId].remoteCertificateId;localCertId&&stats[localCertId]&&(result.certificate.local.derBase64=stats[localCertId].googDerBase64||null,stats[localCertId].googFingerprint&&(result.certificate.local.fingerprint=stats[localCertId].googFingerprint),stats[localCertId].googFingerprintAlgorithm&&(result.certificate.local.fingerprintAlgorithm=stats[localCertId].googFingerprintAlgorithm)),remoteCertId&&stats[remoteCertId]&&(result.certificate.remote.derBase64=stats[remoteCertId].googDerBase64||null,stats[remoteCertId].googFingerprint&&(result.certificate.remote.fingerprint=stats[remoteCertId].googFingerprint),stats[remoteCertId].googFingerprintAlgorithm&&(result.certificate.remote.fingerprintAlgorithm=stats[remoteCertId].googFingerprintAlgorithm)),reportedCertificate=!0}}})}0===(result.selectedCandidate.local.candidateType||"").indexOf("relay")?(result.selectedCandidate.local.turnMediaTransport="UDP",self._forceTURNSSL&&"firefox"!==window.webrtcDetectedBrowser?result.selectedCandidate.local.turnMediaTransport="TCP/TLS":(self._options.TURNServerTransport===self.TURN_TRANSPORT.TCP||self._options.forceTURNSSL)&&self._user.iceServers.length>0&&self._user.iceServers[0]&&self._user.iceServers[0].urls[0]&&self._user.iceServers[0].urls[0].indexOf("?transport=tcp")>0&&(result.selectedCandidate.local.turnMediaTransport="TCP")):result.selectedCandidate.local.turnMediaTransport=null,callback(null,result)},function(error){callback(error,null)})},Skylink.prototype._addPeer=function(targetMid,peerBrowser,toOffer,restartConn,receiveOnly,isSS){var self=this;return self._peerConnections[targetMid]&&!restartConn?void log.error([targetMid,null,null,"Connection to peer has already been made"]):(log.log([targetMid,null,null,"Starting the connection to peer. Options provided:"],{peerBrowser:peerBrowser,toOffer:toOffer,receiveOnly:receiveOnly,enableDataChannel:self._options.enableDataChannel}),log.info("Adding peer",isSS),restartConn||(self._peerConnections[targetMid]=self._createPeerConnection(targetMid,!!isSS)),self._peerConnections[targetMid]?void(self._peerConnections[targetMid].hasScreen=!!isSS):void log.error([targetMid,null,null,"Failed creating the connection to peer"]))},Skylink.prototype._restartPeerConnection=function(peerId,doIceRestart,callback){var self=this;if(!self._peerConnections[peerId])return void log.error([peerId,null,null,"Peer does not have an existing connection. Unable to restart"]);var pc=self._peerConnections[peerId],agent=(self.getPeerInfo(peerId)||{}).agent||{};if(self._isLowerThanVersion(agent.SMProtocolVersion||"","0.1.2")){var notSupportedError=new Error("Failed restarting with other agents connecting from other SDKs as re-negotiation is not supported by other SDKs");return log.warn([peerId,"RTCPeerConnection",null,"Ignoring restart request as agent's SDK does not support it"],notSupportedError),void("function"==typeof callback&&(log.debug([peerId,"RTCPeerConnection",null,"Firing restart failure callback"]),callback(notSupportedError)))}if(pc.signalingState===self.PEER_CONNECTION_STATE.STABLE&&self._peerConnections[peerId]){log.log([peerId,null,null,"Sending restart message to signaling server"]);var restartMsg={type:self._SIG_MESSAGE_TYPE.RESTART,mid:self._user.id,rid:self._user.room.session.rid,agent:window.webrtcDetectedBrowser,version:(window.webrtcDetectedVersion||0).toString(),os:window.navigator.platform,userInfo:self._getUserInfo(),target:peerId,weight:self._user.priorityWeight,receiveOnly:self.getPeerInfo().config.receiveOnly,enableIceTrickle:self._options.enableIceTrickle,enableDataChannel:self._options.enableDataChannel,enableIceRestart:self._enableIceRestart,doIceRestart:doIceRestart===!0&&self._enableIceRestart&&self._peerInformations[peerId]&&self._peerInformations[peerId].config.enableIceRestart,isRestartResend:!1,temasysPluginVersion:AdapterJS.WebRTCPlugin.plugin?AdapterJS.WebRTCPlugin.plugin.VERSION:null,SMProtocolVersion:self.SM_PROTOCOL_VERSION,DTProtocolVersion:self.DT_PROTOCOL_VERSION};self._user.connection.publishOnly&&(restartMsg.publishOnly={type:self._streams.screenshare&&self._streams.screenshare.stream?"screenshare":"video"}),self._user.parentId&&(restartMsg.parentId=self._user.parentId),self._peerEndOfCandidatesCounter[peerId]=self._peerEndOfCandidatesCounter[peerId]||{},self._peerEndOfCandidatesCounter[peerId].len=0,self._socketSendMessage(restartMsg),self._trigger("peerRestart",peerId,self.getPeerInfo(peerId),!0,doIceRestart===!0),"function"==typeof callback&&(log.debug([peerId,"RTCPeerConnection",null,"Firing restart callback"]),callback(null))}else if(pc.signalingState===self.PEER_CONNECTION_STATE.HAVE_LOCAL_OFFER){var hasLocalDescription=pc.localDescription&&pc.localDescription.sdp;if(hasLocalDescription)self._socketSendMessage({type:pc.localDescription.type,sdp:pc.localDescription.sdp,mid:self._user.id,target:peerId,rid:self._user.room.session.rid,restart:!0});else{var noLocalDescriptionError="Failed re-sending localDescription as there is no localDescription set to connection. There could be a handshaking step error";log.error([peerId,"RTCPeerConnection",null,noLocalDescriptionError],{localDescription:pc.localDescription,remoteDescription:pc.remoteDescription}),"function"==typeof callback&&(log.debug([peerId,"RTCPeerConnection",null,"Firing restart failure callback"]),callback(new Error(noLocalDescriptionError)))}}else{var unableToRestartError="Failed restarting as peer connection state is "+pc.signalingState;log.warn([peerId,"RTCPeerConnection",null,unableToRestartError]),"function"==typeof callback&&(log.debug([peerId,"RTCPeerConnection",null,"Firing restart failure callback"]),callback(new Error(unableToRestartError)))}},Skylink.prototype._removePeer=function(peerId){if(!this._peerConnections[peerId]&&!this._peerInformations[peerId])return void log.debug([peerId,"RTCPeerConnection",null,"Dropping the hangup from Peer as not connected to Peer at all."]);var peerInfo=clone(this.getPeerInfo(peerId))||{userData:"",settings:{},mediaStatus:{},agent:{},config:{},room:clone(this._selectedRoom)};"MCU"!==peerId?this._trigger("peerLeft",peerId,peerInfo,!1):(this._hasMCU=!1,log.log([peerId,null,null,"MCU has stopped listening and left"]),this._trigger("serverPeerLeft",peerId,this.SERVER_PEER_TYPE.MCU)),this._peerConnections[peerId]&&(this._peerConnections[peerId].signalingState!==this.PEER_CONNECTION_STATE.CLOSED&&this._peerConnections[peerId].close(),"MCU"!==peerId&&this._handleEndedStreams(peerId),delete this._peerConnections[peerId]),this._peerInformations[peerId]&&delete this._peerInformations[peerId],this._peerMessagesStamps[peerId]&&delete this._peerMessagesStamps[peerId],this._streamsSession[peerId]&&delete this._streamsSession[peerId],this._peerEndOfCandidatesCounter[peerId]&&delete this._peerEndOfCandidatesCounter[peerId],this._sdpSessions[peerId]&&delete this._sdpSessions[peerId],this._dataChannels[peerId]&&this._closeDataChannel(peerId),log.log([peerId,null,null,"Successfully removed peer"])},Skylink.prototype._createPeerConnection=function(targetMid,isScreenSharing){var pc,self=this;if(self._user.room.connected&&Array.isArray(self._user.iceServers)){try{pc=new RTCPeerConnection({iceServers:self._user.iceServers,iceTransportPolicy:self._options.filterCandidatesType.host&&self._options.filterCandidatesType.srflx&&!self._options.filterCandidatesType.relay?"relay":"all",bundlePolicy:"max-bundle",rtcpMuxPolicy:"require"},{optional:[{DtlsSrtpKeyAgreement:!0},{googIPv6:!0}]}),log.info([targetMid,null,null,"Created peer connection"])}catch(error){return log.error([targetMid,null,null,"Failed creating peer connection:"],error),null}return pc.setOffer="",pc.setAnswer="",pc.hasStream=!1,pc.hasScreen=!!isScreenSharing,pc.hasMainChannel=!1,pc.firefoxStreamId="",pc.processingLocalSDP=!1,pc.processingRemoteSDP=!1,pc.gathered=!1,pc.gathering=!1,self._gatheredCandidates[targetMid]={sending:{host:[],srflx:[],relay:[]},receiving:{host:[],srflx:[],relay:[]}},self._streamsSession[targetMid]=self._streamsSession[targetMid]||{},self._peerEndOfCandidatesCounter[targetMid]=self._peerEndOfCandidatesCounter[targetMid]||{},self._sdpSessions[targetMid]={local:{},remote:{}},pc.ondatachannel=function(event){var dc=event.channel||event;if(log.debug([targetMid,"RTCDataChannel",dc.label,"Received datachannel ->"],dc),self._options.enableDataChannel&&self._peerInformations[targetMid]&&self._peerInformations[targetMid].config.enableDataChannel){var channelType=self.DATA_CHANNEL_TYPE.DATA,channelKey=dc.label;pc.hasMainChannel||(channelType=self.DATA_CHANNEL_TYPE.MESSAGING,channelKey="main",pc.hasMainChannel=!0),self._createDataChannel(targetMid,dc)}else log.warn([targetMid,"RTCDataChannel",dc.label,"Not adding datachannel as enable datachannel is set to false"])},pc.onaddstream=function(event){if(self._peerConnections[targetMid]){var stream=event.stream||event,streamId=stream.id||stream.label;if("MCU"===targetMid)return void log.warn([targetMid,"MediaStream",streamId,"Ignoring received remote stream from MCU ->"],stream);if(!self._sdpSettings.direction.audio.receive&&!self._sdpSettings.direction.video.receive)return void log.warn([targetMid,"MediaStream",streamId,"Ignoring received empty remote stream ->"],stream);if(!self._hasMCU&&"firefox"===window.webrtcDetectedBrowser&&pc.getRemoteStreams().length>1&&pc.remoteDescription&&pc.remoteDescription.sdp&&-1===pc.remoteDescription.sdp.indexOf(" msid:"+streamId+" "))return void log.warn([targetMid,"MediaStream",streamId,"Ignoring received empty remote stream ->"],stream);var peerSettings=clone(self.getPeerInfo(targetMid).settings),hasScreenshare=peerSettings.video&&"object"==typeof peerSettings.video&&!!peerSettings.video.screenshare;pc.hasStream=!0,pc.hasScreen=!!hasScreenshare,self._streamsSession[targetMid][streamId]=peerSettings,self._onRemoteStreamAdded(targetMid,stream,!!hasScreenshare)}},pc.onicecandidate=function(event){self._onIceCandidate(targetMid,event.candidate||event)},pc.oniceconnectionstatechange=function(evt){var iceConnectionState=pc.iceConnectionState;log.debug([targetMid,"RTCIceConnectionState",null,"Ice connection state changed ->"],iceConnectionState),"edge"===window.webrtcDetectedBrowser&&("connecting"===iceConnectionState?iceConnectionState=self.ICE_CONNECTION_STATE.CHECKING:"new"===iceConnectionState&&(iceConnectionState=self.ICE_CONNECTION_STATE.FAILED)),self._trigger("iceConnectionState",iceConnectionState,targetMid),pc.iceConnectionState===self.ICE_CONNECTION_STATE.FAILED&&self._options.enableIceTrickle&&self._trigger("iceConnectionState",self.ICE_CONNECTION_STATE.TRICKLE_FAILED,targetMid)},pc.onsignalingstatechange=function(){log.debug([targetMid,"RTCSignalingState",null,"Peer connection state changed ->"],pc.signalingState),self._trigger("peerConnectionState",pc.signalingState,targetMid)},pc.onicegatheringstatechange=function(){log.log([targetMid,"RTCIceGatheringState",null,"Ice gathering state changed ->"],pc.iceGatheringState),self._trigger("candidateGenerationState",pc.iceGatheringState,targetMid)},"firefox"===window.webrtcDetectedBrowser&&(pc.removeStream=function(stream){for(var senders=pc.getSenders(),s=0;s<senders.length;s++)for(var tracks=stream.getTracks(),t=0;t<tracks.length;t++)tracks[t]===senders[s].track&&pc.removeTrack(senders[s])}),pc}},Skylink.prototype._restartMCUConnection=function(callback,doIceRestart){for(var self=this,listOfPeers=Object.keys(self._peerConnections),listOfPeerRestartErrors={},sendRestartMsgFn=function(peerId){var restartMsg={type:self._SIG_MESSAGE_TYPE.RESTART,mid:self._user.id,rid:self._user.room.session.rid,agent:window.webrtcDetectedBrowser,version:(window.webrtcDetectedVersion||0).toString(),os:window.navigator.platform,userInfo:self._getUserInfo(),target:peerId,weight:self._user.priorityWeight,receiveOnly:self.getPeerInfo().config.receiveOnly,enableIceTrickle:self._options.enableIceTrickle,enableDataChannel:self._options.enableDataChannel,enableIceRestart:self._enableIceRestart,doIceRestart:self._options.mcuUseRenegoRestart&&doIceRestart===!0&&self._enableIceRestart&&self._peerInformations[peerId]&&self._peerInformations[peerId].config.enableIceRestart,isRestartResend:!1,temasysPluginVersion:AdapterJS.WebRTCPlugin.plugin?AdapterJS.WebRTCPlugin.plugin.VERSION:null,SMProtocolVersion:self.SM_PROTOCOL_VERSION,DTProtocolVersion:self.DT_PROTOCOL_VERSION};self._user.connection.publishOnly&&(restartMsg.publishOnly={type:self._streams.screenshare&&self._streams.screenshare.stream?"screenshare":"video"}),self._user.parentId&&(restartMsg.parentId=self._user.parentId),log.log([peerId,"RTCPeerConnection",null,"Sending restart message to signaling server ->"],restartMsg),self._socketSendMessage(restartMsg)},i=0;i<listOfPeers.length;i++)if(self._peerConnections[listOfPeers[i]])"MCU"!==listOfPeers[i]&&(self._trigger("peerRestart",listOfPeers[i],self.getPeerInfo(listOfPeers[i]),!0,!1),self._mcuUseRenegoRestart||sendRestartMsgFn(listOfPeers[i]));else{var error="Peer connection with peer does not exists. Unable to restart";log.error([listOfPeers[i],"PeerConnection",null,error]),listOfPeerRestartErrors[listOfPeers[i]]=new Error(error)}if(self._trigger("serverPeerRestart","MCU",self.SERVER_PEER_TYPE.MCU),self._mcuUseRenegoRestart)self._peerEndOfCandidatesCounter.MCU=self._peerEndOfCandidatesCounter.MCU||{},self._peerEndOfCandidatesCounter.MCU.len=0,sendRestartMsgFn("MCU");else{var peerJoinedFn=function(peerId,peerInfo,isSelf){log.log([null,"PeerConnection",null,"Invoked all peers to restart with MCU. Firing callback"]),"function"==typeof callback&&(Object.keys(listOfPeerRestartErrors).length>0?callback({refreshErrors:listOfPeerRestartErrors,listOfPeers:listOfPeers},null):callback(null,{listOfPeers:listOfPeers}))};self.once("peerJoined",peerJoinedFn,function(peerId,peerInfo,isSelf){return isSelf}),self.leaveRoom(!1,function(error,success){if(error){if("function"==typeof callback){for(var i=0;i<listOfPeers.length;i++)listOfPeerRestartErrors[listOfPeers[i]]=error;callback({refreshErrors:listOfPeerRestartErrors,listOfPeers:listOfPeers},null)}}else self.joinRoom(self._selectedRoom)})}},Skylink.prototype._parseConnectionStats=function(prevStats,stats,prop){var nTime=stats.timestamp,oTime=prevStats.timestamp,nVal=parseFloat(stats[prop]||"0",10),oVal=parseFloat(prevStats[prop]||"0",10);return new Date(nTime).getTime()===new Date(oTime).getTime()?nVal:parseFloat(((nVal-oVal)/(nTime-oTime)*1e3).toFixed(3)||"0",10)},Skylink.prototype._signalingEndOfCandidates=function(targetMid){var self=this;if(self._peerEndOfCandidatesCounter[targetMid]&&self._peerConnections[targetMid].remoteDescription&&self._peerConnections[targetMid].remoteDescription.sdp&&"number"==typeof self._peerEndOfCandidatesCounter[targetMid].expectedLen&&self._peerEndOfCandidatesCounter[targetMid].len>=self._peerEndOfCandidatesCounter[targetMid].expectedLen&&(self._peerCandidatesQueue[targetMid]?0===self._peerCandidatesQueue[targetMid].length:!0)&&!self._peerEndOfCandidatesCounter[targetMid].hasSet){log.debug([targetMid,"RTCPeerConnection",null,"Signaling of end-of-candidates remote ICE gathering."]),self._peerEndOfCandidatesCounter[targetMid].hasSet=!0;try{if("edge"===window.webrtcDetectedBrowser){for(var mLineCounter=-1,addedMids=[],sdpLines=self._peerConnections[targetMid].remoteDescription.sdp.split("\r\n"),i=0;i<sdpLines.length;i++)if(0===sdpLines[i].indexOf("m="))mLineCounter++;else if(0===sdpLines[i].indexOf("a=mid:")){var mid=sdpLines[i].split("a=mid:")[1]||"";mid&&-1===addedMids.indexOf(mid)&&(addedMids.push(mid),self._addIceCandidate(targetMid,"endofcan-"+(new Date).getTime(),new RTCIceCandidate({sdpMid:mid,sdpMLineIndex:mLineCounter,candidate:"candidate:1 1 udp 1 0.0.0.0 9 typ endOfCandidates"})))}}else self._peerConnections[targetMid].addIceCandidate(null);self._gatheredCandidates[targetMid]&&self._trigger("candidatesGathered",targetMid,{expected:self._peerEndOfCandidatesCounter[targetMid].expectedLen||0,received:self._peerEndOfCandidatesCounter[targetMid].len||0,processed:self._gatheredCandidates[targetMid].receiving.srflx.length+self._gatheredCandidates[targetMid].receiving.relay.length+self._gatheredCandidates[targetMid].receiving.host.length})}catch(error){log.error([targetMid,"RTCPeerConnection",null,"Failed signaling end-of-candidates ->"],error)}}},Skylink.prototype._doOffer=function(targetMid,iceRestart,peerBrowser){var self=this,pc=self._peerConnections[targetMid]||self._addPeer(targetMid,peerBrowser);if(log.log([targetMid,null,null,"Checking caller status"],peerBrowser),!pc)return void log.warn([targetMid,"RTCSessionDescription","offer","Dropping of creating of offer as connection does not exists"]);if(pc.signalingState!==self.PEER_CONNECTION_STATE.STABLE)return void log.warn([targetMid,"RTCSessionDescription","offer",'Dropping of creating of offer as signalingState is not "'+self.PEER_CONNECTION_STATE.STABLE+'" ->'],pc.signalingState);var peerAgent=((self._peerInformations[targetMid]||{}).agent||{}).name||"",doIceRestart=!!((self._peerInformations[targetMid]||{}).config||{}).enableIceRestart&&iceRestart&&self._enableIceRestart,offerToReceiveAudio=!(!self._sdpSettings.connection.audio&&"MCU"!==targetMid),offerToReceiveVideo=!(!self._sdpSettings.connection.video&&"MCU"!==targetMid||("edge"===window.webrtcDetectedBrowser&&"edge"!==peerAgent||["IE","safari"].indexOf(window.webrtcDetectedBrowser)>-1&&"edge"===peerAgent?!self._currentCodecSupport.video.h264:0)),offerConstraints={offerToReceiveAudio:offerToReceiveAudio,offerToReceiveVideo:offerToReceiveVideo,iceRestart:doIceRestart};peerBrowser.os=peerBrowser.os||"",["IE","safari"].indexOf(window.webrtcDetectedBrowser)>-1&&(offerConstraints={mandatory:{OfferToReceiveAudio:offerToReceiveAudio,OfferToReceiveVideo:offerToReceiveVideo,iceRestart:doIceRestart}}),self._hasMCU&&"MCU"!==targetMid||self._addLocalMediaStreams(targetMid),self._options.enableDataChannel&&self._peerInformations[targetMid]&&self._peerInformations[targetMid].config.enableDataChannel&&(self._sdpSettings.connection.data||"MCU"===targetMid)&&(self._dataChannels[targetMid]&&self._dataChannels[targetMid].main||(self._createDataChannel(targetMid),self._peerConnections[targetMid].hasMainChannel=!0)),log.debug([targetMid,null,null,"Creating offer with config:"],offerConstraints),pc.endOfCandidates=!1,pc.createOffer(function(offer){log.debug([targetMid,null,null,"Created offer"],offer),self._setLocalAndSendMessage(targetMid,offer)},function(error){self._trigger("handshakeProgress",self.HANDSHAKE_PROGRESS.ERROR,targetMid,error),log.error([targetMid,null,null,"Failed creating an offer:"],error)},offerConstraints)},Skylink.prototype._doAnswer=function(targetMid){var self=this;log.log([targetMid,null,null,"Creating answer."]);var pc=self._peerConnections[targetMid];return pc?pc.signalingState!==self.PEER_CONNECTION_STATE.HAVE_REMOTE_OFFER?void log.warn([targetMid,"RTCSessionDescription","answer",'Dropping of creating of answer as signalingState is not "'+self.PEER_CONNECTION_STATE.HAVE_REMOTE_OFFER+'" ->'],pc.signalingState):(self._hasMCU&&"MCU"!==targetMid||self._addLocalMediaStreams(targetMid),void pc.createAnswer(function(answer){log.debug([targetMid,null,null,"Created answer"],answer),self._setLocalAndSendMessage(targetMid,answer)},function(error){log.error([targetMid,null,null,"Failed creating an answer:"],error),self._trigger("handshakeProgress",self.HANDSHAKE_PROGRESS.ERROR,targetMid,error)})):void log.warn([targetMid,"RTCSessionDescription","answer","Dropping of creating of answer as connection does not exists"])},Skylink.prototype._setLocalAndSendMessage=function(targetMid,sessionDescription){var self=this,pc=self._peerConnections[targetMid];return sessionDescription&&sessionDescription.sdp?pc?sessionDescription.type===self.HANDSHAKE_PROGRESS.OFFER&&pc.signalingState!==self.PEER_CONNECTION_STATE.STABLE?void log.warn([targetMid,"RTCSessionDescription",sessionDescription.type,'Local session description will not be set as signaling state is "'+pc.signalingState+'" ->'],sessionDescription):sessionDescription.type===self.HANDSHAKE_PROGRESS.ANSWER&&pc.signalingState!==self.PEER_CONNECTION_STATE.HAVE_REMOTE_OFFER?void log.warn([targetMid,"RTCSessionDescription",sessionDescription.type,'Local session description will not be set as signaling state is "'+pc.signalingState+'" ->'],sessionDescription):pc.processingLocalSDP?void log.warn([targetMid,"RTCSessionDescription",sessionDescription.type,"Local session description will not be set as another is being processed ->"],sessionDescription):(pc.processingLocalSDP=!0,sessionDescription.sdp=self._removeSDPFirefoxH264Pref(targetMid,sessionDescription),sessionDescription.sdp=self._removeSDPH264VP9AptRtxForOlderPlugin(targetMid,sessionDescription),sessionDescription.sdp=self._removeSDPCodecs(targetMid,sessionDescription),sessionDescription.sdp=self._handleSDPConnectionSettings(targetMid,sessionDescription,"local"),sessionDescription.sdp=self._removeSDPREMBPackets(targetMid,sessionDescription),log.log([targetMid,"RTCSessionDescription",sessionDescription.type,"Local session description updated ->"],sessionDescription.sdp),void pc.setLocalDescription(sessionDescription,function(){return log.debug([targetMid,"RTCSessionDescription",sessionDescription.type,"Local session description has been set ->"],sessionDescription),pc.processingLocalSDP=!1,self._trigger("handshakeProgress",sessionDescription.type,targetMid),sessionDescription.type===self.HANDSHAKE_PROGRESS.ANSWER?pc.setAnswer="local":pc.setOffer="local",self._options.enableIceTrickle||pc.gathered?void self._socketSendMessage({type:sessionDescription.type,sdp:self._addSDPMediaStreamTrackIDs(targetMid,sessionDescription),mid:self._user.id,target:targetMid,rid:self._user.room.session.rid,userInfo:self._getUserInfo()}):void log.log([targetMid,"RTCSessionDescription",sessionDescription.type,"Local session description sending is halted to complete ICE gathering."])},function(error){log.error([targetMid,"RTCSessionDescription",sessionDescription.type,"Local description failed setting ->"],error),pc.processingLocalSDP=!1,self._trigger("handshakeProgress",self.HANDSHAKE_PROGRESS.ERROR,targetMid,error)})):void log.warn([targetMid,"RTCSessionDescription",sessionDescription.type,"Local session description will not be set as connection does not exists ->"],sessionDescription):void log.warn([targetMid,"RTCSessionDescription",null,"Local session description is undefined ->"],sessionDescription)},Skylink.prototype._setIceServers=function(givenConfig){var self=this,givenIceServers=clone(givenConfig.iceServers),iceServersList={},newIceServers=[],useTURNSSLProtocol=!1,useTURNSSLPort=!1;self._options.forceTURNSSL&&("chrome"===window.webrtcDetectedBrowser||"safari"===window.webrtcDetectedBrowser||"IE"===window.webrtcDetectedBrowser?useTURNSSLProtocol=!0:useTURNSSLPort=!0),log.log("TURN server connections SSL configuration",{useTURNSSLProtocol:useTURNSSLProtocol,useTURNSSLPort:useTURNSSLPort});var i,pushIceServer=function(username,credential,url,index){if(iceServersList[username]||(iceServersList[username]={}),iceServersList[username][credential]||(iceServersList[username][credential]=[]),self._options.iceServer&&url.indexOf("temasys")>0){var parts=url.split(":"),subparts=(parts[1]||"").split("?");subparts[0]=self._options.iceServer,parts[1]=subparts.join("?"),url=parts.join(":")}-1===iceServersList[username][credential].indexOf(url)&&("number"==typeof index?iceServersList[username][credential].splice(index,0,url):iceServersList[username][credential].push(url))};for(i=0;i<givenIceServers.length;i++){var server=givenIceServers[i];if("string"==typeof server.url){if(0===server.url.indexOf("stun")){if(!self._options.enableSTUNServer){log.warn("Ignoring STUN server provided at index "+i,clone(server));continue}if(!self._options.usePublicSTUN&&-1===server.url.indexOf("temasys")){log.warn("Ignoring public STUN server provided at index "+i,clone(server));continue}}else if(0===server.url.indexOf("turn")){if(!self._options.enableTURNServer){log.warn("Ignoring TURN server provided at index "+i,clone(server));continue}if(-1===server.url.indexOf(":443")&&useTURNSSLPort){log.log("Ignoring TURN Server (non-SSL port) provided at index "+i,clone(server));continue}if(useTURNSSLProtocol){var parts=server.url.split(":");parts[0]="turns",server.url=parts.join(":")}}if(server.url.indexOf("@")>0){var protocolParts=server.url.split(":"),urlParts=protocolParts[1].split("@");server.username=urlParts[0],server.url=protocolParts[0]+":"+urlParts[1],
"edge"===window.webrtcDetectedBrowser?server.url+=":3478":protocolParts[2]&&(server.url+=":"+protocolParts[2])}var username="string"==typeof server.username?server.username:"none",credential="string"==typeof server.credential?server.credential:"none";if(0===server.url.indexOf("turn"))if(self._options.TURNServerTransport===self.TURN_TRANSPORT.ANY)pushIceServer(username,credential,server.url);else{var rawUrl=server.url;if(rawUrl.indexOf("?transport=")>0&&(rawUrl=rawUrl.split("?transport=")[0]),self._options.TURNServerTransport===self.TURN_TRANSPORT.NONE)pushIceServer(username,credential,rawUrl);else if(self._options.TURNServerTransport===self.TURN_TRANSPORT.UDP)pushIceServer(username,credential,rawUrl+"?transport=udp");else if(self._options.TURNServerTransport===self.TURN_TRANSPORT.TCP)pushIceServer(username,credential,rawUrl+"?transport=tcp");else{if(self._options.TURNServerTransport!==self.TURN_TRANSPORT.ALL){log.warn('Invalid TURN transport option "'+self._options.TURNServerTransport+'". Ignoring TURN server at index'+i,clone(server));continue}pushIceServer(username,credential,rawUrl+"?transport=tcp"),pushIceServer(username,credential,rawUrl+"?transport=udp")}}else pushIceServer(username,credential,server.url)}else log.warn("Ignoring ICE server provided at index "+i,clone(server))}self._options.enableSTUNServer&&self._options.usePublicSTUN&&"firefox"===window.webrtcDetectedBrowser&&pushIceServer("none","none","stun:stun.services.mozilla.com",0);var hasUrlsSupport=!1;"chrome"===window.webrtcDetectedBrowser&&window.webrtcDetectedVersion>34&&(hasUrlsSupport=!0),"firefox"===window.webrtcDetectedBrowser&&window.webrtcDetectedVersion>38&&(hasUrlsSupport=!0),"opera"===window.webrtcDetectedBrowser&&window.webrtcDetectedVersion>31&&(hasUrlsSupport=!0),"safari"!==window.webrtcDetectedBrowser&&"IE"!==window.webrtcDetectedBrowser||(hasUrlsSupport=!0),["bowser","edge"].indexOf(window.webrtcDetectedBrowser)>-1&&(hasUrlsSupport=!0);for(var serverUsername in iceServersList)if(iceServersList.hasOwnProperty(serverUsername))for(var serverCred in iceServersList[serverUsername])if(iceServersList[serverUsername].hasOwnProperty(serverCred))if(hasUrlsSupport){var urlsItem={urls:iceServersList[serverUsername][serverCred]};if("none"!==serverUsername&&(urlsItem.username=serverUsername),"none"!==serverCred&&(urlsItem.credential=serverCred),"edge"===window.webrtcDetectedBrowser){if(urlsItem.username&&urlsItem.credential){urlsItem.urls=[urlsItem.urls[0]],newIceServers.push(urlsItem);break}}else newIceServers.push(urlsItem)}else for(var j=0;j<iceServersList[serverUsername][serverCred].length;j++){var urlItem={url:iceServersList[serverUsername][serverCred][j]};"none"!==serverUsername&&(urlItem.username=serverUsername),"none"!==serverCred&&(urlItem.credential=serverCred),newIceServers.push(urlItem)}return log.log("Output iceServers configuration:",newIceServers),newIceServers},Skylink.prototype._onIceCandidate=function(targetMid,candidate){var self=this,pc=self._peerConnections[targetMid];if(!pc)return void log.warn([targetMid,"RTCIceCandidate",null,"Ignoring of ICE candidate event as Peer connection does not exists ->"],candidate);if(candidate.candidate){pc.gathering||(log.log([targetMid,"RTCIceCandidate",null,"ICE gathering has started."]),pc.gathering=!0,pc.gathered=!1,self._trigger("candidateGenerationState",self.CANDIDATE_GENERATION_STATE.GATHERING,targetMid));var candidateType=candidate.candidate.split(" ")[7];if(log.debug([targetMid,"RTCIceCandidate",candidateType,"Generated ICE candidate ->"],candidate),"endOfCandidates"===candidateType)return void log.warn([targetMid,"RTCIceCandidate",candidateType,"Dropping of sending ICE candidate end-of-candidates signal to prevent errors ->"],candidate);if(self._options.filterCandidatesType[candidateType]){if(!self._hasMCU||!self._forceTURN)return void log.warn([targetMid,"RTCIceCandidate",candidateType,"Dropping of sending ICE candidate as it matches ICE candidate filtering flag ->"],candidate);log.warn([targetMid,"RTCIceCandidate",candidateType,"Not dropping of sending ICE candidate as TURN connections are enforced as MCU is present (and act as a TURN itself) so filtering of ICE candidate flags are not honoured ->"],candidate)}if(self._gatheredCandidates[targetMid]||(self._gatheredCandidates[targetMid]={sending:{host:[],srflx:[],relay:[]},receiving:{host:[],srflx:[],relay:[]}}),self._gatheredCandidates[targetMid].sending[candidateType].push({sdpMid:candidate.sdpMid,sdpMLineIndex:candidate.sdpMLineIndex,candidate:candidate.candidate}),!self._options.enableIceTrickle)return void log.warn([targetMid,"RTCIceCandidate",candidateType,"Dropping of sending ICE candidate as trickle ICE is disabled ->"],candidate);log.debug([targetMid,"RTCIceCandidate",candidateType,"Sending ICE candidate ->"],candidate),self._socketSendMessage({type:self._SIG_MESSAGE_TYPE.CANDIDATE,label:candidate.sdpMLineIndex,id:candidate.sdpMid,candidate:candidate.candidate,mid:self._user.id,target:targetMid,rid:self._user.room.session.rid})}else if(log.log([targetMid,"RTCIceCandidate",null,"ICE gathering has completed."]),pc.gathering=!1,pc.gathered=!0,self._trigger("candidateGenerationState",self.CANDIDATE_GENERATION_STATE.COMPLETED,targetMid),self._options.enableIceTrickle)self._gatheredCandidates[targetMid]&&self._socketSendMessage({type:self._SIG_MESSAGE_TYPE.END_OF_CANDIDATES,noOfExpectedCandidates:self._gatheredCandidates[targetMid].sending.srflx.length+self._gatheredCandidates[targetMid].sending.host.length+self._gatheredCandidates[targetMid].sending.relay.length,mid:self._user.id,target:targetMid,rid:self._user.room.session.rid});else{var sessionDescription=self._peerConnections[targetMid].localDescription;if(!(sessionDescription&&sessionDescription.type&&sessionDescription.sdp))return void log.warn([targetMid,"RTCSessionDescription",null,"Not sending any session description after ICE gathering completed as it is not present."]);self._socketSendMessage({type:sessionDescription.type,sdp:self._addSDPMediaStreamTrackIDs(targetMid,sessionDescription),mid:self._user.id,userInfo:self._getUserInfo(),target:targetMid,rid:self._user.room.session.rid})}},Skylink.prototype._addIceCandidateToQueue=function(targetMid,canId,candidate){var candidateType=candidate.candidate.split(" ")[7];log.debug([targetMid,"RTCIceCandidate",canId+":"+candidateType,"Buffering ICE candidate."]),this._trigger("candidateProcessingState",this.CANDIDATE_PROCESSING_STATE.BUFFERED,targetMid,canId,candidateType,{candidate:candidate.candidate,sdpMid:candidate.sdpMid,sdpMLineIndex:candidate.sdpMLineIndex},null),this._peerCandidatesQueue[targetMid]=this._peerCandidatesQueue[targetMid]||[],this._peerCandidatesQueue[targetMid].push([canId,candidate])},Skylink.prototype._addIceCandidateFromQueue=function(targetMid){this._peerCandidatesQueue[targetMid]=this._peerCandidatesQueue[targetMid]||[];for(var i=0;i<this._peerCandidatesQueue[targetMid].length;i++){var canArray=this._peerCandidatesQueue[targetMid][i];if(canArray){var candidateType=canArray[1].candidate.split(" ")[7];log.debug([targetMid,"RTCIceCandidate",canArray[0]+":"+candidateType,"Adding buffered ICE candidate."]),this._addIceCandidate(targetMid,canArray[0],canArray[1])}else this._peerConnections[targetMid]&&this._peerConnections[targetMid].signalingState!==this.PEER_CONNECTION_STATE.CLOSED&&(log.debug([targetMid,"RTCPeerConnection",null,"Signaling of end-of-candidates remote ICE gathering."]),this._peerConnections[targetMid].addIceCandidate(null))}delete this._peerCandidatesQueue[targetMid],this._signalingEndOfCandidates(targetMid)},Skylink.prototype._addIceCandidate=function(targetMid,canId,candidate){var self=this,candidateType=candidate.candidate.split(" ")[7],onSuccessCbFn=function(){log.log([targetMid,"RTCIceCandidate",canId+":"+candidateType,"Added ICE candidate successfully."]),self._trigger("candidateProcessingState",self.CANDIDATE_PROCESSING_STATE.PROCESS_SUCCESS,targetMid,canId,candidateType,{candidate:candidate.candidate,sdpMid:candidate.sdpMid,sdpMLineIndex:candidate.sdpMLineIndex},null)},onErrorCbFn=function(error){log.error([targetMid,"RTCIceCandidate",canId+":"+candidateType,"Failed adding ICE candidate ->"],error),self._trigger("candidateProcessingState",self.CANDIDATE_PROCESSING_STATE.PROCESS_ERROR,targetMid,canId,candidateType,{candidate:candidate.candidate,sdpMid:candidate.sdpMid,sdpMLineIndex:candidate.sdpMLineIndex},error)};return log.debug([targetMid,"RTCIceCandidate",canId+":"+candidateType,"Adding ICE candidate."]),self._trigger("candidateProcessingState",self.CANDIDATE_PROCESSING_STATE.PROCESSING,targetMid,canId,candidateType,{candidate:candidate.candidate,sdpMid:candidate.sdpMid,sdpMLineIndex:candidate.sdpMLineIndex},null),self._peerConnections[targetMid]&&self._peerConnections[targetMid].signalingState!==self.PEER_CONNECTION_STATE.CLOSED?void self._peerConnections[targetMid].addIceCandidate(candidate,onSuccessCbFn,onErrorCbFn):(log.warn([targetMid,"RTCIceCandidate",canId+":"+candidateType,"Dropping ICE candidate as Peer connection does not exists or is closed"]),void self._trigger("candidateProcessingState",self.CANDIDATE_PROCESSING_STATE.DROPPED,targetMid,canId,candidateType,{candidate:candidate.candidate,sdpMid:candidate.sdpMid,sdpMLineIndex:candidate.sdpMLineIndex},new Error("Failed processing ICE candidate as Peer connection does not exists or is closed.")))},Skylink.prototype._createSessionFactory=function(){var self=this;return{states:{locked:!1,connected:!1,hasMCU:!1,readyState:null,readyStateError:null,readyStateHTTPStatus:null},path:null,name:null,protocol:null,credentials:{},socket:null,setReadyState:function(state,error){var room=this;log.debug([null,"Room",room.name,"Ready state ->"],state),room.states.readyState=state,room.states.readyStateError=error?error.errorCode:null,room.states.readyStateHTTPStatus=error?error.status:null,error&&log.error([null,"Room",room.name,"Ready state error ->"],error),self._trigger("readyStateChange",state,error,room.name)},getSessionCredentials:function(name){var room=this,xhr=new XMLHttpRequest;["object","function"].indexOf(typeof window.XDomainRequest)>-1&&(xhr=new XDomainRequest),room.protocol=self._options.forceSSL?"https:":window.location.protocol,room.name=self._options.credentials?self._options.defaultRoom:room,room.path=self._options.roomServer+"/api/"+self._options.appKey+"/"+room.name+(self._options.credentials?"/"+self._options.credentials.startDateTime+"/"+self._options.credentials.duration+"?&cred="+self._options.credentials.credentials+"&":"?&")+"rand="+Date.now(),room.setReadyState(self.READY_STATE_CHANGE.INIT),xhr.onload=function(){var response=JSON.parse(xhr.responseText||xhr.response||"{}")||{},status=xhr.status||200;log.debug("init() retrieved response ->",response),response.success?(room.credentials={uid:response.username,userCred:response.userCred,timeStamp:response.timeStamp,rid:response.room_key,roomCred:response.roomCred,len:response.len,start:response.start,cid:response.cid,apiOwner:response.apiOwner,isPrivileged:response.isPrivileged===!0,autoIntroduce:response.autoIntroduce!==!1},room.socket=self._createSocketFactory(response.ipSigServer,{"https:":response.httpsPortList,"http:":response.httpPortList}),room.setReadyState(self.READY_STATE_CHANGE.COMPLETED)):room.setReadyState(self.READY_STATE_CHANGE.ERROR,{content:response.info,status:status,errorCode:response.error})},xhr.onerror=function(){log.error("init() failed retrieving response due to network timeout."),room.setReadyState(self.READY_STATE_CHANGE.ERROR,{status:xhr.status||null,content:"Network error occurred. (Status: "+xhr.status+")",errorCode:self.READY_STATE_CHANGE_ERROR.XML_HTTP_REQUEST_ERROR})},room.setReadyState(self.READY_STATE_CHANGE.LOADING),xhr.open("GET",room.protocol+room.path,!0),xhr.send()}}},Skylink.prototype._joinRoomCallback=function(result,callback){var self=this;result.startConnection?(self.once("peerJoined",function(peerId,peerInfo){self._joinRoomCallback({peerId:peerId,room:peerInfo.room})}),self._socketSendMessage({type:"joinRoom",uid:self._user.room.session.uid,cid:self._user.room.session.cid,rid:self._user.room.session.rid,userCred:self._user.room.session.userCred,timeStamp:self._user.room.session.timeStamp,apiOwner:self._user.room.session.apiOwner,roomCred:self._user.room.session.roomCred,start:self._user.room.session.start,len:self._user.room.session.len,isPrivileged:self._user.room.session.isPrivileged===!0,autoIntroduce:self._user.room.session.autoIntroduce!==!1,key:self._options.appKey})):result.error?(log.error("joinRoom() failed ->",result),"function"==typeof callback&&callback({error:new Error(result.error),errorCode:result.errorCode||null,room:result.room},null)):(log.info("joinRoom() success ->",result),"function"==typeof callback&&callback(null,{peerId:result.peerId,room:result.room,peerInfo:self.getPeerInfo()}))},Skylink.prototype._leaveRoomCallback=function(result,callback){result.error?(log.error("leaveRoom() failed ->",result),"function"==typeof callback&&callback(new Error(result.error),null)):(log.info("leaveRoom() success ->",result),"function"==typeof callback&&callback(null,{peerId:result.peerId,previousRoom:result.room}))},Skylink.prototype._initCallback=function(result,callback){var self=this;self._user.room.readyState=result.state,self._trigger("readyStateChange",result.state,result.state===self.READY_STATE_CHANGE.ERROR?{content:result.content,status:result.status||null,errorCode:result.errorCode}:null,result.room),result.state===self.READY_STATE_CHANGE.ERROR?(log.error("init() failed ->",result),"function"==typeof callback&&callback({error:new Error(result.content),status:result.status||null,errorCode:result.errorCode},null)):result.state===self.READY_STATE_CHANGE.COMPLETED&&(log.info("init() success ->",clone(self._options)),"function"==typeof callback&&callback(null,{serverUrl:self._user.room.path,readyState:self._user.room.readyState,appKey:self._options.appKey,roomServer:self._options.roomServer,defaultRoom:self._options.defaultRoom,selectedRoom:self._selectedRoom,enableDataChannel:self._options.enableDataChannel,enableIceTrickle:self._options.enableIceTrickle,enableTURNServer:self._options.enableTURNServer,enableSTUNServer:self._options.enableSTUNServer,TURNTransport:self._options.TURNServerTransport,audioFallback:self._options.audioFallback,forceSSL:self._options.forceSSL,socketTimeout:self._options.socketTimeout,forceTURNSSL:self._options.forceTURNSSL,audioCodec:self._options.audioCodec,videoCodec:self._options.videoCodec,forceTURN:self._options.forceTURN,usePublicSTUN:self._options.usePublicSTUN,disableVideoFecCodecs:self._options.disableVideoFecCodecs,disableComfortNoiseCodec:self._options.disableComfortNoiseCodec,disableREMB:self._options.disableREMB,filterCandidatesType:self._options.filterCandidatesType,throttleIntervals:self._options.throttleIntervals,throttleShouldThrowError:self._options.throttlingShouldThrowError,mcuUseRenegoRestart:self._options.mcuUseRenegoRestart,iceServer:self._options.turnServer,socketServer:self._options.socketServer}))},Skylink.prototype._initFetchAPIData=function(room,callback,isInit){},Skylink.prototype._setSDPOpusConfig=function(targetMid,sessionDescription){var sdpLines=sessionDescription.sdp.split("\r\n"),payload=null,appendFmtpLineAtIndex=-1,userAudioSettings=this.getPeerInfo().settings.audio,opusSettings={useinbandfec:null,usedtx:null,maxplaybackrate:null,stereo:!1};userAudioSettings&&"object"==typeof userAudioSettings&&(opusSettings.stereo=userAudioSettings.stereo===!0,opusSettings.useinbandfec="boolean"==typeof userAudioSettings.useinbandfec?userAudioSettings.useinbandfec:null,opusSettings.usedtx="boolean"==typeof userAudioSettings.usedtx?userAudioSettings.usedtx:null,opusSettings.maxplaybackrate="number"==typeof userAudioSettings.maxplaybackrate?userAudioSettings.maxplaybackrate:null);for(var i=0;i<sdpLines.length;i++)if(0===sdpLines[i].indexOf("a=rtpmap:")&&sdpLines[i].toLowerCase().indexOf("opus/48000")>0){payload=(sdpLines[i].split(" ")[0]||"").split(":")[1]||null,appendFmtpLineAtIndex=i;break}if(!payload)return log.warn([targetMid,"RTCSessionDesription",sessionDescription.type,"Failed to find OPUS payload. Not configuring options."]),sessionDescription.sdp;for(var j=0;j<sdpLines.length;j++)if(0===sdpLines[j].indexOf("a=fmtp:"+payload)){for(var opusConfigs=(sdpLines[j].split("a=fmtp:"+payload)[1]||"").replace(/\s/g,"").split(";"),updatedOpusParams="",k=0;k<opusConfigs.length;k++)if(opusConfigs[k]&&opusConfigs[k].indexOf("=")>0){var params=opusConfigs[k].split("=");["useinbandfec","usedtx","sprop-stereo","stereo","maxplaybackrate"].indexOf(params[0])>-1?"useinbandfec"===params[0]&&"1"===params[1]&&null===opusSettings.useinbandfec?(log.log([targetMid,"RTCSessionDesription",sessionDescription.type,"Received OPUS useinbandfec as true by default."]),opusSettings.useinbandfec=!0):"usedtx"===params[0]&&"1"===params[1]&&null===opusSettings.usedtx?(log.log([targetMid,"RTCSessionDesription",sessionDescription.type,"Received OPUS usedtx as true by default."]),opusSettings.usedtx=!0):"maxplaybackrate"===params[0]&&parseInt(params[1]||"0",10)>0&&null===opusSettings.maxplaybackrate&&(log.log([targetMid,"RTCSessionDesription",sessionDescription.type,"Received OPUS maxplaybackrate as "+params[1]+" by default."]),opusSettings.maxplaybackrate=params[1]):updatedOpusParams+=opusConfigs[k]+";"}opusSettings.stereo===!0&&(updatedOpusParams+="stereo=1;"),opusSettings.useinbandfec===!0&&(updatedOpusParams+="useinbandfec=1;"),opusSettings.usedtx===!0&&(updatedOpusParams+="usedtx=1;"),opusSettings.maxplaybackrate&&(updatedOpusParams+="maxplaybackrate="+opusSettings.maxplaybackrate+";"),log.log([targetMid,"RTCSessionDesription",sessionDescription.type,"Updated OPUS parameters ->"],updatedOpusParams),sdpLines[j]="a=fmtp:"+payload+" "+updatedOpusParams,appendFmtpLineAtIndex=-1;break}if(appendFmtpLineAtIndex>0){var newFmtpLine="a=fmtp:"+payload+" ";opusSettings.stereo===!0&&(newFmtpLine+="stereo=1;"),opusSettings.useinbandfec===!0&&(newFmtpLine+="useinbandfec=1;"),opusSettings.usedtx===!0&&(newFmtpLine+="usedtx=1;"),opusSettings.maxplaybackrate&&(newFmtpLine+="maxplaybackrate="+opusSettings.maxplaybackrate+";"),log.info([targetMid,"RTCSessionDesription",sessionDescription.type,"Created OPUS parameters ->"],newFmtpLine),sdpLines.splice(appendFmtpLineAtIndex+1,0,newFmtpLine)}return sdpLines.join("\r\n")},Skylink.prototype._setSDPBitrate=function(targetMid,sessionDescription){var sdpLines=sessionDescription.sdp.split("\r\n"),parseFn=function(type,bw){var mLineType=type,mLineIndex=-1,cLineIndex=-1;"data"===type&&(mLineType="application");for(var i=0;i<sdpLines.length;i++)if(0===sdpLines[i].indexOf("m="+mLineType))mLineIndex=i;else if(mLineIndex>0){if(0===sdpLines[i].indexOf("m="))break;0===sdpLines[i].indexOf("c=")?cLineIndex=i:0!==sdpLines[i].indexOf("b=AS:")&&0!==sdpLines[i].indexOf("b:TIAS:")||(sdpLines.splice(i,1),i--)}return"number"==typeof bw&&bw>0?-1===cLineIndex?void log.error([targetMid,"RTCSessionDesription",sessionDescription.type,'Failed setting "'+type+'" bandwidth as c-line is missing.']):(log.info([targetMid,"RTCSessionDesription",sessionDescription.type,'Limiting maximum sending "'+type+'" bandwidth ->'],bw),void sdpLines.splice(cLineIndex+1,0,"firefox"===window.webrtcDetectedBrowser?"b=TIAS:"+1024*bw:"b=AS:"+bw)):void log.warn([targetMid,"RTCSessionDesription",sessionDescription.type,'Not limiting "'+type+'" bandwidth'])};if(parseFn("audio",this._streamsBandwidthSettings.bAS.audio),parseFn("video",this._streamsBandwidthSettings.bAS.video),parseFn("data",this._streamsBandwidthSettings.bAS.data),"number"==typeof this._streamsBandwidthSettings.googleX.min||"number"==typeof this._streamsBandwidthSettings.googleX.max){for(var codec=null,codecRtpMapLineIndex=-1,codecFmtpLineIndex=-1,j=0;j<sdpLines.length;j++)if(0===sdpLines[j].indexOf("m=video"))codec=sdpLines[j].split(" ")[3];else if(codec){if(0===sdpLines[j].indexOf("m="))break;if(0===sdpLines[j].indexOf("a=rtpmap:"+codec+" "))codecRtpMapLineIndex=j;else if(0===sdpLines[j].indexOf("a=fmtp:"+codec+" ")){sdpLines[j]=sdpLines[j].replace(/x-google-(min|max)-bitrate=[0-9]*[;]*/gi,""),codecFmtpLineIndex=j;break}}if(codecRtpMapLineIndex>-1){var xGoogleParams="";"number"==typeof this._streamsBandwidthSettings.googleX.min&&(xGoogleParams+="x-google-min-bitrate="+this._streamsBandwidthSettings.googleX.min+";"),"number"==typeof this._streamsBandwidthSettings.googleX.max&&(xGoogleParams+="x-google-max-bitrate="+this._streamsBandwidthSettings.googleX.max+";"),log.info([targetMid,"RTCSessionDesription",sessionDescription.type,"Limiting x-google-bitrate ->"],xGoogleParams),codecFmtpLineIndex>-1?sdpLines[codecFmtpLineIndex]+=(sdpLines[codecFmtpLineIndex].split(" ")[1]?";":"")+xGoogleParams:sdpLines.splice(codecRtpMapLineIndex+1,0,"a=fmtp:"+codec+" "+xGoogleParams)}}return sdpLines.join("\r\n")},Skylink.prototype._setSDPCodec=function(targetMid,sessionDescription){var sdpLines=sessionDescription.sdp.split("\r\n"),parseFn=function(type,codec){if("auto"===codec)return void log.warn([targetMid,"RTCSessionDesription",sessionDescription.type,'Not preferring any codec for "'+type+'" streaming. Using browser selection.']);for(var i=0;i<sdpLines.length;i++)if(0===sdpLines[i].indexOf("a=rtpmap:")&&sdpLines[i].toLowerCase().indexOf(codec.toLowerCase())>0){var payload=sdpLines[i].split(":")[1].split(" ")[0]||null;if(!payload)return void log.warn([targetMid,"RTCSessionDesription",sessionDescription.type,'Not preferring "'+codec+'" for "'+type+'" streaming as payload is not found.']);for(var j=0;j<sdpLines.length;j++)if(0===sdpLines[j].indexOf("m="+type)){log.info([targetMid,"RTCSessionDesription",sessionDescription.type,'Preferring "'+codec+'" for "'+type+'" streaming.']);var parts=sdpLines[j].split(" ");parts.indexOf(payload)>=3&&parts.splice(parts.indexOf(payload),1),parts.splice(3,0,payload),sdpLines[j]=parts.join(" ");break}}};return parseFn("audio",this._options.audioCodec),parseFn("video",this._options.videoCodec),sdpLines.join("\r\n")},Skylink.prototype._removeSDPFirefoxH264Pref=function(targetMid,sessionDescription){return log.info([targetMid,"RTCSessionDesription",sessionDescription.type,"Removing Firefox experimental H264 flag to ensure interopability reliability"]),sessionDescription.sdp.replace(/a=fmtp:0 profile-level-id=0x42e00c;packetization-mode=1\r\n/g,"")},Skylink.prototype._addSDPMediaStreamTrackIDs=function(targetMid,sessionDescription){if(!(this._peerConnections[targetMid]&&this._peerConnections[targetMid].getLocalStreams().length>0))return log.log([targetMid,"RTCSessionDesription",sessionDescription.type,"Not enforcing MediaStream IDs as no Streams is sent."]),sessionDescription.sdp;var sessionDescriptionStr=sessionDescription.sdp;this._options.enableIceTrickle||(sessionDescriptionStr=sessionDescriptionStr.replace(/a=end-of-candidates\r\n/g,""));var sdpLines=sessionDescriptionStr.split("\r\n"),localStream=(((this._peerInformations[targetMid]||{}).agent||{}).name||"",this._peerConnections[targetMid].getLocalStreams()[0]),localStreamId=localStream.id||localStream.label,parseFn=function(type,tracks){if(0===tracks.length)return void log.log([targetMid,"RTCSessionDesription",sessionDescription.type,'Not enforcing "'+type+'" MediaStreamTrack IDs as no Stream "'+type+'" tracks is sent.']);for(var trackId=tracks[0].id||tracks[0].label,trackLabel=tracks[0].label||"Default",ssrcId=null,hasReachedType=!1,i=0;i<sdpLines.length;i++)if(0!==sdpLines[i].indexOf("m="+type)){if(hasReachedType&&0===sdpLines[i].indexOf("a=ssrc:")){ssrcId=(sdpLines[i].split(":")[1]||"").split(" ")[0]||null;var msidLine="a=ssrc:"+ssrcId+" msid:"+localStreamId+" "+trackId,mslabelLine="a=ssrc:"+ssrcId+" mslabel:"+trackLabel,labelLine="a=ssrc:"+ssrcId+" label:"+trackLabel;-1===sdpLines.indexOf(msidLine)&&(sdpLines.splice(i+1,0,msidLine),i++),-1===sdpLines.indexOf(mslabelLine)&&(sdpLines.splice(i+1,0,mslabelLine),i++),-1===sdpLines.indexOf(labelLine)&&(sdpLines.splice(i+1,0,labelLine),i++),log.info([targetMid,"RTCSessionDesription",sessionDescription.type,"Updating MediaStreamTrack ssrc ("+ssrcId+') for "'+localStreamId+'" stream and "'+trackId+'" (label:"'+trackLabel+'")']);break}}else{if(hasReachedType)break;hasReachedType=!0}};if(parseFn("audio",localStream.getAudioTracks()),parseFn("video",localStream.getVideoTracks()),!this._options.enableIceTrickle){log.info([targetMid,"RTCSessionDesription",sessionDescription.type,"Appending end-of-candidates signal for non-trickle ICE connection."]);for(var i=0;i<sdpLines.length;i++)0===sdpLines[i].indexOf("a=candidate:")&&((sdpLines[i+1]?0===sdpLines[i+1].indexOf("a=candidate:")||0===sdpLines[i+1].indexOf("a=end-of-candidates"):0)||(sdpLines.splice(i+1,0,"a=end-of-candidates"),i++))}if(sessionDescription.type===this.HANDSHAKE_PROGRESS.ANSWER&&this._sdpSessions[targetMid]){for(var mLineIndex=-1,j=0;j<sdpLines.length;j++)if(0===sdpLines[j].indexOf("a=group:BUNDLE")&&this._sdpSessions[targetMid].remote.bundleLine)sdpLines[j]=this._sdpSessions[targetMid].remote.bundleLine;else if(0===sdpLines[j].indexOf("m=")){mLineIndex++;var compareA=sdpLines[j].split(" "),compareB=(this._sdpSessions[targetMid].remote.mLines[mLineIndex]||"").split(" ");compareA[0]&&compareB[0]&&compareA[0]!==compareB[0]&&(compareB[1]=0,log.info([targetMid,"RTCSessionDesription",sessionDescription.type,"Appending middle rejected m= line ->"],compareB.join(" ")),sdpLines.splice(j,0,compareB.join(" ")),j++,mLineIndex++)}for(;this._sdpSessions[targetMid].remote.mLines[mLineIndex+1];){mLineIndex++;var appendIndex=sdpLines.length;sdpLines[appendIndex-1].replace(/\s/gi,"")||(appendIndex-=1);var parts=(this._sdpSessions[targetMid].remote.mLines[mLineIndex]||"").split(" ");parts[1]=0,log.info([targetMid,"RTCSessionDesription",sessionDescription.type,"Appending later rejected m= line ->"],parts.join(" ")),sdpLines.splice(appendIndex,0,parts.join(" "))}}return"edge"!==window.webrtcDetectedBrowser||sessionDescription.type!==this.HANDSHAKE_PROGRESS.OFFER||sdpLines[sdpLines.length-1].replace(/\s/gi,"")||(log.info([targetMid,"RTCSessionDesription",sessionDescription.type,"Removing last empty space for Edge browsers"]),sdpLines.splice(sdpLines.length-1,1)),sdpLines.join("\r\n")},Skylink.prototype._removeSDPH264VP9AptRtxForOlderPlugin=function(targetMid,sessionDescription){var removeVP9AptRtxPayload=!1,agent=(this._peerInformations[targetMid]||{}).agent||{};if(agent.pluginVersion){var parts=agent.pluginVersion.split(".");removeVP9AptRtxPayload=parseInt(parts[0],10)>=0&&parseInt(parts[1],10)>=8&&parseInt(parts[2],10)>=870}return["chrome","opera"].indexOf(window.webrtcDetectedBrowser)>-1&&removeVP9AptRtxPayload&&(log.info([targetMid,"RTCSessionDesription",sessionDescription.type,"Removing VP9/H264 apt= and rtx payload lines causing connectivity issues"]),sessionDescription.sdp=sessionDescription.sdp.replace(/a=rtpmap:\d+ rtx\/\d+\r\na=fmtp:\d+ apt=101\r\n/g,""),sessionDescription.sdp=sessionDescription.sdp.replace(/a=rtpmap:\d+ rtx\/\d+\r\na=fmtp:\d+ apt=107\r\n/g,"")),sessionDescription.sdp},Skylink.prototype._removeSDPCodecs=function(targetMid,sessionDescription){var audioSettings=this.getPeerInfo().settings.audio,parseFn=function(type,codec){var payloadList=sessionDescription.sdp.match(new RegExp("a=rtpmap:(\\d*)\\ "+codec+".*","gi"));if(!(Array.isArray(payloadList)&&payloadList.length>0))return void log.warn([targetMid,"RTCSessionDesription",sessionDescription.type,'Not removing "'+codec+'" as it does not exists.']);for(var i=0;i<payloadList.length;i++){var payload=payloadList[i].split(" ")[0].split(":")[1];log.info([targetMid,"RTCSessionDesription",sessionDescription.type,'Removing "'+codec+'" payload ->'],payload),sessionDescription.sdp=sessionDescription.sdp.replace(new RegExp("a=rtpmap:"+payload+"\\ .*\\r\\n","g"),""),sessionDescription.sdp=sessionDescription.sdp.replace(new RegExp("a=fmtp:"+payload+"\\ .*\\r\\n","g"),""),sessionDescription.sdp=sessionDescription.sdp.replace(new RegExp("a=rtpmap:\\d+ rtx\\/\\d+\\r\\na=fmtp:\\d+ apt="+payload+"\\r\\n","g"),"");for(var sdpLines=sessionDescription.sdp.split("\r\n"),j=0;j<sdpLines.length;j++)if(0===sdpLines[j].indexOf("m="+type)){var parts=sdpLines[j].split(" ");parts.indexOf(payload)>=3&&parts.splice(parts.indexOf(payload),1),sdpLines[j]=parts.join(" ");break}sessionDescription.sdp=sdpLines.join("\r\n")}};return this._options.disableVideoFecCodecs&&(this._hasMCU?log.warn([targetMid,"RTCSessionDesription",sessionDescription.type,'Not removing "ulpfec" or "red" codecs as connected to MCU to prevent connectivity issues.']):(parseFn("video","red"),parseFn("video","ulpfec"))),this._options.disableComfortNoiseCodec&&audioSettings&&"object"==typeof audioSettings&&audioSettings.stereo&&parseFn("audio","CN"),sessionDescription.sdp},Skylink.prototype._removeSDPREMBPackets=function(targetMid,sessionDescription){return this._options.disableREMB?(log.info([targetMid,"RTCSessionDesription",sessionDescription.type,"Removing REMB packets."]),sessionDescription.sdp.replace(/a=rtcp-fb:\d+ goog-remb\r\n/g,"")):sessionDescription.sdp},Skylink.prototype._getSDPSelectedCodec=function(targetMid,sessionDescription,type){if(!sessionDescription||!sessionDescription.sdp)return null;for(var sdpLines=sessionDescription.sdp.split("\r\n"),selectedCodecInfo={name:null,implementation:null,clockRate:null,channels:null,payloadType:null,params:null},i=0;i<sdpLines.length;i++)if(0===sdpLines[i].indexOf("m="+type)){var parts=sdpLines[i].split(" ");if(parts.length<4)break;selectedCodecInfo.payloadType=parseInt(parts[3],10)}else if(null!==selectedCodecInfo.payloadType){if(0===sdpLines[i].indexOf("m="))break;if(0===sdpLines[i].indexOf("a=rtpmap:"+selectedCodecInfo.payloadType+" ")){var params=(sdpLines[i].split(" ")[1]||"").split("/");selectedCodecInfo.name=params[0]||"",selectedCodecInfo.clockRate=params[1]?parseInt(params[1],10):null,selectedCodecInfo.channels=params[2]?parseInt(params[2],10):null}else 0===sdpLines[i].indexOf("a=fmtp:"+selectedCodecInfo.payloadType+" ")&&(selectedCodecInfo.params=sdpLines[i].split("a=fmtp:"+selectedCodecInfo.payloadType+" ")[1]||null)}return log.debug([targetMid,"RTCSessionDesription",sessionDescription.type,'Parsing session description "'+type+'" codecs ->'],selectedCodecInfo),selectedCodecInfo},Skylink.prototype._removeSDPFilteredCandidates=function(targetMid,sessionDescription){return"MCU"===targetMid&&sessionDescription.type===this.HANDSHAKE_PROGRESS.ANSWER&&"firefox"===window.webrtcDetectedBrowser&&(sessionDescription.sdp=sessionDescription.sdp.replace(/ generation 0/g,""),sessionDescription.sdp=sessionDescription.sdp.replace(/ udp /g," UDP ")),this._forceTURN&&this._hasMCU?(log.warn([targetMid,"RTCSessionDesription",sessionDescription.type,"Not filtering ICE candidates as TURN connections are enforced as MCU is present (and act as a TURN itself) so filtering of ICE candidate flags are not honoured"]),sessionDescription.sdp):(this._options.filterCandidatesType.host&&(log.info([targetMid,"RTCSessionDesription",sessionDescription.type,'Removing "host" ICE candidates.']),sessionDescription.sdp=sessionDescription.sdp.replace(/a=candidate:.*host.*\r\n/g,"")),this._options.filterCandidatesType.srflx&&(log.info([targetMid,"RTCSessionDesription",sessionDescription.type,'Removing "srflx" ICE candidates.']),sessionDescription.sdp=sessionDescription.sdp.replace(/a=candidate:.*srflx.*\r\n/g,"")),this._options.filterCandidatesType.relay&&(log.info([targetMid,"RTCSessionDesription",sessionDescription.type,'Removing "relay" ICE candidates.']),sessionDescription.sdp=sessionDescription.sdp.replace(/a=candidate:.*relay.*\r\n/g,"")),sessionDescription.sdp)},Skylink.prototype._getCodecsSupport=function(callback){var self=this;self._currentCodecSupport&&callback(null),self._currentCodecSupport={audio:{},video:{}};try{if("edge"===window.webrtcDetectedBrowser){for(var codecs=RTCRtpSender.getCapabilities().codecs,i=0;i<codecs.length;i++)if(["audio","video"].indexOf(codecs[i].kind)>-1&&codecs[i].name){var codec=codecs[i].name.toLowerCase();
self._currentCodecSupport[codecs[i].kind][codec]=codecs[i].clockRate+(codecs[i].numChannels>1?"/"+codecs[i].numChannels:"")}callback(null)}else{var pc=new RTCPeerConnection(null),offerConstraints={offerToReceiveAudio:!0,offerToReceiveVideo:!0};["IE","safari"].indexOf(window.webrtcDetectedBrowser)>-1&&(offerConstraints={mandatory:{OfferToReceiveVideo:!0,OfferToReceiveAudio:!0}}),pc.createOffer(function(offer){for(var sdpLines=offer.sdp.split("\r\n"),mediaType="",i=0;i<sdpLines.length;i++)if(0===sdpLines[i].indexOf("m="))mediaType=(sdpLines[i].split("m=")[1]||"").split(" ")[0];else if(0===sdpLines[i].indexOf("a=rtpmap:")){if(-1===["audio","video"].indexOf(mediaType))continue;var parts=(sdpLines[i].split(" ")[1]||"").split("/"),codec=(parts[0]||"").toLowerCase(),info=parts[1]+(parts[2]?"/"+parts[2]:"");self._currentCodecSupport[mediaType][codec]=info}callback(null)},function(error){callback(error)},offerConstraints)}}catch(error){callback(error)}},Skylink.prototype._handleSDPConnectionSettings=function(targetMid,sessionDescription,direction){var self=this;if(!self._sdpSessions[targetMid])return sessionDescription.sdp;var sessionDescriptionStr=sessionDescription.sdp;"remote"!==direction||self.getPeerInfo(targetMid).config.enableIceTrickle||(sessionDescriptionStr=sessionDescriptionStr.replace(/a=end-of-candidates\r\n/g,""));var sdpLines=sessionDescriptionStr.split("\r\n"),peerAgent=((self._peerInformations[targetMid]||{}).agent||{}).name||"",mediaType="",bundleLineIndex=-1,bundleLineMids=[],mLineIndex=-1,settings=clone(self._sdpSettings);"MCU"===targetMid&&(settings.connection.audio=!0,settings.connection.video=!0,settings.connection.data=!0),settings.video&&(settings.connection.video="edge"===window.webrtcDetectedBrowser&&"edge"!==peerAgent||(["IE","safari"].indexOf(window.webrtcDetectedBrowser)>-1&&"edge"===peerAgent?!!self._currentCodecSupport.video.h264:!0)),self._hasMCU&&(settings.direction.audio.receive="MCU"!==targetMid,settings.direction.audio.send="MCU"===targetMid,settings.direction.video.receive="MCU"!==targetMid,settings.direction.video.send="MCU"===targetMid),self._sdpSessions[targetMid][direction].mLines=[],self._sdpSessions[targetMid][direction].bundleLine="";for(var i=0;i<sdpLines.length;i++){if(0===sdpLines[i].indexOf("a=group:BUNDLE"))self._sdpSessions[targetMid][direction].bundleLine=sdpLines[i],bundleLineIndex=i;else if(0===sdpLines[i].indexOf("m=")&&(mediaType=(sdpLines[i].split("m=")[1]||"").split(" ")[0]||"",mediaType="application"===mediaType?"data":mediaType,mLineIndex++,self._sdpSessions[targetMid][direction].mLines[mLineIndex]=sdpLines[i],!settings.connection[mediaType])){if(log.log([targetMid,"RTCSessionDesription",sessionDescription.type,"Removing rejected m="+mediaType+" line ->"],sdpLines[i]),bundleLineIndex>-1&&0===mLineIndex&&("remote"===direction?sessionDescription.type===this.HANDSHAKE_PROGRESS.OFFER:sessionDescription.type===this.HANDSHAKE_PROGRESS.ANSWER)){log.warn([targetMid,"RTCSessionDesription",sessionDescription.type,"Not removing rejected m="+mediaType+" line ->"],sdpLines[i]),settings.connection[mediaType]=!0,["audio","video"].indexOf(mediaType)>-1&&(settings.direction[mediaType].send=!1,settings.direction[mediaType].receive=!1);continue}if("remote"===direction||sessionDescription.type===this.HANDSHAKE_PROGRESS.ANSWER){var parts=sdpLines[i].split(" ");parts[1]=0,sdpLines[i]=parts.join(" ");continue}}"remote"!==direction||0!==sdpLines[i].indexOf("a=candidate:")||self.getPeerInfo(targetMid).config.enableIceTrickle||(sdpLines[i+1]?0===sdpLines[i+1].indexOf("a=candidate:")||0===sdpLines[i+1].indexOf("a=end-of-candidates"):0)||(log.info([targetMid,"RTCSessionDesription",sessionDescription.type,"Appending end-of-candidates signal for non-trickle ICE connection."]),sdpLines.splice(i+1,0,"a=end-of-candidates"),i++),mediaType&&(settings.connection[mediaType]?0===sdpLines[i].indexOf("a=mid:")?bundleLineMids.push(sdpLines[i].split("a=mid:")[1]||""):"local"===direction&&mediaType&&["audio","video"].indexOf(mediaType)>-1&&["a=sendrecv","a=sendonly","a=recvonly"].indexOf(sdpLines[i])>-1&&(settings.direction[mediaType].send&&!settings.direction[mediaType].receive?sdpLines[i]=sdpLines[i].indexOf("send")>-1?"a=sendonly":"a=inactive":!settings.direction[mediaType].send&&settings.direction[mediaType].receive?sdpLines[i]=sdpLines[i].indexOf("recv")>-1?"a=recvonly":"a=inactive":settings.direction[mediaType].send||settings.direction[mediaType].receive||(sdpLines[i]="a=inactive"),self._hasMCU||"firefox"===window.webrtcDetectedBrowser||"firefox"!==peerAgent||sessionDescription.type!==self.HANDSHAKE_PROGRESS.OFFER||"a=recvonly"!==sdpLines[i]||(log.warn([targetMid,"RTCSessionDesription",sessionDescription.type,"Overriding any original settings to receive only to send and receive to resolve chrome BUNDLE errors."]),sdpLines[i]="a=sendrecv",settings.direction[mediaType].send=!0,settings.direction[mediaType].receive=!0)):(sdpLines.splice(i,1),i--)),(sdpLines[i]||"").replace(/\n|\r|\s|\ /gi,"")||(sdpLines.splice(i,1),i--)}return bundleLineIndex>-1&&(sdpLines[bundleLineIndex]="a=group:BUNDLE "+bundleLineMids.join(" ")),"edge"!==window.webrtcDetectedBrowser&&(sdpLines[sdpLines.length-1].replace(/\n|\r|\s/gi,"")?sdpLines.push(""):sdpLines[sdpLines.length-1]=""),log.info([targetMid,"RTCSessionDesription",sessionDescription.type,"Handling connection lines and direction ->"],settings),sdpLines.join("\r\n")},Skylink.prototype._getSDPFingerprint=function(targetMid,sessionDescription){var fingerprint={fingerprint:null,fingerprintAlgorithm:null,derBase64:null};if(!sessionDescription||!sessionDescription.sdp)return fingerprint;for(var sdpLines=sessionDescription.sdp.split("\r\n"),i=0;i<sdpLines.length;i++)if(0===sdpLines[i].indexOf("a=fingerprint")){var parts=sdpLines[i].replace("a=fingerprint:","").split(" ");fingerprint.fingerprint=parts[1],fingerprint.fingerprintAlgorithm=parts[0];break}return fingerprint};(function(){return{logs:[],getLogs:function(){},clearAllLogs:function(){},printAllLogs:function(){}}})();Skylink.prototype._socketSendMessage=function(message){var self=this;return self._socket.connected?void(self._socket.queue.types.indexOf(message.type)>-1?self._socket.queue.timestamp&&(new Date).getTime()-self._socket.queue.timestamp<=self._socket.queue.interval?(log.debug(["(all)","Socket",message.type,"Queueing message ->"],message),self._socket.queue.messages.push(message),self._socketSendMessageProcessNextQueue()):(self._socket.queue.fn&&clearTimeout(self._socket.queue.fn),self._socket.socket.send(JSON.stringify(message)),"public"===message.type?self._trigger("incomingMessage",{content:message.data,isPrivate:!1,targetPeerId:null,listOfPeers:Object.keys(self._peerInformations),isDataChannel:!1,senderPeerId:self._user.id},self._user.id,self.getPeerInfo(),!0):"stream"!==message.type&&(self._user.timestamps[message.type]=message.stamp),self._socket.queue.timestamp=(new Date).getTime(),self._socket.queue.messages.length>0&&self._socketSendMessageProcessNextQueue()):(log.debug([message.target||"(all)","Socket",message.type,"Sending message ->"],message),self._socket.socket.send(JSON.stringify(message)))):log.warn([message.target||"(all)","Socket",message.type,"Dropping of message as Socket connection is not opened ->"],message)},Skylink.prototype._socketSendMessageProcessNextQueue=function(){var self=this;self._socket.queue.fn||(self._socket.queue.fn=setTimeout(function(){if(self._socket.queue.fn=null,!self._socket.connected)return void log.warn("Dropping queue stack of messages as socket connection is closed ->",self._socket.queue.messages);if(0!==self._socket.queue.messages.length){for(var currentStack=[],i=0;i<self._socket.queue.messages.length;i++){var messageItem=self._socket.queue.messages[i];["muteAudioEvent","muteVideoEvent","updateUserEvent"].indexOf(messageItem.type)>-1&&self._user.timestamps[messageItem.type]>=messageItem.stamp?(self._socket.queue.messages.splice(i,1),i--):currentStack.length<=self._socket.queue.throughput&&(["muteAudioEvent","muteVideoEvent","updateUserEvent"].indexOf(messageItem.type)>-1&&(self._user.timestamps[messageItem.type]=messageItem.stamp),self._socket.queue.messages.splice(i,1),i--,currentStack.push(JSON.stringify(messageItem)))}log.debug(["(all)","Socket","group","Sending queue stack ->"],currentStack),self._socket.socket.send(JSON.stringify({type:self._SIG_MESSAGE_TYPE.GROUP,lists:currentStack,mid:self._user.id,rid:self._user.room.session.rid})),self._socket.queue.timestamp=(new Date).getTime();for(var j=0;j<currentStack.length;j++)"public"===currentStack[j].type&&self._trigger("incomingMessage",{content:currentStack[j].data,isPrivate:!1,targetPeerId:null,listOfPeers:Object.keys(self._peerInformations),isDataChannel:!1,senderPeerId:self._user.id},self._user.id,self.getPeerInfo(),!0);self._socketSendMessageProcessNextQueue()}},self._socket.queue.interval))},Skylink.prototype._socketAttemptConnection=function(callback){var self=this,socketPorts=self._socket.ports[self._socket.session.protocol],fallbackState=null;null===self._socket.session.port?(self._socket.session.port=socketPorts[0],self._socket.session.finalAttempts=0,self._socket.session.retries=0,fallbackState=self.SOCKET_FALLBACK.NON_FALLBACK):ports.indexOf(self._signalingServerPort)===ports.length-1?"WebSocket"===self._socket.session.transportType?(self._socket.session.transportType="Polling",self._socket.session.port=socketPorts[0]):self._socket.session.finalAttempts++:self._socket.session.port=socketPorts[socketPorts.indexOf(self._socket.session.port)+1],self._socket.session.options={forceNew:!0,reconnection:!0,timeout:self._options.socketTimeout,reconnectionAttempts:2,reconnectionDelayMax:5e3,reconnectionDelay:1e3,transports:["websocket"]},"Polling"===self._socket.session.transportType&&(self._socket.session.options.reconnectionDelayMax=1e3,self._socket.session.options.reconnectionAttempts=4,self._socket.session.options.transports=["xhr-polling","jsonp-polling","polling"]),null===fallbackState&&(fallbackState="http:"===self._socket.session.protocol?"Polling"===self._socket.session.transportType?self.SOCKET_FALLBACK.LONG_POLLING:self.SOCKET_FALLBACK.FALLBACK_PORT:"Polling"===self._socket.session.transportType?self.SOCKET_FALLBACK.LONG_POLLING_SSL:self.SOCKET_FALLBACK.FALLBACK_SSL_PORT,self._socket.session.retries++,self._trigger("socketError",self.SOCKET_ERROR.RECONNECTION_ATTEMPT,null,fallbackState,self._socketGetSession()),self._trigger("channelRetry",fallbackState,self._socket.session.retries,self._socketGetSession())),self._socket.session.path=self._socket.session.protocol+"//"+self._socket.server+":"+self._socket.session.port,"string"==typeof self._options.socketServer&&(self._socket.session.path=self._socket.session.protocol+"//"+self._options.socketServer+":"+self._socket.session.port),self._socket.socket&&(self._socket.removeAllListeners(),self._socket.disconnect(),self._socket=null),self._socket.connected=!1,log.log("Opening socket connection ->",self._socketGetSession()),self._socket.socket=io.connect(self._socket.session.path,self._socket.session.options),self._socket.socket.on("reconnect_attempt",function(attempt){self._socket.session.retries++,self._trigger("channelRetry",fallbackState,self._socket.session.retries,self._socketGetSession())}),self._socket.socket.on("reconnect_failed",function(){fallbackState===self.SOCKET_FALLBACK.NON_FALLBACK?self._trigger("socketError",self.SOCKET_ERROR.CONNECTION_FAILED,new Error('Failed connection with transport "'+self._socket.session.transportType+'" and port '+self._socket.session.port+"."),fallbackState,self._socketGetSession()):self._trigger("socketError",self.SOCKET_ERROR.RECONNECTION_FAILED,new Error('Failed reconnection with transport "'+self._socket.session.transportType+'" and port '+self._socket.session.port+"."),fallbackState,self._socketGetSession()),self._socket.session.finalAttempts<4?self._socketAttemptConnection():(self._trigger("socketError",self.SOCKET_ERROR.RECONNECTION_ABORTED,new Error("Reconnection aborted as there no more available ports, transports and final attempts left."),fallbackState,self._socketGetSession()),callback(new Error("Reconnection aborted.")))}),self._socket.socket.on("connect",function(){self._socket.connected||(log.log("Socket channel opened for port @"+self._socket.session.port+"."),self._socket.connected=!0,self._trigger("channelOpen",clone(self._socketSession)),callback())}),self._socket.socket.on("reconnect",function(){self._socket.connected||(log.log("Socket channel opened after reconnection attempt ("+self._socket.session.retries+") for port @"+self._socket.session.port+"."),self._socket.connected=!0,self._trigger("channelOpen",self._socketGetSession()),callback())}),self._socket.socket.on("error",function(error){return error.message.indexOf("xhr post error")>-1?(log.error("Socket channel Polling errors and connection is unstable. Disconnecting.."),self._trigger("socketError",self.SOCKET_ERROR.CONNECTION_ABORTED,new Error('Failed reconnection with transport "'+self._socket.session.transportType+'" and port '+self._socket.session.port+"."),fallbackState,self._socketGetSession()),void self._socketClose()):(log.error("App exception occurred. Please check your event handlers for code errors. ->",error),void self._trigger("channelError",error,self._socketGetSession()))}),self._socket.socket.on("disconnect",function(){self._socket.connected&&(log.warn("Socket connection closed abruptly."),self._socket.connected=!1,self._trigger("channelClose",self._socketGetSession()),self._user.room.connected&&(self.leaveRoom(!1),self._trigger("sessionDisconnect",self._user.id,self.getPeerInfo())))}),self._socket.socket.on("message",function(messageStr){var message=JSON.parse(messageStr);if(message.type===self._SIG_MESSAGE_TYPE.GROUP){log.debug("Bundle of "+message.lists.length+" messages");for(var i=0;i<message.lists.length;i++){var indiMessage=JSON.parse(message.lists[i]);self._processSigMessage(indiMessage),self._trigger("channelMessage",indiMessage,self._socketGetSession())}}else self._processSigMessage(message),self._trigger("channelMessage",message,clone(self._socketSession))})},Skylink.prototype._socketOpen=function(callback){var self=this;self._socket.socket&&self._socketClose(),self._socket.session.port=null,self._socket.session.protocol=self._options.forceSSL?"https:":window.location.protocol,self._socket.session.transportType=window.WebSocket?"WebSocket":"Polling",self._socket.session.retries=0,self._socket.session.finalAttempts=0,self._socket.session.fallbackState=null,self._socketAttemptConnection(callback)},Skylink.prototype._socketGetSession=function(){var self=this;return{finalAttempts:self._socket.session.finalAttempts,serverUrl:self._socket.session.path,socketOptions:clone(self._socket.session.options),attempts:self._socket.session.retries,transportType:self._socket.session.transportType}},Skylink.prototype._socketClose=function(){var self=this;self._socket.socket&&self._socket.socket.removeAllListeners(),self._socket.connected&&(self._socket.socket&&self._socket.socket.disconnect(),self._socket.connected=!1,self._trigger("channelClose",self._socketGetSession())),self._socket.socket=null},Skylink.prototype._SIG_MESSAGE_TYPE={JOIN_ROOM:"joinRoom",IN_ROOM:"inRoom",ENTER:"enter",WELCOME:"welcome",RESTART:"restart",OFFER:"offer",ANSWER:"answer",CANDIDATE:"candidate",BYE:"bye",REDIRECT:"redirect",UPDATE_USER:"updateUserEvent",ROOM_LOCK:"roomLockEvent",MUTE_VIDEO:"muteVideoEvent",MUTE_AUDIO:"muteAudioEvent",PUBLIC_MESSAGE:"public",PRIVATE_MESSAGE:"private",STREAM:"stream",GROUP:"group",GET_PEERS:"getPeers",PEER_LIST:"peerList",INTRODUCE:"introduce",INTRODUCE_ERROR:"introduceError",APPROACH:"approach",START_RECORDING:"startRecordingRoom",STOP_RECORDING:"stopRecordingRoom",RECORDING:"recordingEvent",END_OF_CANDIDATES:"endOfCandidates"},Skylink.prototype._groupMessageList=[Skylink.prototype._SIG_MESSAGE_TYPE.STREAM,Skylink.prototype._SIG_MESSAGE_TYPE.UPDATE_USER,Skylink.prototype._SIG_MESSAGE_TYPE.MUTE_AUDIO,Skylink.prototype._SIG_MESSAGE_TYPE.MUTE_VIDEO,Skylink.prototype._SIG_MESSAGE_TYPE.PUBLIC_MESSAGE],Skylink.prototype._processSigMessage=function(message,session){var origin=message.mid;if(origin&&origin!==this._user.id||(origin="Server"),log.debug([origin,null,null,"Received from peer ->"],message.type),message.mid===this._user.id&&message.type!==this._SIG_MESSAGE_TYPE.REDIRECT&&message.type!==this._SIG_MESSAGE_TYPE.IN_ROOM)return void log.debug([origin,null,null,"Ignoring message ->"],message.type);switch(message.type){case this._SIG_MESSAGE_TYPE.PUBLIC_MESSAGE:this._publicMessageHandler(message);break;case this._SIG_MESSAGE_TYPE.PRIVATE_MESSAGE:this._privateMessageHandler(message);break;case this._SIG_MESSAGE_TYPE.IN_ROOM:this._inRoomHandler(message);break;case this._SIG_MESSAGE_TYPE.ENTER:this._enterHandler(message);break;case this._SIG_MESSAGE_TYPE.WELCOME:this._welcomeHandler(message);break;case this._SIG_MESSAGE_TYPE.RESTART:this._restartHandler(message);break;case this._SIG_MESSAGE_TYPE.OFFER:this._offerHandler(message);break;case this._SIG_MESSAGE_TYPE.ANSWER:this._answerHandler(message);break;case this._SIG_MESSAGE_TYPE.CANDIDATE:this._candidateHandler(message);break;case this._SIG_MESSAGE_TYPE.BYE:this._byeHandler(message);break;case this._SIG_MESSAGE_TYPE.REDIRECT:this._redirectHandler(message);break;case this._SIG_MESSAGE_TYPE.UPDATE_USER:this._updateUserEventHandler(message);break;case this._SIG_MESSAGE_TYPE.MUTE_VIDEO:this._muteVideoEventHandler(message);break;case this._SIG_MESSAGE_TYPE.MUTE_AUDIO:this._muteAudioEventHandler(message);break;case this._SIG_MESSAGE_TYPE.STREAM:this._streamEventHandler(message);break;case this._SIG_MESSAGE_TYPE.ROOM_LOCK:this._roomLockEventHandler(message);break;case this._SIG_MESSAGE_TYPE.PEER_LIST:this._peerListEventHandler(message);break;case this._SIG_MESSAGE_TYPE.INTRODUCE_ERROR:this._introduceErrorEventHandler(message);break;case this._SIG_MESSAGE_TYPE.APPROACH:this._approachEventHandler(message);break;case this._SIG_MESSAGE_TYPE.RECORDING:this._recordingEventHandler(message);break;case this._SIG_MESSAGE_TYPE.END_OF_CANDIDATES:this._endOfCandidatesHandler(message);break;default:log.error([message.mid,null,null,"Unsupported message ->"],message.type)}},Skylink.prototype._peerListEventHandler=function(message){var self=this;self._peerList=message.result,log.log(["Server",null,message.type,"Received list of peers"],self._peerList),self._trigger("getPeersStateChange",self.GET_PEERS_STATE.RECEIVED,self._user.id,self._peerList)},Skylink.prototype._endOfCandidatesHandler=function(message){var self=this,targetMid=message.mid;self._peerConnections[targetMid]&&self._peerConnections[targetMid].signalingState!==self.PEER_CONNECTION_STATE.CLOSED&&(self._peerEndOfCandidatesCounter[targetMid].expectedLen=message.noOfExpectedCandidates||0,self._signalingEndOfCandidates(targetMid))},Skylink.prototype._introduceErrorEventHandler=function(message){var self=this;log.log(["Server",null,message.type,"Introduce failed. Reason: "+message.reason]),self._trigger("introduceStateChange",self.INTRODUCE_STATE.ERROR,self._user.id,message.sendingPeerId,message.receivingPeerId,message.reason)},Skylink.prototype._approachEventHandler=function(message){var self=this;log.log(["Server",null,message.type,"Approaching peer"],message.target),self._trigger("handshakeProgress",self.HANDSHAKE_PROGRESS.ENTER,self._user.id);var enterMsg={type:self._SIG_MESSAGE_TYPE.ENTER,mid:self._user.id,rid:self._user.room.session.rid,agent:window.webrtcDetectedBrowser,version:(window.webrtcDetectedVersion||0).toString(),os:window.navigator.platform,userInfo:self._getUserInfo(),receiveOnly:self.getPeerInfo().config.receiveOnly,target:message.target,weight:self._user.priorityWeight,temasysPluginVersion:AdapterJS.WebRTCPlugin.plugin?AdapterJS.WebRTCPlugin.plugin.VERSION:null,enableIceTrickle:self._options.enableIceTrickle,enableDataChannel:self._options.enableDataChannel,enableIceRestart:self._enableIceRestart,SMProtocolVersion:self.SM_PROTOCOL_VERSION,DTProtocolVersion:self.DT_PROTOCOL_VERSION};self._user.connection.publishOnly&&(enterMsg.publishOnly={type:self._streams.screenshare&&self._streams.screenshare.stream?"screenshare":"video"}),self._user.parentId&&(enterMsg.parentId=self._user.parentId),self._socketSendMessage(enterMsg)},Skylink.prototype._redirectHandler=function(message){if(log.log(["Server",null,message.type,"System action warning:"],{message:message.info,reason:message.reason,action:message.action}),message.action===this.SYSTEM_ACTION.REJECT)for(var key in this._peerConnections)this._peerConnections.hasOwnProperty(key)&&this._removePeer(key);"toClose"===message.reason&&(message.reason="toclose"),this._trigger("systemAction",message.action,message.info,message.reason)},Skylink.prototype._updateUserEventHandler=function(message){var targetMid=message.mid;if(log.log([targetMid,null,message.type,"Peer updated userData:"],message.userData),this._peerInformations[targetMid]){if(this._peerMessagesStamps[targetMid]&&"number"==typeof message.stamp){if(message.stamp<this._peerMessagesStamps[targetMid].userData)return void log.warn([targetMid,null,message.type,"Dropping outdated status ->"],message);this._peerMessagesStamps[targetMid].userData=message.stamp}this._peerInformations[targetMid].userData=message.userData||{},this._trigger("peerUpdated",targetMid,this.getPeerInfo(targetMid),!1)}else log.log([targetMid,null,message.type,"Peer does not have any user information"])},Skylink.prototype._roomLockEventHandler=function(message){var targetMid=message.mid;log.log([targetMid,message.type,"Room lock status:"],message.lock),this._trigger("roomLock",message.lock,targetMid,this.getPeerInfo(targetMid),!1)},Skylink.prototype._muteAudioEventHandler=function(message){var targetMid=message.mid;if(log.log([targetMid,null,message.type,"Peer's audio muted:"],message.muted),this._peerInformations[targetMid]){if(this._peerMessagesStamps[targetMid]&&"number"==typeof message.stamp){if(message.stamp<this._peerMessagesStamps[targetMid].audioMuted)return void log.warn([targetMid,null,message.type,"Dropping outdated status ->"],message);this._peerMessagesStamps[targetMid].audioMuted=message.stamp}this._peerInformations[targetMid].mediaStatus.audioMuted=message.muted,this._trigger("streamMuted",targetMid,this.getPeerInfo(targetMid),!1,this._peerInformations[targetMid].settings.video&&this._peerInformations[targetMid].settings.video.screenshare),this._trigger("peerUpdated",targetMid,this.getPeerInfo(targetMid),!1)}else log.log([targetMid,message.type,"Peer does not have any user information"])},Skylink.prototype._muteVideoEventHandler=function(message){var targetMid=message.mid;if(log.log([targetMid,null,message.type,"Peer's video muted:"],message.muted),this._peerInformations[targetMid]){if(this._peerMessagesStamps[targetMid]&&"number"==typeof message.stamp){if(message.stamp<this._peerMessagesStamps[targetMid].videoMuted)return void log.warn([targetMid,null,message.type,"Dropping outdated status ->"],message);this._peerMessagesStamps[targetMid].videoMuted=message.stamp}this._peerInformations[targetMid].mediaStatus.videoMuted=message.muted,this._trigger("streamMuted",targetMid,this.getPeerInfo(targetMid),!1,this._peerInformations[targetMid].settings.video&&this._peerInformations[targetMid].settings.video.screenshare),this._trigger("peerUpdated",targetMid,this.getPeerInfo(targetMid),!1)}else log.log([targetMid,null,message.type,"Peer does not have any user information"])},Skylink.prototype._streamEventHandler=function(message){var targetMid=message.mid;log.log([targetMid,null,message.type,"Peer's stream status:"],message.status),this._peerInformations[targetMid]&&message.streamId?(this._streamsSession[targetMid]=this._streamsSession[targetMid]||{},"ended"===message.status&&(message.settings&&"object"==typeof message.settings&&"undefined"==typeof this._streamsSession[targetMid][message.streamId]&&(this._streamsSession[targetMid][message.streamId]={audio:message.settings.audio,video:message.settings.video}),this._handleEndedStreams(targetMid,message.streamId))):log.log([targetMid,null,message.type,"Peer does not have any user information"])},Skylink.prototype._byeHandler=function(message){var targetMid=message.mid,selfId=(this._user||{}).sid;selfId!==targetMid?(log.log([targetMid,null,message.type,"Peer has left the room"]),this._removePeer(targetMid)):log.log([targetMid,null,message.type,"Self has left the room"])},Skylink.prototype._privateMessageHandler=function(message){var targetMid=message.mid;log.log([targetMid,null,message.type,"Received private message from peer:"],message.data),this._trigger("incomingMessage",{content:message.data,isPrivate:!0,targetPeerId:message.target,isDataChannel:!1,senderPeerId:targetMid},targetMid,this.getPeerInfo(targetMid),!1)},Skylink.prototype._publicMessageHandler=function(message){var targetMid=message.mid;log.log([targetMid,null,message.type,"Received public message from peer:"],message.data),this._trigger("incomingMessage",{content:message.data,isPrivate:!1,targetPeerId:null,isDataChannel:!1,senderPeerId:targetMid},targetMid,this.getPeerInfo(targetMid),!1)},Skylink.prototype._recordingEventHandler=function(message){var self=this;if(log.debug(["MCU","Recording",null,"Received recording message ->"],message),"on"===message.action)self._recordings[message.recordingId]||(log.debug(["MCU","Recording",message.recordingId,"Started recording"]),self._currentRecordingId=message.recordingId,self._recordings[message.recordingId]={active:!0,state:self.RECORDING_STATE.START,startedDateTime:(new Date).toISOString(),endedDateTime:null,mixingDateTime:null,links:null,error:null},self._recordingStartInterval=setTimeout(function(){log.log(["MCU","Recording",message.recordingId,"4 seconds has been recorded. Recording can be stopped now"]),self._recordingStartInterval=null},4e3),self._trigger("recordingState",self.RECORDING_STATE.START,message.recordingId,null,null));else if("off"===message.action){if(!self._recordings[message.recordingId])return void log.error(["MCU","Recording",message.recordingId,'Received request of "off" but the session is empty']);self._currentRecordingId=null,self._recordingStartInterval&&(clearTimeout(self._recordingStartInterval),log.warn(["MCU","Recording",message.recordingId,"Recording stopped abruptly before 4 seconds"]),self._recordingStartInterval=null),log.debug(["MCU","Recording",message.recordingId,"Stopped recording"]),self._recordings[message.recordingId].active=!1,self._recordings[message.recordingId].state=self.RECORDING_STATE.STOP,self._recordings[message.recordingId].endedDateTime=(new Date).toISOString(),self._trigger("recordingState",self.RECORDING_STATE.STOP,message.recordingId,null,null)}else if("url"===message.action){if(!self._recordings[message.recordingId])return void log.error(["MCU","Recording",message.recordingId,"Received URL but the session is empty"]);var links={};if(Array.isArray(message.urls))for(var i=0;i<message.urls.length;i++)links[messages.urls[i].id||""]=messages.urls[i].url||"";else"string"==typeof message.url&&(links.mixin=message.url);self._recordings[message.recordingId].links=links,self._recordings[message.recordingId].state=self.RECORDING_STATE.LINK,self._recordings[message.recordingId].mixingDateTime=(new Date).toISOString(),self._trigger("recordingState",self.RECORDING_STATE.LINK,message.recordingId,links,null)}else{var recordingError=new Error(message.error||"Unknown error");if(!self._recordings[message.recordingId])return void log.error(["MCU","Recording",message.recordingId,"Received error but the session is empty ->"],recordingError);log.error(["MCU","Recording",message.recordingId,"Recording failure ->"],recordingError),self._recordings[message.recordingId].state=self.RECORDING_STATE.ERROR,self._recordings[message.recordingId].error=recordingError,self._recordings[message.recordingId].active&&(log.debug(["MCU","Recording",message.recordingId,"Stopped recording abruptly"]),self._recordings[message.recordingId].active=!1),self._trigger("recordingState",self.RECORDING_STATE.ERROR,message.recordingId,null,recordingError)}},Skylink.prototype._inRoomHandler=function(message){var self=this;log.log(["Server",null,message.type,"User is now in the room and functionalities are now available. Config received:"],message.pc_config),self._user.iceServers=self._setIceServers(message.pc_config),self._user.room.connected=!0,self._user.id=message.sid,self._user.priorityWeight=message.tieBreaker,self._trigger("peerJoined",self._user.id,self.getPeerInfo(),!0),self._trigger("handshakeProgress",self.HANDSHAKE_PROGRESS.ENTER,self._user.id);var streamId=null;self._streams.screenshare&&self._streams.screenshare.stream?(streamId=self._streams.screenshare.stream.id||self._streams.screenshare.stream.label,self._trigger("incomingStream",self._user.id,self._streams.screenshare.stream,!0,self.getPeerInfo(),!0,streamId)):self._streams.userMedia&&self._streams.userMedia.stream&&(streamId=self._streams.userMedia.stream.id||self._streams.userMedia.stream.label,self._trigger("incomingStream",self._user.id,self._streams.userMedia.stream,!0,self.getPeerInfo(),!1,streamId));var enterMsg={type:self._SIG_MESSAGE_TYPE.ENTER,mid:self._user.id,rid:self._user.room.session.rid,agent:window.webrtcDetectedBrowser,version:(window.webrtcDetectedVersion||0).toString(),os:window.navigator.platform,userInfo:self._getUserInfo(),receiveOnly:self.getPeerInfo().config.receiveOnly,weight:self._user.priorityWeight,temasysPluginVersion:AdapterJS.WebRTCPlugin.plugin?AdapterJS.WebRTCPlugin.plugin.VERSION:null,enableIceTrickle:self._options.enableIceTrickle,enableDataChannel:self._options.enableDataChannel,enableIceRestart:self._enableIceRestart,SMProtocolVersion:self.SM_PROTOCOL_VERSION,DTProtocolVersion:self.DT_PROTOCOL_VERSION};self._user.connection.publishOnly&&(enterMsg.publishOnly={type:self._streams.screenshare&&self._streams.screenshare.stream?"screenshare":"video"}),self._user.parentId&&(enterMsg.parentId=self._user.parentId),self._socketSendMessage(enterMsg)},Skylink.prototype._enterHandler=function(message){var self=this,targetMid=message.mid,isNewPeer=!1,userInfo=message.userInfo||{};if(userInfo.settings=userInfo.settings||{},userInfo.mediaStatus=userInfo.mediaStatus||{},userInfo.config={enableIceTrickle:"boolean"==typeof message.enableIceTrickle?message.enableIceTrickle:!0,enableIceRestart:"boolean"==typeof message.enableIceRestart?message.enableIceRestart:!1,enableDataChannel:"boolean"==typeof message.enableDataChannel?message.enableDataChannel:!0,priorityWeight:"number"==typeof message.weight?message.weight:0,receiveOnly:message.receiveOnly===!0,publishOnly:!!message.publishOnly},userInfo.parentId=message.parentId||null,userInfo.agent={name:"string"==typeof message.agent&&message.agent?message.agent:"other",version:function(){if(!message.version||"string"!=typeof message.version)return 0;if(message.version.indexOf(".")>-1){var parts=message.version.split(".");if(parts.length>2){var majorVer=parts[0]||"0";return parts.splice(0,1),parseFloat(majorVer+"."+parts.join("0"),10)}return parseFloat(message.version||"0",10)}return parseInt(message.version||"0",10)}(),os:"string"==typeof message.os&&message.os?message.os:"",pluginVersion:"string"==typeof message.temasysPluginVersion&&message.temasysPluginVersion?message.temasysPluginVersion:null,SMProtocolVersion:message.SMProtocolVersion&&"string"==typeof message.SMProtocolVersion?message.SMProtocolVersion:"0.1.1",DTProtocolVersion:message.DTProtocolVersion&&"string"==typeof message.DTProtocolVersion?message.DTProtocolVersion:"0.1.0"},log.log([targetMid,"RTCPeerConnection",null,'Peer "enter" received ->'],message),"MCU"!==targetMid&&self._user.parentId&&self._user.parentId===targetMid)return void log.warn([targetMid,"RTCPeerConnection",null,'Discarding "enter" for parentId case ->'],message);if(!self._peerInformations[targetMid]){isNewPeer=!0,self._peerInformations[targetMid]=userInfo;var hasScreenshare=userInfo.settings.video&&"object"==typeof userInfo.settings.video&&!!userInfo.settings.video.screenshare;
self._addPeer(targetMid,{agent:userInfo.agent.name,version:userInfo.agent.version,os:userInfo.agent.os},!1,!1,message.receiveOnly,hasScreenshare),"MCU"===targetMid?(log.info([targetMid,"RTCPeerConnection",null,"MCU feature has been enabled"]),self._hasMCU=!0,self._trigger("serverPeerJoined",targetMid,self.SERVER_PEER_TYPE.MCU)):self._trigger("peerJoined",targetMid,self.getPeerInfo(targetMid),!1),self._trigger("handshakeProgress",self.HANDSHAKE_PROGRESS.ENTER,targetMid)}self._peerMessagesStamps[targetMid]=self._peerMessagesStamps[targetMid]||{userData:0,audioMuted:0,videoMuted:0};var welcomeMsg={type:self._SIG_MESSAGE_TYPE.WELCOME,mid:self._user.id,rid:self._user.room.session.rid,enableIceTrickle:self._options.enableIceTrickle,enableDataChannel:self._options.enableDataChannel,enableIceRestart:self._enableIceRestart,agent:window.webrtcDetectedBrowser,version:(window.webrtcDetectedVersion||0).toString(),receiveOnly:self.getPeerInfo().config.receiveOnly,os:window.navigator.platform,userInfo:self._getUserInfo(),target:targetMid,weight:self._user.priorityWeight,temasysPluginVersion:AdapterJS.WebRTCPlugin.plugin?AdapterJS.WebRTCPlugin.plugin.VERSION:null,SMProtocolVersion:self.SM_PROTOCOL_VERSION,DTProtocolVersion:self.DT_PROTOCOL_VERSION};self._user.connection.publishOnly&&(welcomeMsg.publishOnly={type:self._streams.screenshare&&self._streams.screenshare.stream?"screenshare":"video"}),self._user.parentId&&(welcomeMsg.parentId=self._user.parentId),self._socketSendMessage(welcomeMsg),isNewPeer&&self._trigger("handshakeProgress",self.HANDSHAKE_PROGRESS.WELCOME,targetMid)},Skylink.prototype._restartHandler=function(message){var self=this,targetMid=message.mid,userInfo=message.userInfo||{};if(userInfo.settings=userInfo.settings||{},userInfo.mediaStatus=userInfo.mediaStatus||{},userInfo.config={enableIceTrickle:"boolean"==typeof message.enableIceTrickle?message.enableIceTrickle:!0,enableIceRestart:"boolean"==typeof message.enableIceRestart?message.enableIceRestart:!1,enableDataChannel:"boolean"==typeof message.enableDataChannel?message.enableDataChannel:!0,priorityWeight:"number"==typeof message.weight?message.weight:0,receiveOnly:message.receiveOnly===!0,publishOnly:!!message.publishOnly},userInfo.parentId=message.parentId||null,userInfo.agent={name:"string"==typeof message.agent&&message.agent?message.agent:"other",version:function(){if(!message.version||"string"!=typeof message.version)return 0;if(message.version.indexOf(".")>-1){var parts=message.version.split(".");if(parts.length>2){var majorVer=parts[0]||"0";return parts.splice(0,1),parseFloat(majorVer+"."+parts.join("0"),10)}return parseFloat(message.version||"0",10)}return parseInt(message.version||"0",10)}(),os:"string"==typeof message.os&&message.os?message.os:"",pluginVersion:"string"==typeof message.temasysPluginVersion&&message.temasysPluginVersion?message.temasysPluginVersion:null,SMProtocolVersion:message.SMProtocolVersion&&"string"==typeof message.SMProtocolVersion?message.SMProtocolVersion:"0.1.1",DTProtocolVersion:message.DTProtocolVersion&&"string"==typeof message.DTProtocolVersion?message.DTProtocolVersion:"0.1.0"},log.log([targetMid,"RTCPeerConnection",null,'Peer "restart" received ->'],message),!self._peerInformations[targetMid])return void log.error([targetMid,"RTCPeerConnection",null,"Peer does not have an existing session. Ignoring restart process."]);if("MCU"!==targetMid&&self._user.parentId&&self._user.parentId===targetMid)return void log.warn([targetMid,"RTCPeerConnection",null,'Discarding "restart" for parentId case ->'],message);if(self._hasMCU&&!self._mcuUseRenegoRestart)return log.warn([targetMid,"RTCPeerConnection",null,"Dropping restart request as MCU does not support re-negotiation. Restart workaround is to re-join Room for Peer."]),void self._trigger("peerRestart",targetMid,self.getPeerInfo(targetMid),!1,!1);if(self._peerInformations[targetMid]=userInfo,self._peerMessagesStamps[targetMid]=self._peerMessagesStamps[targetMid]||{userData:0,audioMuted:0,videoMuted:0},self._peerEndOfCandidatesCounter[targetMid]=self._peerEndOfCandidatesCounter[targetMid]||{},self._peerEndOfCandidatesCounter[targetMid].len=0,self._user.priorityWeight>message.weight){if(log.debug([targetMid,"RTCPeerConnection",null,"Re-negotiating new offer/answer."]),self._peerMessagesStamps[targetMid].hasRestart)return void log.warn([targetMid,"RTCPeerConnection",null,'Discarding extra "restart" received.']);self._peerMessagesStamps[targetMid].hasRestart=!0,self._doOffer(targetMid,message.doIceRestart===!0,{agent:userInfo.agent.name,version:userInfo.agent.version,os:userInfo.agent.os},!0)}else{log.debug([targetMid,"RTCPeerConnection",null,"Waiting for peer to start re-negotiation."]);var restartMsg={type:self._SIG_MESSAGE_TYPE.RESTART,mid:self._user.id,rid:self._user.room.session.rid,agent:window.webrtcDetectedBrowser,version:(window.webrtcDetectedVersion||0).toString(),os:window.navigator.platform,userInfo:self._getUserInfo(),target:targetMid,weight:self._user.priorityWeight,enableIceTrickle:self._options.enableIceTrickle,enableDataChannel:self._options.enableDataChannel,enableIceRestart:self._enableIceRestart,doIceRestart:message.doIceRestart===!0,receiveOnly:self.getPeerInfo().config.receiveOnly,isRestartResend:!0,temasysPluginVersion:AdapterJS.WebRTCPlugin.plugin?AdapterJS.WebRTCPlugin.plugin.VERSION:null,SMProtocolVersion:self.SM_PROTOCOL_VERSION,DTProtocolVersion:self.DT_PROTOCOL_VERSION};self._user.connection.publishOnly&&(restartMsg.publishOnly={type:self._streams.screenshare&&self._streams.screenshare.stream?"screenshare":"video"}),self._user.parentId&&(restartMsg.parentId=self._user.parentId),self._socketSendMessage(restartMsg)}self._trigger("peerRestart",targetMid,self.getPeerInfo(targetMid),!1,message.doIceRestart===!0)},Skylink.prototype._welcomeHandler=function(message){var self=this,targetMid=message.mid,isNewPeer=!1,userInfo=message.userInfo||{};if(userInfo.settings=userInfo.settings||{},userInfo.mediaStatus=userInfo.mediaStatus||{},userInfo.config={enableIceTrickle:"boolean"==typeof message.enableIceTrickle?message.enableIceTrickle:!0,enableIceRestart:"boolean"==typeof message.enableIceRestart?message.enableIceRestart:!1,enableDataChannel:"boolean"==typeof message.enableDataChannel?message.enableDataChannel:!0,priorityWeight:"number"==typeof message.weight?message.weight:0,receiveOnly:message.receiveOnly===!0,publishOnly:!!message.publishOnly},userInfo.parentId=message.parentId||null,userInfo.agent={name:"string"==typeof message.agent&&message.agent?message.agent:"other",version:function(){if(!message.version||"string"!=typeof message.version)return 0;if(message.version.indexOf(".")>-1){var parts=message.version.split(".");if(parts.length>2){var majorVer=parts[0]||"0";return parts.splice(0,1),parseFloat(majorVer+"."+parts.join("0"),10)}return parseFloat(message.version||"0",10)}return parseInt(message.version||"0",10)}(),os:"string"==typeof message.os&&message.os?message.os:"",pluginVersion:"string"==typeof message.temasysPluginVersion&&message.temasysPluginVersion?message.temasysPluginVersion:null,SMProtocolVersion:message.SMProtocolVersion&&"string"==typeof message.SMProtocolVersion?message.SMProtocolVersion:"0.1.1",DTProtocolVersion:message.DTProtocolVersion&&"string"==typeof message.DTProtocolVersion?message.DTProtocolVersion:"0.1.0"},log.log([targetMid,"RTCPeerConnection",null,'Peer "welcome" received ->'],message),"MCU"!==targetMid&&self._user.parentId&&self._user.parentId===targetMid)return void log.warn([targetMid,"RTCPeerConnection",null,'Discarding "welcome" for parentId case ->'],message);if(!self._peerInformations[targetMid]){isNewPeer=!0,self._peerInformations[targetMid]=userInfo;var hasScreenshare=userInfo.settings.video&&"object"==typeof userInfo.settings.video&&!!userInfo.settings.video.screenshare;self._addPeer(targetMid,{agent:userInfo.agent.name,version:userInfo.agent.version,os:userInfo.agent.os},!1,!1,message.receiveOnly,hasScreenshare),"MCU"===targetMid?(log.info([targetMid,"RTCPeerConnection",null,"MCU feature has been enabled"]),self._hasMCU=!0,self._trigger("serverPeerJoined",targetMid,self.SERVER_PEER_TYPE.MCU)):self._trigger("peerJoined",targetMid,self.getPeerInfo(targetMid),!1),self._trigger("handshakeProgress",self.HANDSHAKE_PROGRESS.ENTER,targetMid),self._trigger("handshakeProgress",self.HANDSHAKE_PROGRESS.WELCOME,targetMid)}if(self._peerMessagesStamps[targetMid]=self._peerMessagesStamps[targetMid]||{userData:0,audioMuted:0,videoMuted:0,hasWelcome:!1},self._hasMCU||self._user.priorityWeight>message.weight){if(self._peerMessagesStamps[targetMid].hasWelcome)return void log.warn([targetMid,"RTCPeerConnection",null,'Discarding extra "welcome" received.']);log.debug([targetMid,"RTCPeerConnection",null,"Starting negotiation"]),self._peerMessagesStamps[targetMid].hasWelcome=!0,self._doOffer(targetMid,!1,{agent:userInfo.agent.name,version:userInfo.agent.version,os:userInfo.agent.os},!0)}else{log.debug([targetMid,"RTCPeerConnection",null,"Waiting for peer to start negotiation."]);var welcomeMsg={type:self._SIG_MESSAGE_TYPE.WELCOME,mid:self._user.id,rid:self._user.room.session.rid,enableIceTrickle:self._options.enableIceTrickle,enableDataChannel:self._options.enableDataChannel,enableIceRestart:self._enableIceRestart,receiveOnly:self.getPeerInfo().config.receiveOnly,agent:window.webrtcDetectedBrowser,version:(window.webrtcDetectedVersion||0).toString(),os:window.navigator.platform,userInfo:self._getUserInfo(),target:targetMid,weight:self._user.priorityWeight,temasysPluginVersion:AdapterJS.WebRTCPlugin.plugin?AdapterJS.WebRTCPlugin.plugin.VERSION:null,SMProtocolVersion:self.SM_PROTOCOL_VERSION,DTProtocolVersion:self.DT_PROTOCOL_VERSION};self._user.connection.publishOnly&&(welcomeMsg.publishOnly={type:self._streams.screenshare&&self._streams.screenshare.stream?"screenshare":"video"}),self._user.parentId&&(welcomeMsg.parentId=self._user.parentId),self._socketSendMessage(welcomeMsg)}},Skylink.prototype._offerHandler=function(message){var self=this,targetMid=message.mid,pc=self._peerConnections[targetMid];if(!pc)return void log.error([targetMid,null,message.type,"Peer connection object not found. Unable to setRemoteDescription for offer"]);if(message.userInfo&&"object"==typeof message.userInfo){var userInfo=message.userInfo||{};self._peerInformations[targetMid].settings=userInfo.settings||{},self._peerInformations[targetMid].mediaStatus=userInfo.mediaStatus||{},self._peerInformations[targetMid].userData=userInfo.userData}log.log([targetMid,null,message.type,"Received offer from peer. Session description:"],clone(message));var offer=new RTCSessionDescription({type:message.type,sdp:self._hasMCU?message.sdp.split("\n").join("\r\n"):message.sdp});return log.log([targetMid,"RTCSessionDescription",message.type,"Session description object created"],offer),offer.sdp=self._removeSDPFilteredCandidates(targetMid,offer),offer.sdp=self._setSDPCodec(targetMid,offer),offer.sdp=self._setSDPBitrate(targetMid,offer),offer.sdp=self._setSDPOpusConfig(targetMid,offer),offer.sdp=self._removeSDPCodecs(targetMid,offer),offer.sdp=self._removeSDPREMBPackets(targetMid,offer),offer.sdp=self._handleSDPConnectionSettings(targetMid,offer,"remote"),log.log([targetMid,"RTCSessionDescription",message.type,"Updated remote offer ->"],offer.sdp),pc.signalingState!==self.PEER_CONNECTION_STATE.STABLE?void log.warn([targetMid,null,message.type,'Peer connection state is not in "stable" state for re-negotiation. Dropping message.'],{signalingState:pc.signalingState,isRestart:!!message.resend}):pc.processingRemoteSDP?void log.warn([targetMid,"RTCSessionDescription","offer","Dropping of setting local offer as there is another sessionDescription being processed ->"],offer):(pc.processingRemoteSDP=!0,"edge"!==window.webrtcDetectedBrowser||self._hasMCU&&"MCU"!==targetMid||self._addLocalMediaStreams(targetMid),void pc.setRemoteDescription(offer,function(){log.debug([targetMid,"RTCSessionDescription",message.type,"Remote description set"]),pc.setOffer="remote",pc.processingRemoteSDP=!1,self._trigger("handshakeProgress",self.HANDSHAKE_PROGRESS.OFFER,targetMid),self._addIceCandidateFromQueue(targetMid),self._doAnswer(targetMid)},function(error){self._trigger("handshakeProgress",self.HANDSHAKE_PROGRESS.ERROR,targetMid,error),pc.processingRemoteSDP=!1,log.error([targetMid,null,message.type,"Failed setting remote description:"],error)}))},Skylink.prototype._candidateHandler=function(message){var targetMid=message.mid;if(!message.candidate&&!message.id)return void log.warn([targetMid,"RTCIceCandidate",null,"Received invalid ICE candidate message ->"],message);var canId="can-"+(new Date).getTime(),candidateType=message.candidate.split(" ")[7]||"",candidate=new RTCIceCandidate({sdpMLineIndex:message.label,candidate:message.candidate,sdpMid:message.id});if(log.debug([targetMid,"RTCIceCandidate",canId+":"+candidateType,"Received ICE candidate ->"],candidate),this._peerEndOfCandidatesCounter[targetMid]=this._peerEndOfCandidatesCounter[targetMid]||{},this._peerEndOfCandidatesCounter[targetMid].len=this._peerEndOfCandidatesCounter[targetMid].len||0,this._peerEndOfCandidatesCounter[targetMid].hasSet=!1,this._peerEndOfCandidatesCounter[targetMid].len++,this._trigger("candidateProcessingState",this.CANDIDATE_PROCESSING_STATE.RECEIVED,targetMid,canId,candidateType,{candidate:candidate.candidate,sdpMid:candidate.sdpMid,sdpMLineIndex:candidate.sdpMLineIndex},null),!this._peerConnections[targetMid]||this._peerConnections[targetMid].signalingState===this.PEER_CONNECTION_STATE.CLOSED)return log.warn([targetMid,"RTCIceCandidate",canId+":"+candidateType,"Dropping ICE candidate as Peer connection does not exists or is closed"]),this._trigger("candidateProcessingState",this.CANDIDATE_PROCESSING_STATE.DROPPED,targetMid,canId,candidateType,{candidate:candidate.candidate,sdpMid:candidate.sdpMid,sdpMLineIndex:candidate.sdpMLineIndex},new Error("Failed processing ICE candidate as Peer connection does not exists or is closed.")),void this._signalingEndOfCandidates(targetMid);if(this._options.filterCandidatesType[candidateType]){if(!this._hasMCU||!this._forceTURN)return log.warn([targetMid,"RTCIceCandidate",canId+":"+candidateType,"Dropping received ICE candidate as it matches ICE candidate filtering flag ->"],candidate),this._trigger("candidateProcessingState",this.CANDIDATE_PROCESSING_STATE.DROPPED,targetMid,canId,candidateType,{candidate:candidate.candidate,sdpMid:candidate.sdpMid,sdpMLineIndex:candidate.sdpMLineIndex},new Error("Dropping of processing ICE candidate as it matches ICE candidate filtering flag.")),void this._signalingEndOfCandidates(targetMid);log.warn([targetMid,"RTCIceCandidate",canId+":"+candidateType,"Not dropping received ICE candidate as TURN connections are enforced as MCU is present (and act as a TURN itself) so filtering of ICE candidate flags are not honoured ->"],candidate)}this._peerConnections[targetMid].remoteDescription&&this._peerConnections[targetMid].remoteDescription.sdp&&this._peerConnections[targetMid].localDescription&&this._peerConnections[targetMid].localDescription.sdp?this._addIceCandidate(targetMid,canId,candidate):this._addIceCandidateToQueue(targetMid,canId,candidate),this._signalingEndOfCandidates(targetMid),this._gatheredCandidates[targetMid]||(this._gatheredCandidates[targetMid]={sending:{host:[],srflx:[],relay:[]},receiving:{host:[],srflx:[],relay:[]}}),this._gatheredCandidates[targetMid].receiving[candidateType].push({sdpMid:candidate.sdpMid,sdpMLineIndex:candidate.sdpMLineIndex,candidate:candidate.candidate})},Skylink.prototype._answerHandler=function(message){var self=this,targetMid=message.mid;log.log([targetMid,null,message.type,"Received answer from peer. Session description:"],clone(message));var pc=self._peerConnections[targetMid];if(!pc)return void log.error([targetMid,null,message.type,"Peer connection object not found. Unable to setRemoteDescription for answer"]);if(message.userInfo&&"object"==typeof message.userInfo){var userInfo=message.userInfo||{};self._peerInformations[targetMid].settings=userInfo.settings||{},self._peerInformations[targetMid].mediaStatus=userInfo.mediaStatus||{},self._peerInformations[targetMid].userData=userInfo.userData}var answer=new RTCSessionDescription({type:message.type,sdp:self._hasMCU?message.sdp.split("\n").join("\r\n"):message.sdp});return log.log([targetMid,"RTCSessionDescription",message.type,"Session description object created"],answer),answer.sdp=self._removeSDPFilteredCandidates(targetMid,answer),answer.sdp=self._setSDPCodec(targetMid,answer),answer.sdp=self._setSDPBitrate(targetMid,answer),answer.sdp=self._setSDPOpusConfig(targetMid,answer),answer.sdp=self._removeSDPCodecs(targetMid,answer),answer.sdp=self._removeSDPREMBPackets(targetMid,answer),answer.sdp=self._handleSDPConnectionSettings(targetMid,answer,"remote"),log.log([targetMid,"RTCSessionDescription",message.type,"Updated remote answer ->"],answer.sdp),pc.signalingState!==self.PEER_CONNECTION_STATE.HAVE_LOCAL_OFFER?void log.warn([targetMid,null,message.type,'Peer connection state is not in "have-local-offer" state for re-negotiation. Dropping message.'],{signalingState:pc.signalingState,isRestart:!!message.restart}):pc.processingRemoteSDP?void log.warn([targetMid,"RTCSessionDescription","answer","Dropping of setting local answer as there is another sessionDescription being processed ->"],answer):(pc.processingRemoteSDP=!0,void pc.setRemoteDescription(answer,function(){log.debug([targetMid,null,message.type,"Remote description set"]),pc.setAnswer="remote",pc.processingRemoteSDP=!1,self._trigger("handshakeProgress",self.HANDSHAKE_PROGRESS.ANSWER,targetMid),self._addIceCandidateFromQueue(targetMid),self._peerMessagesStamps[targetMid]&&(self._peerMessagesStamps[targetMid].hasRestart=!1),self._dataChannels[targetMid]&&(-1===pc.remoteDescription.sdp.indexOf("m=application")||pc.remoteDescription.sdp.indexOf("m=application 0")>0)&&(log.warn([targetMid,"RTCPeerConnection",null,"Closing all datachannels as they were rejected."]),self._closeDataChannel(targetMid))},function(error){self._trigger("handshakeProgress",self.HANDSHAKE_PROGRESS.ERROR,targetMid,error),pc.processingRemoteSDP=!1,log.error([targetMid,null,message.type,"Failed setting remote description:"],{error:error,state:pc.signalingState})}))},Skylink.prototype._isLowerThanVersion=function(agentVer,requiredVer){for(var partsA=agentVer.split("."),partsB=requiredVer.split("."),i=0;i<partsB.length;i++)if(parseInt(partsA[i]||"0",10)<parseInt(partsB[i]||"0",10))return!0;return!1},Skylink.prototype._muteStreams=function(){var self=this,hasVideo=!1,hasAudio=!1,muteFn=function(stream){for(var audioTracks=stream.getAudioTracks(),videoTracks=stream.getVideoTracks(),a=0;a<audioTracks.length;a++)audioTracks[a].enabled=!self._streamsMutedSettings.audioMuted,hasAudio=!0;for(var v=0;v<videoTracks.length;v++)videoTracks[v].enabled=!self._streamsMutedSettings.videoMuted,hasVideo=!0};return self._streams.userMedia&&self._streams.userMedia.stream&&muteFn(self._streams.userMedia.stream),self._streams.screenshare&&self._streams.screenshare.stream&&muteFn(self._streams.screenshare.stream),self._streams.screenshare&&self._streams.screenshare.streamClone&&muteFn(self._streams.screenshare.streamClone),log.debug("Updated Streams muted status ->",self._streamsMutedSettings),{hasVideo:hasVideo,hasAudio:hasAudio}},Skylink.prototype._stopStreams=function(options){var self=this,stopFn=function(stream){var streamId=stream.id||stream.label;log.debug([null,"MediaStream",streamId,"Stopping Stream ->"],stream);try{for(var audioTracks=stream.getAudioTracks(),videoTracks=stream.getVideoTracks(),a=0;a<audioTracks.length;a++)audioTracks[a].stop();for(var v=0;v<videoTracks.length;v++)videoTracks[v].stop()}catch(error){stream.stop()}self._streamsStoppedCbs[streamId]&&(self._streamsStoppedCbs[streamId](),delete self._streamsStoppedCbs[streamId])},stopUserMedia=!1,stopScreenshare=!1,hasStoppedMedia=!1;"object"==typeof options&&(stopUserMedia=options.userMedia===!0,stopScreenshare=options.screenshare===!0),stopUserMedia&&self._streams.userMedia&&(self._streams.userMedia.stream&&stopFn(self._streams.userMedia.stream),self._streams.userMedia=null,hasStoppedMedia=!0),stopScreenshare&&self._streams.screenshare&&(self._streams.screenshare.streamClone&&stopFn(self._streams.screenshare.streamClone),self._streams.screenshare.stream&&stopFn(self._streams.screenshare.stream),self._streams.screenshare=null,hasStoppedMedia=!0),self._user.room.connected&&hasStoppedMedia&&self._trigger("peerUpdated",self._user.id,self.getPeerInfo(),!0),log.log("Stopping Streams with settings ->",options)},Skylink.prototype._parseStreamSettings=function(options){var settings={settings:{audio:!1,video:!1},mutedSettings:{shouldAudioMuted:!1,shouldVideoMuted:!1},getUserMediaSettings:{audio:!1,video:!1}};return options.audio&&(settings.settings.audio={stereo:!1,exactConstraints:!!options.useExactConstraints,echoCancellation:!1},settings.getUserMediaSettings.audio={echoCancellation:!1},"object"==typeof options.audio&&("boolean"==typeof options.audio.stereo&&(settings.settings.audio.stereo=options.audio.stereo),"boolean"==typeof options.audio.useinbandfec&&(settings.settings.audio.useinbandfec=options.audio.useinbandfec),"boolean"==typeof options.audio.usedtx&&(settings.settings.audio.usedtx=options.audio.usedtx),"number"==typeof options.audio.maxplaybackrate&&options.audio.maxplaybackrate>=8e3&&options.audio.maxplaybackrate<=48e3&&(settings.settings.audio.maxplaybackrate=options.audio.maxplaybackrate),"boolean"==typeof options.audio.mute&&(settings.mutedSettings.shouldAudioMuted=options.audio.mute),"edge"!==window.webrtcDetectedBrowser&&("boolean"==typeof options.audio.echoCancellation&&(settings.settings.audio.echoCancellation=options.audio.echoCancellation,settings.getUserMediaSettings.audio.echoCancellation=options.audio.echoCancellation),Array.isArray(options.audio.optional)&&(settings.settings.audio.optional=clone(options.audio.optional),settings.getUserMediaSettings.audio.optional=clone(options.audio.optional)),options.audio.deviceId&&"string"==typeof options.audio.deviceId&&"firefox"!==window.webrtcDetectedBrowser&&(settings.settings.audio.deviceId=options.audio.deviceId,options.useExactConstraints?settings.getUserMediaSettings.audio.deviceId={exact:options.audio.deviceId}:(Array.isArray(settings.getUserMediaSettings.audio.optional)||(settings.getUserMediaSettings.audio.optional=[]),settings.getUserMediaSettings.audio.optional.push({sourceId:options.audio.deviceId}))))),"edge"===window.webrtcDetectedBrowser&&(settings.getUserMediaSettings.audio=!0)),options.video&&(settings.settings.video={resolution:clone(this.VIDEO_RESOLUTION.VGA),screenshare:!1,exactConstraints:!!options.useExactConstraints},settings.getUserMediaSettings.video={},"object"==typeof options.video?("boolean"==typeof options.video.mute&&(settings.mutedSettings.shouldVideoMuted=options.video.mute),Array.isArray(options.video.optional)&&(settings.settings.video.optional=clone(options.video.optional),settings.getUserMediaSettings.video.optional=clone(options.video.optional)),options.video.deviceId&&"string"==typeof options.video.deviceId&&"firefox"!==window.webrtcDetectedBrowser&&(settings.settings.video.deviceId=options.video.deviceId,options.useExactConstraints?settings.getUserMediaSettings.video.deviceId={exact:options.video.deviceId}:(Array.isArray(settings.getUserMediaSettings.video.optional)||(settings.getUserMediaSettings.video.optional=[]),settings.getUserMediaSettings.video.optional.push({sourceId:options.video.deviceId}))),options.video.resolution&&"object"==typeof options.video.resolution&&((options.video.resolution.width&&"object"==typeof options.video.resolution.width||"number"==typeof options.video.resolution.width)&&(settings.settings.video.resolution.width=options.video.resolution.width),(options.video.resolution.height&&"object"==typeof options.video.resolution.height||"number"==typeof options.video.resolution.height)&&(settings.settings.video.resolution.height=options.video.resolution.height)),settings.getUserMediaSettings.video.width="object"==typeof settings.settings.video.resolution.width?settings.settings.video.resolution.width:options.useExactConstraints?{exact:settings.settings.video.resolution.width}:{max:settings.settings.video.resolution.width},settings.getUserMediaSettings.video.height="object"==typeof settings.settings.video.resolution.height?settings.settings.video.resolution.height:options.useExactConstraints?{exact:settings.settings.video.resolution.height}:{max:settings.settings.video.resolution.height},(options.video.frameRate&&"object"==typeof options.video.frameRate||"number"==typeof options.video.frameRate&&!self._isUsingPlugin)&&(settings.settings.video.frameRate=options.video.frameRate,settings.getUserMediaSettings.video.frameRate="object"==typeof settings.settings.video.frameRate?settings.settings.video.frameRate:options.useExactConstraints?{exact:settings.settings.video.frameRate}:{max:settings.settings.video.frameRate}),options.video.facingMode&&["string","object"].indexOf(typeof options.video.facingMode)>-1&&self._isUsingPlugin&&(settings.settings.video.facingMode=options.video.facingMode,settings.getUserMediaSettings.video.facingMode="object"==typeof settings.settings.video.facingMode?settings.settings.video.facingMode:options.useExactConstraints?{exact:settings.settings.video.facingMode}:{max:settings.settings.video.facingMode})):options.useExactConstraints?settings.getUserMediaSettings.video={width:{exact:settings.settings.video.resolution.width},height:{exact:settings.settings.video.resolution.height}}:settings.getUserMediaSettings.video.mandatory={maxWidth:settings.settings.video.resolution.width,maxHeight:settings.settings.video.resolution.height},"edge"===window.webrtcDetectedBrowser&&(settings.settings.video={screenshare:!1,exactConstraints:!!options.useExactConstraints},settings.getUserMediaSettings.video=!0)),settings},Skylink.prototype._onStreamAccessSuccess=function(stream,settings,isScreenSharing,isAudioFallback){var self=this,streamId=stream.id||stream.label;if(log.log([null,"MediaStream",streamId,"Has access to stream ->"],stream),!isScreenSharing&&self._streams.userMedia?self._stopStreams({userMedia:!0,screenshare:!1}):isScreenSharing&&self._streams.screenshare&&self._stopStreams({userMedia:!1,screenshare:!0}),self._streamsStoppedCbs[streamId]=function(){log.log([null,"MediaStream",streamId,"Stream has ended"]),self._trigger("mediaAccessStopped",!!isScreenSharing,!!isAudioFallback,streamId),self._user.room.connected&&(log.debug([null,"MediaStream",streamId,"Sending Stream ended status to Peers"]),self._socketSendMessage({type:self._SIG_MESSAGE_TYPE.STREAM,mid:self._user.id,rid:self._user.room.session.rid,streamId:streamId,settings:settings.settings,status:"ended"}),self._trigger("streamEnded",self._user.id,self.getPeerInfo(),!0,!!isScreenSharing,streamId),isScreenSharing&&self._streams.screenshare&&self._streams.screenshare.stream&&(self._streams.screenshare.stream.id||self._streams.screenshare.stream.label)===streamId?self._streams.screenshare=null:!isScreenSharing&&self._streams.userMedia&&self._streams.userMedia.stream&&(self._streams.userMedia.stream.id||self._streams.userMedia.stream.label)===streamId&&(self._streams.userMedia=null))},["chrome","opera"].indexOf(window.webrtcDetectedBrowser)>-1?stream.oninactive=function(){self._streamsStoppedCbs[streamId]&&(self._streamsStoppedCbs[streamId](),delete self._streamsStoppedCbs[streamId])}:"firefox"===window.webrtcDetectedBrowser?stream.endedInterval=setInterval(function(){"undefined"==typeof stream.recordedTime&&(stream.recordedTime=0),stream.recordedTime===stream.currentTime?(clearInterval(stream.endedInterval),self._streamsStoppedCbs[streamId]&&(self._streamsStoppedCbs[streamId](),delete self._streamsStoppedCbs[streamId])):stream.recordedTime=stream.currentTime},1e3):stream.onended=function(){self._streamsStoppedCbs[streamId]&&(self._streamsStoppedCbs[streamId](),delete self._streamsStoppedCbs[streamId])},settings.settings.audio&&0===stream.getAudioTracks().length||settings.settings.video&&0===stream.getVideoTracks().length){var tracksNotSameError="Expected audio tracks length with "+(settings.settings.audio?"1":"0")+" and video tracks length with "+(settings.settings.video?"1":"0")+" but received audio tracks length with "+stream.getAudioTracks().length+" and video tracks length with "+stream.getVideoTracks().length;log.warn([null,"MediaStream",streamId,tracksNotSameError]);var requireAudio=!!settings.settings.audio,requireVideo=!!settings.settings.video;settings.settings.audio&&0===stream.getAudioTracks().length&&(settings.settings.audio=!1),settings.settings.video&&0===stream.getVideoTracks().length&&(settings.settings.video=!1),self._trigger("mediaAccessFallback",{error:new Error(tracksNotSameError),diff:{video:{expected:requireVideo?1:0,received:stream.getVideoTracks().length},audio:{expected:requireAudio?1:0,received:stream.getAudioTracks().length}}},self.MEDIA_ACCESS_FALLBACK_STATE.FALLBACKED,!!isScreenSharing,!!isAudioFallback,streamId)}self._streams[isScreenSharing?"screenshare":"userMedia"]={stream:stream,settings:settings.settings,constraints:settings.getUserMediaSettings},self._muteStreams(),self._trigger("mediaAccessSuccess",stream,!!isScreenSharing,!!isAudioFallback,streamId)},Skylink.prototype._onStreamAccessError=function(error,settings,isScreenSharing){var self=this;return!isScreenSharing&&settings.settings.audio&&settings.settings.video&&self._options.audioFallback?(log.debug("Fallbacking to retrieve audio only Stream"),self._trigger("mediaAccessFallback",{error:error,diff:null},self.MEDIA_ACCESS_FALLBACK_STATE.FALLBACKING,!1,!0),void navigator.getUserMedia({audio:!0},function(stream){self._onStreamAccessSuccess(stream,settings,!1,!0)},function(error){log.error("Failed fallbacking to retrieve audio only Stream ->",error),self._trigger("mediaAccessError",error,!1,!0),self._trigger("mediaAccessFallback",{error:error,diff:null},self.MEDIA_ACCESS_FALLBACK_STATE.ERROR,!1,!0)})):(log.error("Failed retrieving "+(isScreenSharing?"screensharing":"camera")+" Stream ->",error),void self._trigger("mediaAccessError",error,!!isScreenSharing,!1))},Skylink.prototype._onRemoteStreamAdded=function(targetMid,stream,isScreenSharing){var self=this;return self._peerInformations[targetMid]?(log.log([targetMid,"MediaStream",stream.id,"Received remote stream ->"],stream),isScreenSharing&&log.log([targetMid,"MediaStream",stream.id,"Peer is having a screensharing session with user"]),self._trigger("incomingStream",targetMid,stream,!1,self.getPeerInfo(targetMid),isScreenSharing,stream.id||stream.label),void self._trigger("peerUpdated",targetMid,self.getPeerInfo(targetMid),!1)):void log.warn([targetMid,"MediaStream",stream.id,"Received remote stream when peer is not connected. Ignoring stream ->"],stream)},Skylink.prototype._addLocalMediaStreams=function(peerId){var self=this;try{log.log([peerId,null,null,"Adding local stream"]);var pc=self._peerConnections[peerId];if(pc)if(pc.signalingState!==self.PEER_CONNECTION_STATE.CLOSED){var updateStreamFn=function(updatedStream){for(var hasStream=!1,streams=pc.getLocalStreams(),i=0;i<streams.length;i++)null===updatedStream||streams[i].id!==updatedStream.id?pc.removeStream(streams[i]):hasStream=!0;null===updatedStream||hasStream||pc.addStream(updatedStream)};self._streams.screenshare&&self._streams.screenshare.stream?(log.debug([peerId,"MediaStream",null,"Sending screen"],self._streams.screenshare.stream),updateStreamFn(self._streams.screenshare.stream)):self._streams.userMedia&&self._streams.userMedia.stream?(log.debug([peerId,"MediaStream",null,"Sending stream"],self._streams.userMedia.stream),updateStreamFn(self._streams.userMedia.stream)):(log.warn([peerId,"MediaStream",null,"No media to send. Will be only receiving"]),updateStreamFn(null))}else log.warn([peerId,"MediaStream",null,"Not adding any stream as signalingState is closed"]);else log.warn([peerId,"MediaStream",self._mediaStream,"Not adding stream as peerconnection object does not exists"]);
}catch(error){(error.message||"").indexOf("already added")>-1?log.warn([peerId,null,null,"Not re-adding stream as LocalMediaStream is already added"],error):log.error([peerId,null,null,"Failed adding local stream"],error)}},Skylink.prototype._handleEndedStreams=function(peerId,checkStreamId){var self=this;self._streamsSession[peerId]=self._streamsSession[peerId]||{};var renderEndedFn=function(streamId){var shouldTrigger=!!self._streamsSession[peerId][streamId];if(!checkStreamId&&self._peerConnections[peerId]&&self._peerConnections[peerId].signalingState!==self.PEER_CONNECTION_STATE.CLOSED)for(var streams=self._peerConnections[peerId].getRemoteStreams(),i=0;i<streams.length;i++)if(streamId===(streams[i].id||streams[i].label)){shouldTrigger=!1;break}if(shouldTrigger){var peerInfo=clone(self.getPeerInfo(peerId));peerInfo.settings.audio=clone(self._streamsSession[peerId][streamId].audio),peerInfo.settings.video=clone(self._streamsSession[peerId][streamId].video);var hasScreenshare=peerInfo.settings.video&&"object"==typeof peerInfo.settings.video&&!!peerInfo.settings.video.screenshare;self._streamsSession[peerId][streamId]=!1,self._trigger("streamEnded",peerId,peerInfo,!1,hasScreenshare,streamId)}};if(checkStreamId)renderEndedFn(checkStreamId);else for(var prop in self._streamsSession[peerId])self._streamsSession[peerId].hasOwnProperty(prop)&&self._streamsSession[peerId][prop]&&renderEndedFn(prop)},Skylink.prototype._utilsFactory={forEach:function(obj,fn){if(Array.isArray(obj))if("function"==typeof obj.forEach)obj.forEach(fn);else for(var i=0;i<obj.length;i++)fn(obj[i],i);else for(var p in obj)obj.hasOwnProperty(p)&&fn(obj[p],p)},clone:function(obj){if(!obj||"object"!=typeof obj)return obj;if(Array.isArray(obj))return obj.concat([]);try{return JSON.parse(JSON.stringify(obj))}catch(e){var copy={},fn=function(item){utils.forEach(item,function(subitem,prop){Array.isArray(subitem)?copy[prop]=subitem.concat([]):subitem&&"object"==typeof subitem?copy[prop]=fn(subitem):copy[prop]=subitem})};fn(obj)}return obj}}}(this);